      ******************************************************************
      *$Header: $
      ******************************************************************
      *
      *     システムＩＤ   : T-STAR
      *     システム名称   : 次期TSTARシステム
      *     プログラム名称 : 電文保持アクセスルーチン(SELECT)
      *     処理概要       : 電文保持アクセスルーチン(SELECT)
      *     参照ＤＢ       : 電文保持(TKDYAA32)
      *     引数           : IN  利用会社コード
      *                    : IN  SELECT条件
      *                    : OUT DBレイアウトコピー句
      *                    : OUT RTNパッケージ
      *     改訂履歴
      *     年月日     区分  所属       担当者  内容
      *     ---------- ----  ---------  ------  ------------------------
      *     20071102   新規  SCS                新規作成
      ******************************************************************
      ******************************************************************
       IDENTIFICATION         DIVISION.
       PROGRAM-ID.    TSDYAA32.
       AUTHOR.        Nomura.
       DATE-WRITTEN.  07-11-02.
       DATE-COMPILED.
      ******************************************************************
      *
      *                 環  境  部
      *
      ******************************************************************
       ENVIRONMENT            DIVISION.
       CONFIGURATION          SECTION.
       SOURCE-COMPUTER.       L1000V.
      *SOURCE-COMPUTER.       L1000V   WITH DEBUGGING MODE.
       OBJECT-COMPUTER.       RP5470.
       INPUT-OUTPUT           SECTION.
       FILE-CONTROL.
      ******************************************************************
      *
      *                 デ  ー  タ  部
      *
      ******************************************************************
       DATA                   DIVISION.
       WORKING-STORAGE        SECTION.
       01  IDNAME                  PIC  X(80)  VALUE
       "$Id: $".
      ******************************************************************
      *                コンスタント  エリア
      ******************************************************************
       01  CONSTANT-AREA.
         05  CNS-PROGRAM-ID        PIC  X(08)  VALUE "TSDYAA32".
         05  CNS-TBL-TKDYAA32      PIC  X(08)  VALUE "TKDYAA32".
         05  CNS-RET-CD-NORMAL     PIC  X(03)  VALUE "000".
         05  CNS-RET-CD-NODATA     PIC  X(03)  VALUE "110".
         05  CNS-RET-CD-NOTONE     PIC  X(03)  VALUE "002".
         05  CNS-RET-CD-ORAERR     PIC  X(03)  VALUE "900".
         05  CNS-RET-CD-SYSERR     PIC  X(03)  VALUE "901".
         05  CNS-RET-CD-HIKANLOG   PIC  X(03)  VALUE "320".
         05  CNS-SQL-NORMAL        PIC S9(04)  COMP-3 VALUE +0000.
         05  CNS-SQL-NOTFOUND      PIC S9(04)  COMP-3 VALUE +1403.
         05  CNS-SQL-RISOSU-BIZI   PIC S9(04)  COMP-3 VALUE -0054.
         05  CNS-ERR-01            PIC  X(03)  VALUE "E01".
         05  CNS-ERR-02            PIC  X(03)  VALUE "E02".
         05  CNS-ERR-03            PIC  X(03)  VALUE "E03".
         05  CNS-ERR-04            PIC  X(03)  VALUE "E04".
         05  CNS-ERR-05            PIC  X(03)  VALUE "E05".
         05  CNS-0                 PIC  X(01)  VALUE "0".
         05  CNS-1                 PIC  X(01)  VALUE "1".
      ******************************************************************
      *                フラグエリア
      ******************************************************************
       01  FLAG-AREA.
      *----------  ｶｰｿﾙﾃﾞｰﾀ終了フラグ
         05  FLG-FETCH-END         PIC  X(01).
      *----------  ｶｰｿﾙCLOSE判定フラグ
         05  FLG-CR-CLS            PIC  X(01).
      ******************************************************************
      *                ワ−クエリア
      ******************************************************************
       01  WK-AREA.
      *---------- ワークSPACE
         05  WK-SPACE              PIC  9(05).
      *---------- ワ−クCOUNT
         05  WK-COUNT              PIC  9(02).
      *---------- ワ−クテーブルID
         05  WK-TBL-ID             PIC  X(13).
      *---------- ワ−クエラーID
         05  WK-ERR-ID             PIC  X(03).
      *---------- ワ−ク詳細リターンコード
         05  WK-DETAIL-RTN-CD      PIC S9(09).
         05  WK-RIYO-CMP-CD        PIC  X(04).
         05  WK-SYORI-YMD          PIC S9(08).
         05  WK-KIDOU-ID           PIC  X(04).
         05  WK-UPD-DATE           PIC  X(14).
      *---------- ワ−クポジション
         05  WK-ERR-POS            PIC  X(04).
      *---------- ワ−クフリーメッセージ
         05  WK-FREE-MSG           PIC  X(2000).
      ******************************************************************
      *                サブプログラム  パラメ−タ  エリア
      ******************************************************************
      *----------  SCZY1160 テーブルID取得ルーチン
       01  PARM-SCZY1160-INOUT.
      *----------  テーブルID取得ルーチンコピー句
         COPY  "SCZY1160.cpy".
       01  PARM-SCZY1160-RTNPKG.
         05  PARM-SCZY1160-ARG3.
      *----------  RTNパッケージ
           COPY  "CZRTNPACKAGE.cpy".
      *----------  SCZY1170 リターンパッケージセットルーチン
       01  PARM-SCZY1170-INOUT.
      *----------  リターンパッケージセットルーチンコピー句
         COPY  "SCZY1170.cpy".
       01  PARM-SCZY1170-RTNPKG.
         05  PARM-SCZY1170-ARG2.
      *----------  RTNパッケージ
           COPY  "CZRTNPACKAGE.cpy".
      ******************************************************************
      *                ＳＱＬ通信領域
      ******************************************************************
           EXEC  SQL  INCLUDE  SQLCA  END-EXEC.
           EXEC  SQL  BEGIN    DECLARE  SECTION  END-EXEC.
       01  ORA-WORKING-AREA.
      *----------  SQL条件ワーク
         05  SQLSTMT                         PIC  X(15000) VARYING.
      *----------  DBレイアウト
         05  H-TBL.
      *----------  利用会社コード
           10  RIYO-CMP-CD                   PIC  X(04).
      *----------  処理実行日
           10  SYORI-YMD                     PIC  S9(08).
      *----------  起動ID
           10  KIDOU-ID                      PIC  X(04).
      *----------  電文情報
           10  DENBUN-INFO                   PIC  X(409600).
      *----------  更新日時
           10  UPD-DATE                      PIC  X(14).
      *----------  更新ログインユーザ会社コード
           10  UPD-LOGIN-CMP-CD              PIC  X(04).
      *----------  更新ユーザID
           10  UPD-SID                       PIC  X(20).
      *----------  更新プログラムID
           10  UPD-PGMID                     PIC  X(16).
           EXEC  SQL  END      DECLARE  SECTION  END-EXEC.
      ******************************************************************
      *                 連絡節
      ******************************************************************
       LINKAGE                SECTION.
       01  PARM-SELECT-INOUT.
         05  PARM-SELECT-ARG1.
      *----------  利用会社コード
           10  RIYO-CMP-CD         PIC  X(04).
      *----------  SELECT条件
         05  PARM-SELECT-ARG2.
           10  RIYO-CMP-CD         PIC  X(04).
           10  SYORI-YMD           PIC  S9(08).
           10  KIDOU-ID            PIC  X(04).
           10  UPD-DATE            PIC  X(14).
           10  LOCK-KBN            PIC  X(01).
         05  PARM-SELECT-ARG3.
      *----------  DBレイアウトコピー句
           10  TBL-LAYOUT.
             COPY  "TKDYAA32.cpy".
       01  PARM-SELECT-RTNPKG.
         05  PARM-SELECT-ARG4.
      *----------  RTNパッケージ
           10  TBL-RTNPKG.
             COPY  "CZRTNPACKAGE.cpy".
      ******************************************************************
      *
      *        PROCEDURE      DIVISION
      *
      ******************************************************************
       PROCEDURE              DIVISION
           USING  PARM-SELECT-INOUT
                  PARM-SELECT-RTNPKG.
      ******************************************************************
      *                 SELECT処理
      ******************************************************************
       BASE-RTN               SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "***  TSDYAA32処理  START  ***"
      *-----------------------------------------------------------------
      *----------  初期処理
           PERFORM  INIT-RTN
      *----------  メイン処理
           PERFORM  MAIN-RTN
      *----------  終了処理
           PERFORM  END-RTN.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "***  TSDYAA32処理  END  ***".
      *-----------------------------------------------------------------
       BASE-EXT.
           GOBACK.
      ******************************************************************
      *                 初期処理
      ******************************************************************
       INIT-RTN               SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "***  INIT-RTN  START  ***"
      *-----------------------------------------------------------------
      *----------  初期化
           INITIALIZE     WK-AREA
                          FLAG-AREA
                          ORA-WORKING-AREA
                          PARM-SCZY1160-INOUT
                          PARM-SCZY1160-RTNPKG
                          PARM-SCZY1170-INOUT
                          PARM-SCZY1170-RTNPKG
                          PARM-SELECT-ARG3   OF  PARM-SELECT-INOUT
                          PARM-SELECT-ARG4   OF  PARM-SELECT-RTNPKG.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "WK-AREA            =["  WK-AREA             "]"
      D    DISPLAY  "FLAG-AREA          =["  FLAG-AREA           "]"
      D    DISPLAY  "ORA-WORKING-AREA   =["  ORA-WORKING-AREA    "]"
      D    DISPLAY  "PARM-SCZY1160-INOUT=["  PARM-SCZY1160-INOUT "]"
      D    DISPLAY  "PARM-SCZY1160-RTNPKG=[" PARM-SCZY1160-RTNPKG"]"
      D    DISPLAY  "PARM-SCZY1170-INOUT=["  PARM-SCZY1170-INOUT "]"
      D    DISPLAY  "PARM-SCZY1170-RTNPKG=[" PARM-SCZY1170-RTNPKG"]"
      D    DISPLAY  "PARM-SELECT-ARG2   =["  PARM-SELECT-ARG2    "]"
      D    DISPLAY  "PARM-SELECT-ARG3   =["  PARM-SELECT-ARG3    "]"
      D    DISPLAY  "***  INIT-RTN  END  ***".
      *-----------------------------------------------------------------
       INIT-EXT.
           EXIT.
      ******************************************************************
      *                 メイン処理
      ******************************************************************
       MAIN-RTN               SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*****  メイン処理  START  *****"
      D    DISPLAY  "テーブルID取得ルーチンSCZY1160開始"
      *-----------------------------------------------------------------
      *----------  テーブルID取得ルーチンをコールする
      *----------  利用会社コード
           MOVE  RIYO-CMP-CD                 OF  PARM-SELECT-ARG1
             TO  RIYO-CMP-CD                 OF  PARM-SCZY1160-ARG1
      *----------  テーブルID
           MOVE  CNS-TBL-TKDYAA32
             TO  TBL-ID                      OF  PARM-SCZY1160-ARG1(1)
           CALL  "SCZY1160"                  USING  PARM-SCZY1160-INOUT
                                                    PARM-SCZY1160-RTNPKG
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "テーブルID取得ルーチンSCZY1160終了"
      D    DISPLAY  "RTN-CD("  COUNTER  OF  PARM-SCZY1160-ARG3
      D      ") OF SCZY1160=["  RTN-CD  OF
      D      PARM-SCZY1160-ARG3(COUNTER  OF  PARM-SCZY1160-ARG3)  "]"
      *-----------------------------------------------------------------
           IF  RTN-CD
             OF  PARM-SCZY1160-ARG3(COUNTER  OF  PARM-SCZY1160-ARG3)
                                             NOT =  CNS-RET-CD-NORMAL
           THEN
               MOVE  CNS-ERR-04              TO  WK-ERR-ID
               MOVE  "0001"                  TO  WK-ERR-POS
               PERFORM  ERR-RTN
           ELSE
               MOVE  HENSYUGO-TBL-ID         OF  PARM-SCZY1160-ARG2(1)
                 TO  WK-TBL-ID
           END-IF
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "WK-TBL-ID          =["  WK-TBL-ID "]"
      *-----------------------------------------------------------------
      *----------  ＳＱＬ文作成
           MOVE  RIYO-CMP-CD            OF  PARM-SELECT-ARG2
                                        TO  WK-RIYO-CMP-CD
           MOVE  SYORI-YMD              OF  PARM-SELECT-ARG2
                                        TO  WK-SYORI-YMD
           MOVE  KIDOU-ID               OF  PARM-SELECT-ARG2
                                        TO  WK-KIDOU-ID
           MOVE  UPD-DATE               OF  PARM-SELECT-ARG2
                                        TO  WK-UPD-DATE
           MOVE  1                      TO  SQLSTMT-LEN
           STRING  "SELECT "
      *----------  利用会社コード
                          "RIYO_CMP_CD,"
      *----------  処理実行日
                          "SYORI_YMD,"
      *----------  起動ID
                          "KIDOU_ID,"
      *----------  電文情報
                          "DENBUN_INFO,"
      *----------  更新日時
                          "TO_CHAR(UPD_DATE,'YYYYMMDDHH24MISS'),"
      *----------  更新ログインユーザ会社コード
                          "UPD_LOGIN_CMP_CD,"
      *----------  更新ユーザID
                          "UPD_SID,"
      *----------  更新プログラムID
                          "UPD_PGMID"
                          " FROM "  WK-TBL-ID  " "
                          "WHERE RIYO_CMP_CD = :V1 "
                          "AND SYORI_YMD = :V2 "
                          "AND KIDOU_ID = :V3 "
               DELIMITED BY SIZE
               INTO  SQLSTMT-ARR
               WITH  POINTER  SQLSTMT-LEN
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "UPD-DATE   OF  PARM-SELECT-ARG2=["
      D              UPD-DATE   OF  PARM-SELECT-ARG2"]"
      *-----------------------------------------------------------------
           IF  UPD-DATE                      OF  PARM-SELECT-ARG2
                                             NOT  =  SPACE
           THEN
               STRING  "AND UPD_DATE = TO_DATE(:V6,'YYYYMMDDHH24MISS') "     
      
                   DELIMITED BY SIZE
                   INTO  SQLSTMT-ARR
                   WITH  POINTER  SQLSTMT-LEN
           END-IF        
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "LOCK-KBN   OF  PARM-SELECT-ARG2=["
      D              LOCK-KBN   OF  PARM-SELECT-ARG2"]"
      *-----------------------------------------------------------------
           IF  LOCK-KBN                      OF  PARM-SELECT-ARG2
               = "1"
             STRING  " FOR UPDATE NOWAIT "
                 DELIMITED BY SIZE
                 INTO  SQLSTMT-ARR
                 WITH  POINTER  SQLSTMT-LEN
           END-IF
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "SQLSTMT-LEN        =["  SQLSTMT-LEN  "]"
      D    DISPLAY  "SQLSTMT-ARR        =["  SQLSTMT-ARR  "]"
      *-----------------------------------------------------------------
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "V1=["RIYO-CMP-CD OF PARM-SELECT-ARG2        "]"
      D    DISPLAY  "V2=["SYORI-YMD   OF PARM-SELECT-ARG2        "]"
      D    DISPLAY  "V3=["KIDOU-ID    OF PARM-SELECT-ARG2        "]"
      *-----------------------------------------------------------------
           STRING  SQLSTMT-ARR
                   "[V1 :"WK-RIYO-CMP-CD   "]"
                   "[V2 :"WK-SYORI-YMD     "]"
                   "[V3 :"WK-KIDOU-ID      "]"
           DELIMITED  BY  SIZE
           INTO  WK-FREE-MSG
      *----------  ＳＱＬ文 PREPARE
           EXEC SQL
               PREPARE S01  FROM :SQLSTMT
           END-EXEC
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "SQLCODE(PREPARE)   =["  SQLCODE  "]"
      *-----------------------------------------------------------------
           IF  SQLCODE                       NOT = CNS-SQL-NORMAL
           THEN
               MOVE  CNS-ERR-03              TO  WK-ERR-ID
               MOVE  "0002"                  TO  WK-ERR-POS
               MOVE  SQLCODE                 TO  WK-DETAIL-RTN-CD
               PERFORM  ERR-RTN
           END-IF
      *----------  カーソル DECLARE
           EXEC SQL
               DECLARE CR01 CURSOR  FOR S01
           END-EXEC
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "SQLCODE(DECLARE)   =["  SQLCODE  "]"
      *-----------------------------------------------------------------
           IF  SQLCODE                       NOT = CNS-SQL-NORMAL
           THEN
               MOVE  CNS-ERR-03              TO  WK-ERR-ID
               MOVE  "0003"                  TO  WK-ERR-POS
               MOVE  SQLCODE                 TO  WK-DETAIL-RTN-CD
               PERFORM  ERR-RTN
           END-IF
      *----------  カーソル OPEN
           IF  UPD-DATE                      OF  PARM-SELECT-ARG2
                                             NOT  =  SPACE
           THEN
           EXEC SQL
               OPEN  CR01
               USING  :WK-RIYO-CMP-CD,
                      :WK-SYORI-YMD,
                      :WK-KIDOU-ID,
                      :WK-UPD-DATE
           END-EXEC
           ELSE
           EXEC SQL
               OPEN  CR01
               USING  :WK-RIYO-CMP-CD,
                      :WK-SYORI-YMD,
                      :WK-KIDOU-ID
           END-EXEC
           END-IF
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "SQLCODE(OPEN)      =["  SQLCODE  "]"
      *-----------------------------------------------------------------
           IF  SQLCODE                       NOT = CNS-SQL-NORMAL
           THEN
               IF  SQLCODE                   = CNS-SQL-RISOSU-BIZI
               THEN
                 MOVE  CNS-ERR-05            TO  WK-ERR-ID
                 MOVE  "0009"                TO  WK-ERR-POS
                 MOVE  SQLCODE               TO  WK-DETAIL-RTN-CD
                 PERFORM  ERR-RTN
               ELSE
                 MOVE  CNS-ERR-03            TO  WK-ERR-ID
                 MOVE  "0004"                TO  WK-ERR-POS
                 MOVE  SQLCODE               TO  WK-DETAIL-RTN-CD
                 PERFORM  ERR-RTN
               END-IF
           ELSE
               MOVE  CNS-1                   TO  FLG-CR-CLS
           END-IF
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "FLG-FETCH-END      =[" FLG-FETCH-END  "]"
      *-----------------------------------------------------------------
           PERFORM  UNTIL  FLG-FETCH-END     <>  SPACE
      *----------  カーソル FETCH
               EXEC SQL
                   FETCH  CR01
                    INTO :H-TBL.RIYO-CMP-CD,
                         :H-TBL.SYORI-YMD,
                         :H-TBL.KIDOU-ID,
                         :H-TBL.DENBUN-INFO,
                         :H-TBL.UPD-DATE,
                         :H-TBL.UPD-LOGIN-CMP-CD,
                         :H-TBL.UPD-SID,
                         :H-TBL.UPD-PGMID
               END-EXEC
      *-------------------<DEBUG>---------------------------------------
      D        DISPLAY  "SQLCODE(FETCH) =["  SQLCODE  "]"
      *-----------------------------------------------------------------
               EVALUATE  SQLCODE
                   WHEN  CNS-SQL-NORMAL
                       COMPUTE  WK-COUNT     =  WK-COUNT + 1
      *-------------------<DEBUG>---------------------------------------
      D                DISPLAY  "WK-COUNT    =["WK-COUNT  "]"
      *-----------------------------------------------------------------
                       IF  WK-COUNT  >  1
                       THEN
                           MOVE  CNS-1       TO  FLG-FETCH-END
                           MOVE  CNS-ERR-02  TO  WK-ERR-ID
                           MOVE  "0005"      TO  WK-ERR-POS
                           MOVE  SQLCODE     TO  WK-DETAIL-RTN-CD
                           PERFORM  ERR-RTN
                       END-IF
                   WHEN  CNS-SQL-NOTFOUND
                       MOVE  CNS-1           TO  FLG-FETCH-END
                       IF  WK-COUNT          =   ZERO
                       THEN
      *-------------------<DEBUG>---------------------------------------
      D                    DISPLAY  "WK-COUNT=["WK-COUNT  "]"
      *-----------------------------------------------------------------
                           MOVE  CNS-ERR-01  TO  WK-ERR-ID
                           MOVE  "0006"      TO  WK-ERR-POS
                           MOVE  SQLCODE     TO  WK-DETAIL-RTN-CD
                           PERFORM  ERR-RTN
                       END-IF
                   WHEN  OTHER
                       MOVE  CNS-1           TO  FLG-FETCH-END
                       MOVE  CNS-ERR-03      TO  WK-ERR-ID
                       MOVE  "0007"          TO  WK-ERR-POS
                       MOVE  SQLCODE         TO  WK-DETAIL-RTN-CD
                       PERFORM  ERR-RTN
               END-EVALUATE
           END-PERFORM.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*****  メイン処理  END  *****".
      *-----------------------------------------------------------------
       MAIN-EXT.
           EXIT.
      ******************************************************************
      *                 後処理
      ******************************************************************
       END-RTN                SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "***   後処理  START  ***"
      *-----------------------------------------------------------------
      *----------  カーソル CLOSE
           EXEC SQL
               CLOSE CR01
           END-EXEC
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "SQLCODE(CLOSE)     =["  SQLCODE  "]"
      *-----------------------------------------------------------------
           IF  SQLCODE                       NOT = CNS-SQL-NORMAL
           THEN
               MOVE  CNS-ERR-03              TO  WK-ERR-ID
               MOVE  "0008"                  TO  WK-ERR-POS
               MOVE  SQLCODE                 TO  WK-DETAIL-RTN-CD
               PERFORM  ERR-RTN
           END-IF
           MOVE  CORR  H-TBL
             TO  TBL-LAYOUT                  OF  PARM-SELECT-ARG3
      *----------  リターンパッケージセットルーチンをコールする
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "リターンパッケージセットルーチンSCZY1170開始"
      *-----------------------------------------------------------------
           MOVE  CNS-RET-CD-NORMAL
             TO  RTN-CD                      OF  PARM-SCZY1170-ARG1
           CALL  "SCZY1170"                  USING  PARM-SCZY1170-INOUT
                                                    PARM-SCZY1170-RTNPKG
           MOVE  PARM-SCZY1170-ARG2          TO  PARM-SELECT-ARG4.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "リターンパッケージセットルーチンSCZY1170終了"
      D    DISPLAY  "***   後処理  END  ***".
      *-----------------------------------------------------------------
       END-EXT.
           EXIT.
      ******************************************************************
      *                 エラー処理
      ******************************************************************
       ERR-RTN                SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "***  ERR-RTN  START  ***"
      *-----------------------------------------------------------------
           IF  FLG-CR-CLS  =  CNS-1
           THEN
      *-------------------<DEBUG>---------------------------------------
      D        DISPLAY  "ERROR処理 CLOSE CR01"
      *-----------------------------------------------------------------
               EXEC SQL
                   CLOSE CR01
               END-EXEC
           END-IF
           EVALUATE  WK-ERR-ID
      *----------  該当データなし
               WHEN  CNS-ERR-01
      *----------  検知プログラムID
                   MOVE  CNS-PROGRAM-ID
                     TO  ERR-PGM-ID          OF  PARM-SCZY1170-ARG1
      *----------  ポジション
                   MOVE  WK-ERR-POS
                     TO  ERR-POS             OF  PARM-SCZY1170-ARG1
      *----------  リターンコード
                   MOVE  CNS-RET-CD-NODATA
                     TO  RTN-CD              OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
                   MOVE  WK-DETAIL-RTN-CD
                     TO  DETAIL-RTN-CD       OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
                   MOVE  CNS-1
                     TO  DETAIL-RTN-CD-FLG   OF  PARM-SCZY1170-ARG1
      *----------  フリーメッセージ
                   MOVE  WK-FREE-MSG
                     TO  FREE-MSG            OF  PARM-SCZY1170-ARG1
      *----------  抽出件数超過警告
               WHEN  CNS-ERR-02
      *----------  検知プログラムID
                   MOVE  CNS-PROGRAM-ID
                     TO  ERR-PGM-ID          OF  PARM-SCZY1170-ARG1
      *----------  ポジション
                   MOVE  WK-ERR-POS
                     TO  ERR-POS             OF  PARM-SCZY1170-ARG1
      *----------  リターンコード
                   MOVE  CNS-RET-CD-NOTONE
                     TO  RTN-CD              OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
                   MOVE  WK-DETAIL-RTN-CD
                     TO  DETAIL-RTN-CD       OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
                   MOVE  CNS-1
                     TO  DETAIL-RTN-CD-FLG   OF  PARM-SCZY1170-ARG1
      *----------  フリーメッセージ
                   MOVE  WK-FREE-MSG
                     TO  FREE-MSG            OF  PARM-SCZY1170-ARG1
      *----------  システムエラー（Oracle）
               WHEN  CNS-ERR-03
      *----------  検知プログラムID
                   MOVE  CNS-PROGRAM-ID
                     TO  ERR-PGM-ID          OF  PARM-SCZY1170-ARG1
      *----------  ポジション
                   MOVE  WK-ERR-POS
                     TO  ERR-POS             OF  PARM-SCZY1170-ARG1
      *----------  リターンコード
                   MOVE  CNS-RET-CD-ORAERR
                     TO  RTN-CD              OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
                   MOVE  WK-DETAIL-RTN-CD
                     TO  DETAIL-RTN-CD       OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
                   MOVE  CNS-1
                     TO  DETAIL-RTN-CD-FLG   OF  PARM-SCZY1170-ARG1
      *----------  フリーメッセージ
                   MOVE  WK-FREE-MSG
                     TO  FREE-MSG            OF  PARM-SCZY1170-ARG1
      *----------  システムエラー（Oracle以外）
               WHEN  CNS-ERR-04
      *----------  検知プログラムID
                   MOVE  CNS-PROGRAM-ID
                     TO  ERR-PGM-ID          OF  PARM-SCZY1170-ARG1
      *----------  ポジション
                   MOVE  WK-ERR-POS
                     TO  ERR-POS             OF  PARM-SCZY1170-ARG1
      *----------  リターンコード
                   MOVE  CNS-RET-CD-SYSERR
                     TO  RTN-CD              OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
                   MOVE  CNS-0
                     TO  DETAIL-RTN-CD-FLG   OF  PARM-SCZY1170-ARG1
      *----------  SCZY1160エラーの場合、戻したRTNパッケージをセットする
                   MOVE  PARM-SCZY1160-ARG3  TO  PARM-SCZY1170-ARG2
      *----------  悲観ロックエラー
               WHEN  CNS-ERR-05
      *----------  検知プログラムID
                   MOVE  CNS-PROGRAM-ID
                     TO  ERR-PGM-ID          OF  PARM-SCZY1170-ARG1
      *----------  ポジション
                   MOVE  WK-ERR-POS
                     TO  ERR-POS             OF  PARM-SCZY1170-ARG1
      *----------  リターンコード
                   MOVE  CNS-RET-CD-HIKANLOG
                     TO  RTN-CD              OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
                   MOVE  WK-DETAIL-RTN-CD
                     TO  DETAIL-RTN-CD       OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
                   MOVE  CNS-1
                     TO  DETAIL-RTN-CD-FLG   OF  PARM-SCZY1170-ARG1
      *----------  フリーメッセージ
                   MOVE  WK-FREE-MSG
                     TO  FREE-MSG            OF  PARM-SCZY1170-ARG1
               WHEN  OTHER
                   CONTINUE
           END-EVALUATE
      *----------  リターンパッケージセットルーチンをコールする
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "リターンパッケージセットルーチンSCZY1170開始"
      *-----------------------------------------------------------------
           CALL  "SCZY1170"                  USING  PARM-SCZY1170-INOUT
                                                    PARM-SCZY1170-RTNPKG
           MOVE  PARM-SCZY1170-ARG2          TO  PARM-SELECT-ARG4
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "リターンパッケージセットルーチンSCZY1170終了"
      D    DISPLAY  "***  ERR-RTN  END  ***"
      *-----------------------------------------------------------------
           CONTINUE.
       ERR-EXT.
           GOBACK.
      ******************************************************************
