      ******************************************************************
      * $Header$
      ******************************************************************
      *
      * システムＩＤ   : T-STAR
      * システム名称   : 次期TSTARシステム
      * プログラムＩＤ : SDYJ2301
      * プログラム名称 : 外接データマージルーチン
      * 処理概要       : それぞれの対象ファイルをマージして、
      *                  圧縮結果をBLサーバへコピーする
      * 参照ＤＢ       : なし
      * 引数           : IN
      *                  OUT
      *
      * 改訂履歴
      * 年月日        区分     所属    担当      内容
      *-----------------------------------------------------------------
      * 20130807      新規     SCS     馬旭君    新規作成
      ******************************************************************
       IDENTIFICATION         DIVISION.
       PROGRAM-ID.    SDYJ2301.
       AUTHOR.        Nomura.
       DATE-WRITTEN.  13-08-07.
       DATE-COMPILED.
      ******************************************************************
      *
      *                 環  境  部
      *
      ******************************************************************
       ENVIRONMENT            DIVISION.
       CONFIGURATION          SECTION.
       SOURCE-COMPUTER.       L1000V.
      *SOURCE-COMPUTER.       L1000V   WITH DEBUGGING MODE.
       OBJECT-COMPUTER.       RP5470.
       SPECIAL-NAMES.
            ENVIRONMENT-NAME               ENV-NAME
            ENVIRONMENT-VALUE              ENV-VALUE.
       INPUT-OUTPUT           SECTION.
       FILE-CONTROL.
      *----< テキストファイル >----*
           SELECT  RST-FILE     ASSIGN  TO  RSTFILE
                     ORGANIZATION       IS  LINE SEQUENTIAL
                     FILE STATUS        IS  ST-RSTFILE.
           SELECT  CTL-FILE01   ASSIGN  TO  CTLFILE01
                     ORGANIZATION       IS  LINE SEQUENTIAL
                     FILE STATUS        IS  ST-CTLFILE01.
           SELECT  CTL-FILE02   ASSIGN  TO  CTLFILE02
                     ORGANIZATION       IS  LINE SEQUENTIAL
                     FILE STATUS        IS  ST-CTLFILE02.
           SELECT  CTL-FILE03   ASSIGN  TO  CTLFILE03
                     ORGANIZATION       IS  LINE SEQUENTIAL
                     FILE STATUS        IS  ST-CTLFILE03.
           SELECT  CTL-FILE04   ASSIGN  TO  CTLFILE04
                     ORGANIZATION       IS  LINE SEQUENTIAL
                     FILE STATUS        IS  ST-CTLFILE04.
           SELECT  CTL-FILE05   ASSIGN  TO  CTLFILE05
                     ORGANIZATION       IS  LINE SEQUENTIAL
                     FILE STATUS        IS  ST-CTLFILE05.
           SELECT  CTL-FILE06   ASSIGN  TO  CTLFILE06
                     ORGANIZATION       IS  LINE SEQUENTIAL
                     FILE STATUS        IS  ST-CTLFILE06.
      ******************************************************************
      *
      *                 デ  ー  タ  部
      *
      ******************************************************************
       DATA                   DIVISION.
       FILE                   SECTION.
       FD  RST-FILE      DATA       RECORD   RST-REC
                         LABEL      RECORD IS STANDARD.
       01  RST-REC.
         05  WK-STRING-IN          PIC  X(1000).
       FD  CTL-FILE01
                         DATA       RECORD    OUT-REC01
                         LABEL      RECORD IS STANDARD.
       01  OUT-REC01.
         05  WK-STRING-1           PIC  X(5000).
       FD  CTL-FILE02
                         DATA       RECORD    OUT-REC02
                         LABEL      RECORD IS STANDARD.
       01  OUT-REC02.
         05  WK-STRING-2           PIC  X(5000).
       FD  CTL-FILE03
                         DATA       RECORD    OUT-REC03
                         LABEL      RECORD IS STANDARD.
       01  OUT-REC03.
         05  WK-STRING-3           PIC  X(5000).
       FD  CTL-FILE04
                         DATA       RECORD    OUT-REC04
                         LABEL      RECORD IS STANDARD.
       01  OUT-REC04.
         05  WK-STRING-4           PIC  X(5000).
       FD  CTL-FILE05
                         DATA       RECORD    OUT-REC05
                         LABEL      RECORD IS STANDARD.
       01  OUT-REC05.
         05  WK-STRING-5           PIC  X(5000).
       FD  CTL-FILE06
                         DATA       RECORD    OUT-REC06
                         LABEL      RECORD IS STANDARD.
       01  OUT-REC06.
         05  WK-STRING-6           PIC  X(5000).
      ******************************************************************
      *        作業場所節
      ******************************************************************
       WORKING-STORAGE        SECTION.
       01  IDNAME                  PIC  X(80)  VALUE
       "$Id$".
      ******************************************************************
      *                 コンスタント  エリア
      ******************************************************************
      *----------  共通コンスタント定義の宣言
       01  CONSTANT-AREA.
         05  CNS-DYCNS.
           COPY  "DYCNS.cpy".
      *----------  プログラム名
         05  CNS-PGM-ID            PIC  X(08)  VALUE  "SDYJ2301".
         05  CNS-SCZY1020          PIC  X(08)  VALUE  "SCZY1020".
         05  CNS-SCZY4903          PIC  X(08)  VALUE  "SCZY4903".
         05  CNS-T7170DY           PIC  X(07)  VALUE  "T7170DY".
      *----------  ファイル名編集用
         05  CNS-SLASH             PIC  X(01)  VALUE  "/".
         05  CNS-UNDERBAR          PIC  X(01)  VALUE  "_".
         05  CNS-RX                PIC  X(02)  VALUE  "RX".
         05  CNS-LIST              PIC  X(05)  VALUE  ".list".
         05  CNS-BAK               PIC  X(04)  VALUE  ".bak".
         05  CNS-GZ                PIC  X(03)  VALUE  ".gz".
         05  CNS-CTL               PIC  X(04)  VALUE  ".ctl".
         05  CNS-BIN-LS            PIC  X(08)  VALUE  "/bin/ls ".
         05  CNS-BIN-REN           PIC  X(07)  VALUE  "rename ".
         05  CNS-BIN-CAT           PIC  X(09)  VALUE  "/bin/cat ".
         05  CNS-CP-F              PIC  X(12)  VALUE  "/bin/cp -pf ".
         05  CNS-GVE               PIC  X(12)  VALUE  " | grep -vE ".
         05  CNS-RMF               PIC  X(14)  VALUE   " | xargs rm -f".
         05  CNS-GUNZIP            PIC  X(15)  VALUE  "/bin/gunzip -f ".
         05  CNS-GZIP              PIC  X(13)  VALUE  "/bin/gzip -f ".
         05  CNS-GRP               PIC  X(08)  VALUE  " | grep ".
         05  CNS-V                 PIC  X(03)  VALUE  "-v ".
         05  CNS-E                 PIC  X(03)  VALUE  "-E ".
         05  CNS-FINISH            PIC  X(34)  VALUE
             "'finish' | awk -F_ '{print $3,$5}'".
         05  CNS-FINI2             PIC  X(12)  VALUE  "'02\.finish'".
         05  CNS-SPACE             PIC  X(01)  VALUE  " ".
         05  CNS-PRINTF            PIC  X(07)  VALUE  "printf ".
         05  CNS-IFP               PIC  X(10)  VALUE  "IFPriceF\t".
         05  CNS-IAFT              PIC  X(08)  VALUE  "IAFTRF\t".
         05  CNS-IAFP              PIC  X(08)  VALUE  "IAFPOF\t".
         05  CNS-IFA               PIC  X(07)  VALUE  "IFAMF\t".
         05  CNS-IFC               PIC  X(07)  VALUE  "IFCCF\t".
         05  CNS-IAFS              PIC  X(09)  VALUE  "IAFSECF\t".
         05  CNS-IFIC              PIC  X(12)  VALUE  "IFIssCodeF\t".
         05  CNS-IFII              PIC  X(12)  VALUE  "IFIssInfoF\t".
         05  CNS-IFB               PIC  X(09)  VALUE  "IFBondF\t".
         05  CNS-IFF               PIC  X(11)  VALUE  "IFFtrOptF\t".
         05  CNS-AWK               PIC  X(22)  VALUE
                                   " | awk '{print $1-1}'`".
         05  CNS-AWKP              PIC  X(15)  VALUE  " | awk '{print ".
         05  CNS-ZN                PIC  X(02)  VALUE  "\n".
         05  CNS-WCL               PIC  X(07)  VALUE  "`wc -l ".
         05  CNS-OUT               PIC  X(04)  VALUE  " >> ".
         05  CNS-PUT               PIC  X(03)  VALUE  " > ".
         05  CNS-BIN-SED           PIC  X(17)  VALUE
                                   "/bin/sed -n '1p' ".
         05  CNS-SED-D             PIC  X(22)  VALUE
                                   " | sed '$d' | sed '1d'".
      *----------  ダブルクォーテーションマーク
         05  CNS-YINGHAO           PIC  X(01)  VALUE  X'22'.
      *----------  PATH区分
         05  CNS-PATH-KBN          PIC  X(02)  VALUE  "05".
         05  CNS-PATH-KBN2         PIC  X(02)  VALUE  "23".
      *----------  起動元業務タスクID
         05  CNS-TD871JC           PIC  X(07)  VALUE  "TD871JC".
         05  CNS-TD870JC           PIC  X(07)  VALUE  "TD870JC".
         05  CNS-T7050JC           PIC  X(07)  VALUE  "T7050JC".
         05  CNS-TD891US           PIC  X(07)  VALUE  "TD891US".
         05  CNS-TD890US           PIC  X(07)  VALUE  "TD890US".
         05  CNS-T7070US           PIC  X(07)  VALUE  "T7070US".
         05  CNS-TD901US           PIC  X(07)  VALUE  "TD901US".
         05  CNS-TD900US           PIC  X(07)  VALUE  "TD900US".
         05  CNS-T7080US           PIC  X(07)  VALUE  "T7080US".
         05  CNS-TD921US           PIC  X(07)  VALUE  "TD921US".
         05  CNS-TD920US           PIC  X(07)  VALUE  "TD920US".
         05  CNS-T7100US           PIC  X(07)  VALUE  "T7100US".
         05  CNS-TD930US           PIC  X(07)  VALUE  "TD930US".
         05  CNS-TD851JC           PIC  X(07)  VALUE  "TD851JC".
         05  CNS-TD850JC           PIC  X(07)  VALUE  "TD850JC".
         05  CNS-T7030JC           PIC  X(07)  VALUE  "T7030JC".
         05  CNS-TD861JC           PIC  X(07)  VALUE  "TD861JC".
         05  CNS-TD860JC           PIC  X(07)  VALUE  "TD860JC".
         05  CNS-T7040JC           PIC  X(07)  VALUE  "T7040JC".
      *----------  ファイルステータス
         05  CNS-FILE-OPEN-ERR     PIC  X(22)  VALUE
                                   "ファイルオープンエラー".
         05  CNS-FILE-CLOSE-ERR    PIC  X(22)  VALUE
                                   "ファイルクローズエラー".
         05  CNS-FILE-READ-ERR     PIC  X(22)  VALUE
                                   "ファイル読み込むエラー".
         05  CNS-PGM-ERR           PIC  X(18)  VALUE
                                   "パラーメータエラー".
      *----------  ファイルステータス               
         05  CNS-RTN-210           PIC  X(03)  VALUE  "210".
      *----------  その他
         05  CNS-4                 PIC  9(01)  VALUE  4.
         05  CNS-7                 PIC  9(01)  VALUE  7.
         05  CNS-17                PIC  9(02)  VALUE  17.
         05  CNS-30                PIC  9(02)  VALUE  30.
         05  CNS-396               PIC  9(04)  VALUE  396.
         05  CNS-1024              PIC  9(04)  VALUE  1024.
         05  CNS-3168              PIC  9(04)  VALUE  3168.
         05  CNS-4096              PIC  9(05)  VALUE  4096.
         05  CNS-X-1               PIC  X(01)  VALUE  "1".
         05  CNS-X-2               PIC  X(01)  VALUE  "2".
         05  CNS-X-3               PIC  X(01)  VALUE  "3".
         05  CNS-X-01              PIC  X(02)  VALUE  "01".
         05  CNS-X-02              PIC  X(02)  VALUE  "02".
         05  CNS-X-03              PIC  X(02)  VALUE  "03".
         05  CNS-X-04              PIC  X(02)  VALUE  "04".
         05  CNS-X-05              PIC  X(02)  VALUE  "05".
         05  CNS-X-06              PIC  X(02)  VALUE  "06".
         05  CNS-X-07              PIC  X(02)  VALUE  "07".
         05  CNS-X-08              PIC  X(02)  VALUE  "08".
      ******************************************************************
      *                フラグエリア
      ******************************************************************
       01  FLG-AREA.
      *----------  明細リストファイルオープンフラグ
         05  FLG-RSTFILE-OPEN      PIC  9(01).
      *----------  明細リストファイルEOFフラグ
         05  FLG-EOF-RSTFILE       PIC  9(01).
      *----------  ctlファイル01のオープンフラグ
         05  FLG-CTLFILE-OPEN-01   PIC  9(01).
      *----------  ctlファイル02のオープンフラグ
         05  FLG-CTLFILE-OPEN-02   PIC  9(01).
      *----------  ctlファイル03のオープンフラグ
         05  FLG-CTLFILE-OPEN-03   PIC  9(01).
      *----------  ctlファイル04のオープンフラグ
         05  FLG-CTLFILE-OPEN-04   PIC  9(01).
      *----------  ctlファイル05のオープンフラグ
         05  FLG-CTLFILE-OPEN-05   PIC  9(01).
      *----------  ctlファイル06のオープンフラグ
         05  FLG-CTLFILE-OPEN-06   PIC  9(01).
      ******************************************************************
      *                 ワ−クエリア
      ******************************************************************
       01  WORK-AREA.
      *----------  ワーク利用会社コード
         05  WK-RIYO-CMP-CD        PIC  X(04).
      *----------  ワーク処理実行日
         05  WK-SYORI-YMD          PIC  X(08).
      *----------  ワーク業務タスクID
         05  WK-GYOMU-TASK-ID      PIC  X(07).
      *----------  ワーク起動ＩＤ
         05  WK-KIDOU-ID           PIC  X(04).
      *----------  ワークBLパス
         05  WK-BL-PATH            PIC  X(256).
      *----------  ワークNASパス
         05  WK-NAS-PATH           PIC  X(256).
      *----------  ワーク起動元業務タスクID
         05  WK-KIDOU-SS-TASK-ID   PIC  X(07).
      *----------  ワークODW接続用業務タスクID
         05  WK-ODW-GYOMU-TASK-ID  PIC  X(07).
      *----------  ワークチェック起動ID
         05  WK-CHK-KIDOU-ID       PIC  X(04).
      *----------  ワーク明細リストファイル名
         05  WK-MEISAI-FILE-NAME   PIC  X(31).
      *----------  ワーク前営業日
         05  WK-ZEN-EIGYOU         PIC  9(08).
      *----------  WK-I
         05  WK-I                  PIC  9(03).
      *----------  WK-IDX
         05  WK-IDX                PIC  9(03).
      *----------  ワークコマンド
         05  WK-KOMANDO            PIC  X(1000).
      *----------  ワークコマンドの長さ
         05  WK-LEN-KOMANDO        PIC  9(04).
      *----------  ワーク圧縮コマンド
         05  WK-GZ-KOMANDO         PIC  X(500).
      *----------  ワーク圧縮コマンドの長さ
         05  WK-LEN-GZ-KOMANDO     PIC  9(03).
      *----------  ワークすべて起動ID件数
         05  WK-ALL-KIDOU-CNT      PIC  9(02).
      *----------  ワーク長さ
         05  WK-LENGTH             PIC  9(03).
      *----------  ワーク解凍対象起動IDコマンド
         05  WK-KAD-KIDOU-KOMANDO  PIC  X(700).
      *----------  ワーク解凍対象起動IDコマンドの長さ
         05  WK-LEN-KAD-KIDOU-KOMANDO
                                   PIC  9(03).
      *---------- ワークポジション
         05  WK-ERR-POS            PIC  X(04).
      *---------- CBLDCADM('COMMAND')
         05  WK-ADM-ARG1.
           10  ADM-CALL            PIC  X(08).
           10  STATUS-CODE         PIC  X(05).
           10  FILLER              PIC  X(03).
           10  FLAGS               PIC  S9(09) COMP VALUE ZERO.
           10  DESCRIPTOR          PIC  S9(09) COMP.
         05  WK-ADM-ARG2.
           10  LINK-DATA-LENG      PIC  9(09)  COMP.
           10  LINK-DATA           PIC  X(1000).
         05  WK-ADM-ARG3.
           10  RESULT-LENG         PIC  9(09)  COMP.
           10  RESULT              PIC  X(4096).
         05  WK-ADM-ARG4.
           10  ERR-RESULT-LENG     PIC  9(09)  COMP.
           10  ERR-RESULT          PIC  X(1024).
      *---------- ワークすべて起動ID
         05  WK-ALL-KIDOU-ID-G.
           10  WK-ALL-KIDOU-ID   OCCURS  99.
             15  FILLER            PIC  X(01)  VALUE  "_".
      *----------  ワークすべて起動ID明細
             15  WK-MEISAI-KIDOU-ID
                                   PIC  X(04).
             15  FILLER            PIC  X(01)  VALUE  "_".
             15  FILLER            PIC  X(01)  VALUE  "|".
      *---------  ワーク起動IDリストファイル一覧
         05  WK-KIDOU-RST-FILE-G.
           10  WK-KIDOU-RST-FILE  OCCURS  396.
      *----------  ワーク起動IDリストファイル名
             15  WK-KIDOU-FILENAME PIC  X(31).
      *----------  エンターキー
             15  WK-END-KI         PIC  X(01).
      *---------  ワーク起動ID連番一覧
         05  WK-KIDOU-REBA-LST-G.
           10  WK-KIDOU-REBA-LST   OCCURS  396.
      *----------  ワーク起動IDリスト一覧
             15  WK-KIDOU-LST      PIC  X(04).
      *----------  スペース
             15  WK-SPACE          PIC  X(01).
      *----------  ワーク連番リスト一覧
             15  WK-RENBA-LST      PIC  X(02).
      *----------  エンターキー
             15  WK-END-KII        PIC  X(01).
      *----------  ワークマージファイル01ヘッダーフラグ
         05  WK-HEAD-FLG-FILE01    PIC  9(01).
      *----------  ワークマージファイル02ヘッダーフラグ
         05  WK-HEAD-FLG-FILE02    PIC  9(01).
      *----------  ワークマージファイル03ヘッダーフラグ
         05  WK-HEAD-FLG-FILE03    PIC  9(01).
      *----------  ワークマージファイル04ヘッダーフラグ
         05  WK-HEAD-FLG-FILE04    PIC  9(01).
      *----------  ワークマージファイル05ヘッダーフラグ
         05  WK-HEAD-FLG-FILE05    PIC  9(01).
      *----------  ワークマージファイル01ヘッダーフラグ
         05  WK-HEAD-FLG-FILE06    PIC  9(01).
      ******************************************************************
      *                ファイル定義エリア
      ******************************************************************
       01  FILE-AREA.
         05  RSTFILE               PIC  X(300).
         05  CTLFILE01             PIC  X(300).
         05  CTLFILE02             PIC  X(300).
         05  CTLFILE03             PIC  X(300).
         05  CTLFILE04             PIC  X(300).
         05  CTLFILE05             PIC  X(300).
         05  CTLFILE06             PIC  X(300).
         05  ST-RSTFILE            PIC  X(02).
         05  ST-CTLFILE01          PIC  X(02).
         05  ST-CTLFILE02          PIC  X(02).
         05  ST-CTLFILE03          PIC  X(02).
         05  ST-CTLFILE04          PIC  X(02).
         05  ST-CTLFILE05          PIC  X(02).
         05  ST-CTLFILE06          PIC  X(02).
      ******************************************************************
      *                 サブプログラム  パラメ−タ  エリア
      ******************************************************************
      *---------- PATH取得ルーチン
       01  PARM-SCZY4903-INOUT.
           COPY "SCZY4903.cpy".
      *----------  SCZY1020カレンダールーチン
       01  PARM-SCZY1020-INOUT.
           COPY  "SCZY1020.cpy".
      *----------  SCZY1170 リターンパッケージセットルーチン
       01  PARM-SCZY1170-INOUT.
           COPY  "SCZY1170.cpy".
       01  PARM-SCZY1170-RTNPKG.
         05  PARM-SCZY1170-ARG2.
           COPY  "CZRTNPACKAGE.cpy".
      *----------  RTNパッケージコピー句
       01  PARM-RTNPKG.
         05  PARM-RTNPKG-ARG.
           COPY  "CZRTNPACKAGE.cpy".
      ******************************************************************
      *                 連絡節
      ******************************************************************
       LINKAGE                SECTION.
       01  PARM-SDYJ2301-INOUT.
           COPY  "SDYJ2301.cpy".
       01  PARM-SDYJ2301-RTNPKG.
         05  PARM-SDYJ2301-ARG2.
           COPY  "CZRTNPACKAGE.cpy".
      ******************************************************************
      *
      *        PROCEDURE      DIVISION
      *
      ******************************************************************
       PROCEDURE              DIVISION
           USING  PARM-SDYJ2301-INOUT
                  PARM-SDYJ2301-RTNPKG.
      ******************************************************************
      *                 SDYJ2301処理
      ******************************************************************
       BASE-RTN               SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  CNS-PGM-ID":◇◆◇◆◇  SDYJ2301  START  ◇◆◇◆◇"
      *-----------------------------------------------------------------
      *----------  3.1 前処理
           PERFORM  INIT-RTN
      *----------  3.2 主処理
           PERFORM  MAIN-RTN
      *----------  3.3 後処理
           PERFORM  END-RTN
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  CNS-PGM-ID":◇◆◇◆◇   SDYJ2301  END   ◇◆◇◆◇"
      *-----------------------------------------------------------------
           CONTINUE.
       BASE-EXT.
           GOBACK.
      ******************************************************************
      *    3.1 前処理
      ******************************************************************
       INIT-RTN               SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  CNS-PGM-ID":*****  前処理  START  *****"
      *-----------------------------------------------------------------
      *----------  3.1.1 初期化処理
           PERFORM  INITIALIZE-RTN
      *----------  3.1.1 環境変数取得
           PERFORM  GET-ENV-ARG-RTN
      *----------  3.1.3.ODW接続用業務タスクIDを設定
           PERFORM  ODW-TASK-SET-RTN
      *----------  3.1.4.【SCZY1020】カレンダールーチン
           PERFORM  CALL-SCZY1020-RTN
      *----------  3.1.5.NASパスで前営業日より古いファイルを全部削除
           PERFORM  NAS-OLD-DELETE-RTN
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  CNS-PGM-ID":*****   前処理  END   *****"
      *-----------------------------------------------------------------
           CONTINUE.
       INIT-EXT.
           EXIT.
      ******************************************************************
      *    3.1.1 初期化処理
      ******************************************************************
       INITIALIZE-RTN         SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  CNS-PGM-ID":**** 初期化処理  START  ****"
      *-----------------------------------------------------------------
      *----------  初期化
           INITIALIZE     WORK-AREA
                          FLG-AREA
                          FILE-AREA
                          RST-REC
                          OUT-REC01
                          OUT-REC02
                          OUT-REC03
                          OUT-REC04
                          OUT-REC05
                          OUT-REC06
                          PARM-RTNPKG
                          PARM-SCZY4903-INOUT
                          PARM-SCZY1020-INOUT
                          PARM-SCZY1170-INOUT
                          PARM-SCZY1170-RTNPKG
                          PARM-SDYJ2301-ARG2
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  CNS-PGM-ID":WORK-AREA           =["WORK-AREA"]"
      D    DISPLAY  CNS-PGM-ID":FLG-AREA            =["FLG-AREA"]"
      D    DISPLAY  CNS-PGM-ID":FILE-AREA           =["FILE-AREA"]"
      D    DISPLAY  CNS-PGM-ID":PARM-RTNPKG                 =["
      D                                  PARM-RTNPKG"]"
      D    DISPLAY  CNS-PGM-ID":PARM-SCZY4903-INOUT                  =["
      D                                   PARM-SCZY4903-INOUT"]"
      D    DISPLAY  CNS-PGM-ID":PARM-SCZY1020-INOUT                  =["
      D                                   PARM-SCZY1020-INOUT"]"
      D    DISPLAY  CNS-PGM-ID":PARM-SCZY1170-INOUT                  =["
      D                                   PARM-SCZY1170-INOUT"]"
      D    DISPLAY  CNS-PGM-ID":PARM-SDYJ2301-ARG2                   =["
      D                                  PARM-SDYJ2301-ARG2"]"
      *-----------------------------------------------------------------
      *----------  ワーク利用会社コード←ARG1.利用会社コード
           MOVE  RIYO-CMP-CD       OF  PARM-SDYJ2301-ARG1
             TO  WK-RIYO-CMP-CD
      *----------  ワーク処理実行日←ARG1.処理実行日
           MOVE  SYORI-YMD         OF  PARM-SDYJ2301-ARG1
             TO  WK-SYORI-YMD
      *----------  ワーク業務タスクID←ARG1.業務タスクID
           MOVE  GYOMU-TASK-ID     OF  PARM-SDYJ2301-ARG1
             TO  WK-GYOMU-TASK-ID
      *----------  ワーク起動ＩＤ←ARG1.起動ＩＤ
           MOVE  KIDOU-ID          OF  PARM-SDYJ2301-ARG1
             TO  WK-KIDOU-ID
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  CNS-PGM-ID":ARG1.利用会社コード=["
      D                        RIYO-CMP-CD     OF  PARM-SDYJ2301-ARG1"]"
      D    DISPLAY  CNS-PGM-ID":ARG1.処理実行日=["
      D                        SYORI-YMD       OF  PARM-SDYJ2301-ARG1"]"
      D    DISPLAY  CNS-PGM-ID":ARG1.業務タスクID=["
      D                        GYOMU-TASK-ID   OF  PARM-SDYJ2301-ARG1"]"
      D    DISPLAY  CNS-PGM-ID":ARG1.起動ＩＤ=["
      D                        KIDOU-ID        OF  PARM-SDYJ2301-ARG1"]"
      D    DISPLAY  CNS-PGM-ID":ワーク利用会社コード=["WK-RIYO-CMP-CD"]"
      D    DISPLAY  CNS-PGM-ID":ワーク処理実行日=["WK-SYORI-YMD"]"
      D    DISPLAY  CNS-PGM-ID":ワーク業務タスクID=["WK-GYOMU-TASK-ID"]"
      D    DISPLAY  CNS-PGM-ID":ワーク起動ＩＤ=["WK-KIDOU-ID"]"
      *-----------------------------------------------------------------
           IF  WK-RIYO-CMP-CD      NOT = SPACE
            AND  WK-SYORI-YMD      NOT = SPACE
            AND  WK-GYOMU-TASK-ID  NOT = SPACE
            AND  WK-KIDOU-ID       NOT = SPACE
           THEN
             CONTINUE
           ELSE
      *----------  エラー検知プログラム名
             MOVE  CNS-PGM-ID
               TO  ERR-PGM-ID           OF  PARM-SCZY1170-ARG1
      *----------  ポジション
             MOVE  CNS-POS-062
               TO  ERR-POS              OF  PARM-SCZY1170-ARG1
      *----------  リターンコード
             MOVE  CNS-RTN-800
               TO  RTN-CD               OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
             MOVE  CNS-0
               TO  DETAIL-RTN-CD        OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
             MOVE  CNS-DETAIL-0
               TO  DETAIL-RTN-CD-FLG    OF  PARM-SCZY1170-ARG1
      *----------  フリーメッセージ
             MOVE  CNS-PGM-ERR
               TO  FREE-MSG             OF  PARM-SCZY1170-ARG1
      *----------  3.4 エラー処理
             PERFORM  ERR-RTN
           END-IF
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  CNS-PGM-ID":**** 初期化処理  END  ****"
      *-----------------------------------------------------------------
           CONTINUE.
       INITIALIZE-EXT.
           EXIT.
      ******************************************************************
      *    3.1.2.環境変数取得
      ******************************************************************
       GET-ENV-ARG-RTN        SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":***  環境変数取得  START  ***"
      *-----------------------------------------------------------------
           INITIALIZE  PARM-SCZY4903-INOUT
                       PARM-RTNPKG
      *----------  利用会社コード
           MOVE  WK-RIYO-CMP-CD
             TO  RIYO-CMP-CD                 OF  PARM-SCZY4903-ARG1
      *----------  PATH区分
           MOVE  CNS-PATH-KBN
             TO  PATH-KBN                    OF  PARM-SCZY4903-ARG1
      *--------------------<DUMMY END>----------------------------------
      D    DISPLAY  CNS-PGM-ID"PARM-SCZY4903-ARG1:"
      D    DISPLAY  CNS-PGM-ID"利用会社コード=["
      D              RIYO-CMP-CD             OF  PARM-SCZY4903-ARG1"]"
      D    DISPLAY  CNS-PGM-ID"PATH区分=["
      D              PATH-KBN                OF  PARM-SCZY4903-ARG1"]"
      *--------------------<DUMMY END>----------------------------------
      *----------  PATH取得ルーチン(SCZY4903)をコールする
           CALL  CNS-SCZY4903             USING  PARM-SCZY4903-INOUT
                                                 PARM-RTNPKG
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":RTN-CD OF SCZY4903=["
      D              RTN-CD OF PARM-RTNPKG(COUNTER OF PARM-RTNPKG) "]"
      D    DISPLAY  CNS-PGM-ID":COUNTER     OF  PARM-RTNPKG=["
      D              COUNTER     OF  PARM-RTNPKG"]"
      *--------------------<DEBUG>--------------------------------------
           IF  RTN-CD OF PARM-RTNPKG(COUNTER OF PARM-RTNPKG)
             = CNS-RTN-000
           THEN
             INITIALIZE  PARM-RTNPKG
      *----------  ワークBLパス
             MOVE  RTN-PATH                  OF  PARM-SCZY4903-ARG2
               TO  WK-BL-PATH
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":【SCZY4903】ARG2の返却PATH=["
      D                         RTN-PATH     OF  PARM-SCZY4903-ARG2"]"
      D    DISPLAY  CNS-PGM-ID":ワークBLパス=["WK-BL-PATH"]"
      *--------------------<DEBUG>--------------------------------------
           ELSE
      *--------------------<DUMMY END>----------------------------------
      D    DISPLAY CNS-PGM-ID":環境変数の取得は失敗しました"
      *--------------------<DUMMY END>----------------------------------
      *----------  エラー検知プログラムID
             MOVE  CNS-PGM-ID
               TO  ERR-PGM-ID           OF  PARM-SCZY1170-ARG1
      *----------  ポジション
             MOVE  CNS-POS-001
               TO  ERR-POS              OF  PARM-SCZY1170-ARG1
      *----------  リターンコード
             MOVE  CNS-RTN-901
               TO  RTN-CD               OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
             MOVE  ZERO
               TO  DETAIL-RTN-CD        OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
             MOVE  CNS-DETAIL-0
               TO  DETAIL-RTN-CD-FLG    OF  PARM-SCZY1170-ARG1
      *---------- フリーメッセージ
             MOVE  SPACE
               TO  FREE-MSG             OF  PARM-SCZY1170-ARG1
      *----------  エラー処理
             PERFORM  ERR-RTN
           END-IF
           INITIALIZE  PARM-SCZY4903-INOUT
                       PARM-RTNPKG
      *----------  利用会社コード
           MOVE  WK-RIYO-CMP-CD
             TO  RIYO-CMP-CD                 OF  PARM-SCZY4903-ARG1
      *----------  PATH区分
           MOVE  CNS-PATH-KBN2
             TO  PATH-KBN                    OF  PARM-SCZY4903-ARG1
      *--------------------<DUMMY END>----------------------------------
      D    DISPLAY  CNS-PGM-ID"PARM-SCZY4903-ARG1:"
      D    DISPLAY  CNS-PGM-ID"利用会社コード=["
      D              RIYO-CMP-CD             OF  PARM-SCZY4903-ARG1"]"
      D    DISPLAY  CNS-PGM-ID"PATH区分=["
      D              PATH-KBN                OF  PARM-SCZY4903-ARG1"]"
      *--------------------<DUMMY END>----------------------------------
      *----------  PATH取得ルーチン(SCZY4903)をコールする
           CALL  "SCZY4903"               USING  PARM-SCZY4903-INOUT
                                                 PARM-RTNPKG
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":RTN-CD OF SCZY4903=["
      D              RTN-CD OF PARM-RTNPKG(COUNTER OF PARM-RTNPKG) "]"
      D    DISPLAY  CNS-PGM-ID":COUNTER     OF  PARM-RTNPKG=["
      D              COUNTER     OF  PARM-RTNPKG"]"
      *--------------------<DEBUG>--------------------------------------
           IF  RTN-CD OF PARM-RTNPKG(COUNTER OF PARM-RTNPKG)
             = CNS-RTN-000
           THEN  
             INITIALIZE  PARM-RTNPKG
      *----------  ワークNASパス
             MOVE  RTN-PATH                  OF  PARM-SCZY4903-ARG2
               TO  WK-NAS-PATH
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":【SCZY4903】ARG2の返却PATH=["
      D                         RTN-PATH     OF  PARM-SCZY4903-ARG2"]"
      D    DISPLAY  CNS-PGM-ID":ワークNASパス=["WK-NAS-PATH"]"
      *--------------------<DEBUG>--------------------------------------
           ELSE
      *--------------------<DUMMY END>----------------------------------
      D    DISPLAY CNS-PGM-ID":環境変数の取得は失敗しました"
      *--------------------<DUMMY END>----------------------------------
      *----------  エラー検知プログラムID
             MOVE  CNS-PGM-ID
               TO  ERR-PGM-ID           OF  PARM-SCZY1170-ARG1
      *----------  ポジション
             MOVE  CNS-POS-002
               TO  ERR-POS              OF  PARM-SCZY1170-ARG1
      *----------  リターンコード
             MOVE  CNS-RTN-901
               TO  RTN-CD               OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
             MOVE  ZERO
               TO  DETAIL-RTN-CD        OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
             MOVE  CNS-DETAIL-0
               TO  DETAIL-RTN-CD-FLG    OF  PARM-SCZY1170-ARG1
      *---------- フリーメッセージ
             MOVE  SPACE
               TO  FREE-MSG             OF  PARM-SCZY1170-ARG1
      *----------  エラー処理
             PERFORM  ERR-RTN
           END-IF
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":***  環境変数取得  END  ***"
      *-----------------------------------------------------------------
           CONTINUE.
       GET-ENV-ARG-EXT.
           EXIT.
      ******************************************************************
      *    3.1.3.ODW接続用業務タスクIDを設定
      ******************************************************************
       ODW-TASK-SET-RTN       SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":***  ODW接続用業務タスクIDを設定"
      D                       "  SATRT  ***"
      D    DISPLAY  CNS-PGM-ID":ワーク業務タスクID=["WK-GYOMU-TASK-ID"]"
      *-----------------------------------------------------------------
           INITIALIZE  WK-MEISAI-FILE-NAME
                       WK-ODW-GYOMU-TASK-ID
                       WK-KIDOU-SS-TASK-ID
           EVALUATE  WK-GYOMU-TASK-ID
      *---------- 'TD871JC'(ＯＤＷ接続−ＧＸ時価データコピー)
             WHEN  CNS-TD871JC
      *---------- ワーク起動元業務タスクID←'T7050JC'(GX時価)
               MOVE  CNS-T7050JC        TO  WK-KIDOU-SS-TASK-ID
      *---------- ワークODW接続用業務タスクID←'TD870JC'
      *---------- (ＯＤＷ時価データ接続)
               MOVE  CNS-TD870JC        TO  WK-ODW-GYOMU-TASK-ID
      *---------- ワーク明細リストファイル名←RXワーク利用会社
      *---------- コード_ワーク処理実行日_T7170DY_01.list
               STRING  CNS-RX
                       WK-RIYO-CMP-CD
                       CNS-UNDERBAR
                       WK-SYORI-YMD
                       CNS-UNDERBAR
                       CNS-T7170DY
                       CNS-UNDERBAR
                       CNS-X-01
                       CNS-LIST
                       DELIMITED BY SIZE
                 INTO  WK-MEISAI-FILE-NAME
      *---------- 'TD891US'(ＯＤＷ接続−ＧＸ取引データコピー)
             WHEN  CNS-TD891US
      *---------- ワーク起動元業務タスクID←'T7070US'(GX取引)
               MOVE  CNS-T7070US        TO  WK-KIDOU-SS-TASK-ID
      *---------- ワークODW接続用業務タスクID←'TD890US'
      *---------- (ＯＤＷ取引データ接続)
               MOVE  CNS-TD890US        TO  WK-ODW-GYOMU-TASK-ID
      *---------- ワーク明細リストファイル名←RXワーク利用会社
      *---------- コード_ワーク処理実行日_T7170DY_02.list
               STRING  CNS-RX
                       WK-RIYO-CMP-CD
                       CNS-UNDERBAR
                       WK-SYORI-YMD
                       CNS-UNDERBAR
                       CNS-T7170DY
                       CNS-UNDERBAR
                       CNS-X-02
                       CNS-LIST
                       DELIMITED BY SIZE
                 INTO  WK-MEISAI-FILE-NAME
      *---------- 'TD901US'(ＯＤＷ接続−ＧＸ残高データコピー)
             WHEN  CNS-TD901US
      *---------- ワーク起動元業務タスクID←'T7080US'(GX残高)
               MOVE  CNS-T7080US        TO  WK-KIDOU-SS-TASK-ID
      *---------- ワークODW接続用業務タスクID←'TD900US'
      *---------- (ＯＤＷ残高データ接続)
               MOVE  CNS-TD900US        TO  WK-ODW-GYOMU-TASK-ID
      *---------- ワーク明細リストファイル名←RXワーク利用会社
      *---------- コード_ワーク処理実行日_T7170DY_03.list
               STRING  CNS-RX
                       WK-RIYO-CMP-CD
                       CNS-UNDERBAR
                       WK-SYORI-YMD
                       CNS-UNDERBAR
                       CNS-T7170DY
                       CNS-UNDERBAR
                       CNS-X-03
                       CNS-LIST
                       DELIMITED BY SIZE
                 INTO  WK-MEISAI-FILE-NAME
      *---------- 'TD921US'(ＯＤＷ接続−ＧＸ集約データコピー)
             WHEN  CNS-TD921US
      *---------- ワーク起動元業務タスクID←'T7100US'(GX集約)
               MOVE  CNS-T7100US        TO  WK-KIDOU-SS-TASK-ID
      *---------- ワークODW接続用業務タスクID←'TD920US'
      *---------- (ＯＤＷ集約データ接続)
               MOVE  CNS-TD920US        TO  WK-ODW-GYOMU-TASK-ID
      *---------- ワーク明細リストファイル名←RXワーク利用会社
      *---------- コード_ワーク処理実行日_T7170DY_04.list
               STRING  CNS-RX
                       WK-RIYO-CMP-CD
                       CNS-UNDERBAR
                       WK-SYORI-YMD
                       CNS-UNDERBAR
                       CNS-T7170DY
                       CNS-UNDERBAR
                       CNS-X-04
                       CNS-LIST
                       DELIMITED BY SIZE
                 INTO  WK-MEISAI-FILE-NAME
      *---------- 'TD930US'(ＯＤＷ現金異動データ接続)
             WHEN  CNS-TD930US
      *---------- ワーク起動元業務タスクID←'TD930US'
      *---------- (ＯＤＷ現金異動データ接続)
               MOVE  CNS-TD930US        TO  WK-KIDOU-SS-TASK-ID
      *---------- ワークODW接続用業務タスクID←'TD930US'
      *---------- (ＯＤＷ現金異動データ接続)
               MOVE  CNS-TD930US        TO  WK-ODW-GYOMU-TASK-ID
      *---------- ワーク明細リストファイル名←RXワーク利用会社
      *---------- コード_ワーク処理実行日_T7170DY_05.list
               STRING  CNS-RX
                       WK-RIYO-CMP-CD
                       CNS-UNDERBAR
                       WK-SYORI-YMD
                       CNS-UNDERBAR
                       CNS-T7170DY
                       CNS-UNDERBAR
                       CNS-X-05
                       CNS-LIST
                       DELIMITED BY SIZE
                 INTO  WK-MEISAI-FILE-NAME
      *---------- 'TD851JC'(ＯＤＷ接続−ＧＸ銘柄分類データコピー)
             WHEN  CNS-TD851JC
      *---------- ワーク起動元業務タスクID←'T7030JC'
      *---------- (ＧＸ銘柄分類データ接続)
               MOVE  CNS-T7030JC        TO  WK-KIDOU-SS-TASK-ID
      *---------- ワークODW接続用業務タスクID←'TD850JC'
      *---------- (ＯＤＷ銘柄分類データ接続)
               MOVE  CNS-TD850JC        TO  WK-ODW-GYOMU-TASK-ID
      *---------- ワーク明細リストファイル名←RXワーク利用会社
      *---------- コード_ワーク処理実行日_T7170DY_06.list
               STRING  CNS-RX
                       WK-RIYO-CMP-CD
                       CNS-UNDERBAR
                       WK-SYORI-YMD
                       CNS-UNDERBAR
                       CNS-T7170DY
                       CNS-UNDERBAR
                       CNS-X-06
                       CNS-LIST
                       DELIMITED BY SIZE
                 INTO  WK-MEISAI-FILE-NAME
      *---------- 'TD861JC'(ＯＤＷ接続−ＧＸ銘柄属性データコピー)
             WHEN  CNS-TD861JC
      *---------- ワーク起動元業務タスクID←'T7040JC'
      *---------- (ＧＸ銘柄属性データ接続)
               MOVE  CNS-T7040JC        TO  WK-KIDOU-SS-TASK-ID
      *---------- ワークODW接続用業務タスクID←'TD860JC'
      *---------- (ＯＤＷ銘柄属性データ接続)
               MOVE  CNS-TD860JC        TO  WK-ODW-GYOMU-TASK-ID
      *---------- ワーク明細リストファイル名←RXワーク利用会社
      *---------- コード_ワーク処理実行日_T7170DY_07.list
               STRING  CNS-RX
                       WK-RIYO-CMP-CD
                       CNS-UNDERBAR
                       WK-SYORI-YMD
                       CNS-UNDERBAR
                       CNS-T7170DY
                       CNS-UNDERBAR
                       CNS-X-07
                       CNS-LIST
                       DELIMITED BY SIZE
                 INTO  WK-MEISAI-FILE-NAME
             WHEN  OTHER
      *----------  エラー検知プログラム名
               MOVE  CNS-PGM-ID
                 TO  ERR-PGM-ID         OF  PARM-SCZY1170-ARG1
      *----------  ポジション
               MOVE  CNS-POS-063
                 TO  ERR-POS            OF  PARM-SCZY1170-ARG1
      *----------  リターンコード
               MOVE  CNS-RTN-800
                 TO  RTN-CD             OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
               MOVE  CNS-0
                 TO  DETAIL-RTN-CD      OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
               MOVE  CNS-DETAIL-0
                 TO  DETAIL-RTN-CD-FLG  OF  PARM-SCZY1170-ARG1
      *----------  フリーメッセージ
               MOVE  CNS-PGM-ERR
                 TO  FREE-MSG           OF  PARM-SCZY1170-ARG1
      *----------  3.4 エラー処理
               PERFORM  ERR-RTN
           END-EVALUATE
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワーク起動元業務タスクID=["
      D                        WK-KIDOU-SS-TASK-ID"]"
      D    DISPLAY  CNS-PGM-ID":ワークODW接続用業務タスクID=["
      D                        WK-ODW-GYOMU-TASK-ID"]"
      D    DISPLAY  CNS-PGM-ID":ワーク明細リストファイル名=["
      D                        WK-MEISAI-FILE-NAME"]"
      D    DISPLAY  CNS-PGM-ID":***  ODW接続用業務タスクIDを設定"
      D                       "  END  ***"
      *-----------------------------------------------------------------
           CONTINUE.
       ODW-TASK-SET-EXT.
           EXIT.
      ******************************************************************
      *    ワーク処理実行日の前営業日を取得
      ******************************************************************
       CALL-SCZY1020-RTN      SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** ワーク処理実行日の前営業日を取得"
      D             "   START  ***"
      *-----------------------------------------------------------------
           INITIALIZE  PARM-SCZY1020-INOUT
                       PARM-RTNPKG
      *----------  機能区分
           MOVE  CNS-X-3
             TO  IXCAL-FUNCTION         OF  PARM-SCZY1020-ARG1
      *----------  基準年月日1
           MOVE  WK-SYORI-YMD
             TO  IXCAL-KJN-YMD1         OF  PARM-SCZY1020-ARG1
      *----------  計算ベース区分
           MOVE  CNS-X-2
             TO  IXCAL-COMP-BASE        OF  PARM-SCZY1020-ARG1
      *----------  前後区分1
           MOVE  CNS-X-2
             TO  IXCAL-ZENGO-KBN-1      OF  PARM-SCZY1020-ARG1
      *----------  前後区分2
           MOVE  CNS-X-2
             TO  IXCAL-ZENGO-KBN-2      OF  PARM-SCZY1020-ARG1
      *----------  単位区分
           MOVE  CNS-X-1
             TO  IXCAL-TANI-KBN         OF  PARM-SCZY1020-ARG1
      *----------  日数
           MOVE  CNS-1
             TO  IXCAL-DAYS             OF  PARM-SCZY1020-ARG1
      *----------  基準年月日２
      *----------  基準日2−曜日
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":機能区分=["
      D             IXCAL-FUNCTION      OF  PARM-SCZY1020-ARG1 "]"
      D    DISPLAY  CNS-PGM-ID":基準年月日1=["
      D             IXCAL-KJN-YMD1      OF  PARM-SCZY1020-ARG1 "]"
      D    DISPLAY  CNS-PGM-ID":計算ベース区分=["
      D             IXCAL-COMP-BASE     OF  PARM-SCZY1020-ARG1 "]"
      D    DISPLAY  CNS-PGM-ID":前後区分1=["
      D             IXCAL-ZENGO-KBN-1   OF  PARM-SCZY1020-ARG1 "]"
      D    DISPLAY  CNS-PGM-ID":前後区分2=["
      D             IXCAL-ZENGO-KBN-2   OF  PARM-SCZY1020-ARG1 "]"
      D    DISPLAY  CNS-PGM-ID":単位区分=["
      D             IXCAL-TANI-KBN      OF  PARM-SCZY1020-ARG1 "]"
      D    DISPLAY  CNS-PGM-ID":日数=["
      D             IXCAL-DAYS          OF  PARM-SCZY1020-ARG1 "]"
      D    DISPLAY  CNS-PGM-ID":基準年月日２=["
      D             IXCAL-KJN-YMD2      OF  PARM-SCZY1020-ARG1 "]"
      D    DISPLAY  CNS-PGM-ID":基準日2−曜日=["
      D             IXCAL-KJN-2-YOBI    OF  PARM-SCZY1020-ARG1 "]"
      D    DISPLAY  CNS-PGM-ID":***  CALL  SCZY1020 START ***"
      *-----------------------------------------------------------------
           CALL  CNS-SCZY1020           USING  PARM-SCZY1020-INOUT
                                               PARM-RTNPKG
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  CNS-PGM-ID":***  CALL  SCZY1020  END  ***"
      D    DISPLAY  CNS-PGM-ID":RTN-CD(SCZY1020)      =["
      D             RTN-CD  OF  PARM-RTNPKG (COUNTER OF PARM-RTNPKG)"]"
      D    DISPLAY  CNS-PGM-ID"PARM-RTNPKG=["PARM-RTNPKG"]"
      *-----------------------------------------------------------------
           IF  RTN-CD  OF PARM-RTNPKG (COUNTER  OF  PARM-RTNPKG)
             =  CNS-RTN-000
           THEN
             INITIALIZE  PARM-RTNPKG
      *----------  ワーク前営業日←取得した日付
             MOVE  IXCAL-KJN-YMD-2      OF  PARM-SCZY1020-ARG1
               TO  WK-ZEN-EIGYOU
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":【SCZY1020】からARG1.基準年月日２=["
      D             IXCAL-KJN-YMD-2     OF  PARM-SCZY1020-ARG1 "]"
      D    DISPLAY  CNS-PGM-ID":ワーク前営業日=["WK-ZEN-EIGYOU"]"
      *-----------------------------------------------------------------
           ELSE
      *----------  エラー検知プログラム名
             MOVE  CNS-PGM-ID
               TO  ERR-PGM-ID           OF  PARM-SCZY1170-ARG1
      *----------  ポジション
             MOVE  CNS-POS-003
               TO  ERR-POS              OF  PARM-SCZY1170-ARG1
      *----------  リターンコード
             MOVE  CNS-RTN-901
               TO  RTN-CD               OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
             MOVE  CNS-0
               TO  DETAIL-RTN-CD        OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
             MOVE  CNS-DETAIL-0
               TO  DETAIL-RTN-CD-FLG    OF  PARM-SCZY1170-ARG1
      *----------  フリーメッセージ
             MOVE  SPACE
               TO  FREE-MSG             OF  PARM-SCZY1170-ARG1
      *----------  エラー処理
             PERFORM  ERR-RTN
           END-IF
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** ワーク処理実行日の前営業日を取得"
      D             "   END  ***"
      *-----------------------------------------------------------------
           CONTINUE.
       CALL-SCZY1020-EXT.
           EXIT.
      ******************************************************************
      *    3.1.5.NASパスで前営業日より古いファイルを全部削除
      ******************************************************************
       NAS-OLD-DELETE-RTN     SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":***  NASパスで前営業日より古いファイル"
      D                        "を全部削除  SATRT  ***"
      D    DISPLAY  CNS-PGM-ID
      D             ":***  【CBLDCADM】をコール処理  START  ***"
      *-----------------------------------------------------------------
           INITIALIZE       WK-ADM-ARG1
                            WK-ADM-ARG2
                            WK-ADM-ARG3
                            WK-ADM-ARG4
                            WK-KOMANDO
                            WK-LEN-KOMANDO
                            WK-ERR-POS
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":WK-ADM-ARG1 =[" WK-ADM-ARG1"]"
      D    DISPLAY  CNS-PGM-ID":WK-ADM-ARG2 =[" WK-ADM-ARG2"]"
      D    DISPLAY  CNS-PGM-ID":WK-ADM-ARG3 =[" WK-ADM-ARG3"]"
      D    DISPLAY  CNS-PGM-ID":WK-ADM-ARG4 =[" WK-ADM-ARG4"]"
      D    DISPLAY  CNS-PGM-ID":WK-KOMANDO  =[" WK-KOMANDO"]"
      *-----------------------------------------------------------------
      *----------  ワークコマンド
           PERFORM
             VARYING WK-I FROM FUNCTION LENGTH(WK-NAS-PATH) BY -1
             UNTIL  WK-NAS-PATH(WK-I:1) NOT = SPACE OR WK-I < 1
           END-PERFORM
           STRING  CNS-BIN-LS
                   WK-NAS-PATH(CNS-1:WK-I)
                   CNS-AWKP
                   CNS-YINGHAO
                   WK-NAS-PATH(CNS-1:WK-I)
                   CNS-SLASH
                   CNS-YINGHAO
                   "$1}'"
                   CNS-GRP
                   "'"
                   CNS-RX
                   WK-RIYO-CMP-CD
                   "'"
                   CNS-GRP
                   CNS-E
                   "'"
                   WK-KIDOU-SS-TASK-ID
                   "|"
                   WK-GYOMU-TASK-ID
                   "|"
                   WK-ODW-GYOMU-TASK-ID
                   "'"
                   CNS-GVE
                   "'"
                   WK-ZEN-EIGYOU
                   "|"
                   WK-SYORI-YMD
                   "'"
                   CNS-RMF
                   DELIMITED BY SIZE
                 INTO  WK-KOMANDO
           INSPECT  FUNCTION REVERSE(WK-KOMANDO)
                    TALLYING WK-LEN-KOMANDO FOR LEADING SPACES
           COMPUTE  WK-LEN-KOMANDO = 
                    FUNCTION LENGTH(WK-KOMANDO) - WK-LEN-KOMANDO
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":ワークコマンドの長さ=["WK-LEN-KOMANDO"]"
      *-----------------------------------------------------------------
           MOVE  CNS-POS-005            TO  WK-ERR-POS
      *-----------  【CBLDCADM】をコール処理
           PERFORM  CALL-CBLDCADM-RTN
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":***  NASパスで前営業日より古いファイル"
      D                       "を全部削除  END  ***"
      *-----------------------------------------------------------------
           CONTINUE.
       NAS-OLD-DELETE-EXT.
           EXIT.
      ******************************************************************
      *    【CBLDCADM】をコール処理
      ******************************************************************
       CALL-CBLDCADM-RTN      SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID
      D             ":***  【CBLDCADM】をコール処理  START  ***"
      *-----------------------------------------------------------------
           MOVE  "COMMAND "
             TO  ADM-CALL          OF  WK-ADM-ARG1
           MOVE  WK-LEN-KOMANDO
             TO  LINK-DATA-LENG    OF  WK-ADM-ARG2
           MOVE  WK-KOMANDO(1:WK-LEN-KOMANDO)
             TO  LINK-DATA         OF  WK-ADM-ARG2
           MOVE  CNS-4096
             TO  RESULT-LENG       OF  WK-ADM-ARG3
           MOVE  CNS-1024
             TO  ERR-RESULT-LENG   OF  WK-ADM-ARG4
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ADM-CALL =["ADM-CALL"]"
      D    DISPLAY  CNS-PGM-ID":FLAGS =["
      D             FLAGS               OF  WK-ADM-ARG1"]"
      D    DISPLAY  CNS-PGM-ID":LINK-DATA-LENG =["LINK-DATA-LENG"]"
      D    DISPLAY  CNS-PGM-ID":LINK-DATA =["LINK-DATA"]"
      D    DISPLAY  CNS-PGM-ID":CALL CBLDCADM START"
      *-----------------------------------------------------------------
           CALL  "CBLDCADM"             USING  WK-ADM-ARG1
                                               WK-ADM-ARG2
                                               WK-ADM-ARG3
                                               WK-ADM-ARG4
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** CALL CBLDCADM  END  ***"
      D    DISPLAY  CNS-PGM-ID":STATUS-CODE =["
      D             STATUS-CODE         OF  WK-ADM-ARG1"]"
      D    DISPLAY  CNS-PGM-ID":DESCRIPTOR =["
      D             DESCRIPTOR          OF  WK-ADM-ARG1"]"
      D    DISPLAY  CNS-PGM-ID":FLAGS =["
      D             FLAGS               OF  WK-ADM-ARG1"]"
      D    DISPLAY  CNS-PGM-ID":RESULT-LENG =["
      D             RESULT-LENG         OF  WK-ADM-ARG3"]"
      D    DISPLAY  CNS-PGM-ID":RESULT=["
      D             RESULT              OF  WK-ADM-ARG3"]"
      D    DISPLAY  CNS-PGM-ID":ERR-RESULT-LENG =["
      D             ERR-RESULT-LENG     OF  WK-ADM-ARG4"]"
      *-----------------------------------------------------------------
           IF  STATUS-CODE OF  WK-ADM-ARG1 NOT = "00000"
           THEN
      *----------  エラー検知プログラム名
             MOVE  CNS-PGM-ID
               TO  ERR-PGM-ID           OF  PARM-SCZY1170-ARG1
      *----------  ポジション
             MOVE  WK-ERR-POS
               TO  ERR-POS              OF  PARM-SCZY1170-ARG1
      *----------  リターンコード
             MOVE  CNS-RTN-901
               TO  RTN-CD               OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
             MOVE  STATUS-CODE          OF  WK-ADM-ARG1
               TO  DETAIL-RTN-CD        OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
             MOVE  CNS-DETAIL-0
               TO  DETAIL-RTN-CD-FLG    OF  PARM-SCZY1170-ARG1
      *----------  フリーメッセージ
             MOVE  ERR-RESULT           OF  WK-ADM-ARG4
               TO  FREE-MSG             OF  PARM-SCZY1170-ARG1
      *----------  エラー処理
             PERFORM  ERR-RTN
           ELSE
             CONTINUE
           END-IF
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":***  【CBLDCADM】をコール処理  END  ***"
      *-----------------------------------------------------------------
           CONTINUE.
       CALL-CBLDCADM-EXT.
           EXIT.
      ******************************************************************
      *    3.2 主処理
      ******************************************************************
       MAIN-RTN               SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  CNS-PGM-ID":*****  主処理  START  *****"
      *-----------------------------------------------------------------
      *----------  3.2.1NASパスでgzファイルの解凍処理
           PERFORM  NAS-GZ-KAIDOU-RTN
      *----------  3.2.2今回の全て解凍した起動IDリストファイル一覧を取得
           PERFORM  RST-FILE-GET-RTN
      *----------  3.2.3ctlファイルをオープンする
           PERFORM  CTL-FILE-GET-RTN
      *----------  3.2.4それぞれの起動IDリストファイルの内容を読み込み
           PERFORM  KIDOU-RSTFILE-RD-RTN
      *----------  3.2.5ctlファイルをクローズする
           PERFORM  CTL-FILE-CLOSE-RTN
      *----------  3.2.6マージファイル名前から".bak"を削除して
           PERFORM  DEL-BAK-FILE-RTN
      *----------  3.2.7マージファイルの圧縮処理
           PERFORM  GZ-BAK-FILE-RTN
      *----------  3.2.8圧縮したgzファイルの名前を変更する
           PERFORM  RENAME-FILE-RTN
      *----------  3.2.9圧縮結果とctlファイルをBLサーバへコピー
           PERFORM  COPY-BL-FILE-RTN
      *----------  3.2.10TEMPファイルの削除処理
           PERFORM  DEL-TEMP-FILE-RTN
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  CNS-PGM-ID":*****   主処理  END   *****"
      *-----------------------------------------------------------------
           CONTINUE.
       MAIN-EXT.
           EXIT.
      ******************************************************************
      *    3.2.1NASパスでgzファイルの解凍処理
      ******************************************************************
       NAS-GZ-KAIDOU-RTN      SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** NASパスでgzファイルの解凍処理"
      D                       " START ***"
      *-----------------------------------------------------------------
           INITIALIZE       WK-ADM-ARG1
                            WK-ADM-ARG2
                            WK-ADM-ARG3
                            WK-ADM-ARG4
                            WK-KOMANDO
                            WK-LEN-KOMANDO
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":WK-ADM-ARG1 =[" WK-ADM-ARG1"]"
      D    DISPLAY  CNS-PGM-ID":WK-ADM-ARG2 =[" WK-ADM-ARG2"]"
      D    DISPLAY  CNS-PGM-ID":WK-ADM-ARG3 =[" WK-ADM-ARG3"]"
      D    DISPLAY  CNS-PGM-ID":WK-ADM-ARG4 =[" WK-ADM-ARG4"]"
      D    DISPLAY  CNS-PGM-ID":WK-KOMANDO  =[" WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":WK-LEN-KOMANDO=["WK-LEN-KOMANDO"]"
      *-----------------------------------------------------------------
           STRING  CNS-GUNZIP
                   WK-NAS-PATH(1:WK-I)
                   CNS-SLASH
                   CNS-RX
                   WK-RIYO-CMP-CD
                   CNS-UNDERBAR
                   WK-SYORI-YMD
                   CNS-UNDERBAR
                   "*"
                   CNS-UNDERBAR
                   WK-KIDOU-SS-TASK-ID
                   "*"
                   CNS-GZ
                   DELIMITED BY SIZE
             INTO  WK-KOMANDO
           INSPECT  FUNCTION REVERSE(WK-KOMANDO)
                    TALLYING WK-LEN-KOMANDO FOR LEADING SPACES
           COMPUTE  WK-LEN-KOMANDO = 
                    FUNCTION LENGTH(WK-KOMANDO) - WK-LEN-KOMANDO
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["
      D                        WK-KOMANDO(1:WK-LEN-KOMANDO)"]"
      *-----------------------------------------------------------------
           MOVE  CNS-POS-006            TO  WK-ERR-POS
      *-----------  【CBLDCADM】をコール処理
           PERFORM  CALL-CBLDCADM-RTN
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** NASパスでgzファイルの解凍処理"
      D                       "  END  ***"
      *-----------------------------------------------------------------
           CONTINUE.
       NAS-GZ-KAIDOU-EXT.
           EXIT.
      ******************************************************************
      *    3.2.2今回の全て解凍した起動IDリストファイル一覧を取得
      ******************************************************************
       RST-FILE-GET-RTN       SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** 今回の全て解凍した起動IDリスト"
      D                       "ファイル一覧を取得 START ***"
      *-----------------------------------------------------------------
      *----------  1) 明細リストファイルをオープン
           PERFORM  OPEN-RSTFILE-RTN
      *----------  2) 明細リストファイルから、1で読み込
           PERFORM  READ-RSTFILE-RTN  UNTIL  FLG-EOF-RSTFILE = CNS-ON
      *----------  3) 明細リストファイルをクローズ
           PERFORM  CLOSE-RSTFILE-RTN
      *----------  4) 
      *----------  ワーク長さ←ワークすべて起動ID件数 *7 -1
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY CNS-PGM-ID":ワークすべて起動ID件数=["
      D                       WK-ALL-KIDOU-CNT"]"
      D    DISPLAY CNS-PGM-ID":ワーク長さ=["WK-LENGTH"]"
      *-----------------------------------------------------------------
           COMPUTE  WK-LENGTH  =  WK-ALL-KIDOU-CNT  *  CNS-7 - CNS-1
      *----------  ワーク解凍対象起動IDコマンド
           STRING  "'"
                   WK-ALL-KIDOU-ID-G(CNS-1:WK-LENGTH)
                   "'"
                   DELIMITED BY SIZE
             INTO  WK-KAD-KIDOU-KOMANDO
           INSPECT  FUNCTION REVERSE(WK-KAD-KIDOU-KOMANDO)
                    TALLYING WK-LEN-KAD-KIDOU-KOMANDO FOR LEADING SPACES
           COMPUTE  WK-LEN-KAD-KIDOU-KOMANDO
                  = FUNCTION LENGTH(WK-KAD-KIDOU-KOMANDO)
                  - WK-LEN-KAD-KIDOU-KOMANDO
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY CNS-PGM-ID":ワーク長さ=["WK-LENGTH"]"
      D    DISPLAY CNS-PGM-ID":ワーク解凍対象起動IDコマンド=["
      D                       WK-KAD-KIDOU-KOMANDO"]"
      *-----------------------------------------------------------------
           INITIALIZE      WK-ADM-ARG1
                           WK-ADM-ARG2
                           WK-ADM-ARG3
                           WK-ADM-ARG4
                           WK-KOMANDO
                           WK-LEN-KOMANDO
                           WK-ERR-POS
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      *-----------------------------------------------------------------
           STRING  CNS-BIN-LS
                   WK-NAS-PATH(1:WK-I)
                   CNS-GRP
                   "'"
                   CNS-RX
                   WK-RIYO-CMP-CD
                   "'"
                   CNS-GRP
                   "'"
                   WK-SYORI-YMD
                   "'"
                   CNS-GRP
                   "'"
                   WK-KIDOU-SS-TASK-ID
                   "'"
                   CNS-GRP
                   CNS-E
                   WK-KAD-KIDOU-KOMANDO(CNS-1:WK-LEN-KAD-KIDOU-KOMANDO)
                   CNS-GRP
                   CNS-V
                   CNS-FINISH
                   DELIMITED BY SIZE
             INTO  WK-KOMANDO
           INSPECT  FUNCTION REVERSE(WK-KOMANDO)
                    TALLYING WK-LEN-KOMANDO FOR LEADING SPACES
           COMPUTE  WK-LEN-KOMANDO = 
                    FUNCTION LENGTH(WK-KOMANDO) - WK-LEN-KOMANDO
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["
      D                        WK-KOMANDO(1:WK-LEN-KOMANDO)"]"
      *-----------------------------------------------------------------
           MOVE  CNS-POS-007            TO  WK-ERR-POS
      *-----------  【CBLDCADM】をコール処理
           PERFORM  CALL-CBLDCADM-RTN
           MOVE  RESULT       OF  WK-ADM-ARG3(CNS-1:CNS-3168)
             TO  WK-KIDOU-REBA-LST-G
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":データ名J(CNS-1:CNS-3168)=["
      D             RESULT       OF  WK-ADM-ARG3(CNS-1:CNS-3168)"]"
      D    DISPLAY  CNS-PGM-ID":ワーク起動ID連番一覧=["
      D                        WK-KIDOU-REBA-LST-G"]"
      *-----------------------------------------------------------------
           MOVE  CNS-1           TO  WK-IDX
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":WK-IDX=["WK-IDX"]"
      D    DISPLAY  CNS-PGM-ID":ワーク起動IDリスト一覧名("WK-IDX")"
      D                       "=["WK-KIDOU-LST(WK-IDX)"]"
      *-----------------------------------------------------------------
           PERFORM  UNTIL  WK-IDX  >  CNS-396
                          OR  WK-KIDOU-LST(WK-IDX) = SPACE
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワーク起動IDリスト一覧名("WK-IDX")"
      D                       "=["WK-KIDOU-LST(WK-IDX)"]"
      D    DISPLAY  CNS-PGM-ID":ワーク連番リスト一覧("WK-IDX")=["
      D                        WK-RENBA-LST(WK-IDX)"]"
      *-----------------------------------------------------------------
             STRING  CNS-RX
                     WK-RIYO-CMP-CD
                     CNS-UNDERBAR
                     WK-SYORI-YMD
                     CNS-UNDERBAR
                     WK-KIDOU-LST(WK-IDX)
                     CNS-UNDERBAR
                     WK-KIDOU-SS-TASK-ID
                     CNS-UNDERBAR
                     WK-RENBA-LST(WK-IDX)
                     DELIMITED BY SIZE
               INTO  WK-KIDOU-FILENAME(WK-IDX)
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワーク起動IDリストファイル名("WK-IDX")"
      D                       "=["WK-KIDOU-FILENAME(WK-IDX)"]"
      *-----------------------------------------------------------------
             COMPUTE  WK-IDX = WK-IDX + CNS-1
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":WK-IDX=["WK-IDX"]"
      *-----------------------------------------------------------------
           END-PERFORM
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** 今回の全て解凍した起動IDリスト"
      D                       "ファイル一覧を取得  END  ***"
      *-----------------------------------------------------------------
           CONTINUE.
       RST-FILE-GET-EXT.
           EXIT.
      ******************************************************************
      *    1) 明細リストファイルをオープン
      ******************************************************************
       OPEN-RSTFILE-RTN       SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY CNS-PGM-ID ":***  OPEN-RSTFILE-RTN START ***"
      *-----------------------------------------------------------------
           INITIALIZE  RST-REC
           STRING  WK-NAS-PATH(1:WK-I)
                   CNS-SLASH
                   WK-MEISAI-FILE-NAME
                   DELIMITED BY SIZE
           INTO  RSTFILE
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY CNS-PGM-ID ":RSTFILE = ["RSTFILE"]"
      *-----------------------------------------------------------------
           OPEN  INPUT  RST-FILE
           IF  ST-RSTFILE  =  CNS-FILE-NORMAL
           THEN
             MOVE  CNS-ON               TO  FLG-RSTFILE-OPEN
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY CNS-PGM-ID":ST-RSTFILE=["ST-RSTFILE"]"
      D    DISPLAY CNS-PGM-ID":FLG-RSTFILE-OPEN=["FLG-RSTFILE-OPEN"]"
      *-----------------------------------------------------------------
           ELSE
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY CNS-PGM-ID":ST-RSTFILE = ["ST-RSTFILE"]"
      D    DISPLAY CNS-PGM-ID":ファイルアクセスエラー(OPEN)"
      *-----------------------------------------------------------------
      *----------  エラー検知プログラムID
             MOVE  CNS-PGM-ID
               TO  ERR-PGM-ID           OF  PARM-SCZY1170-ARG1
      *----------  ポジション
             MOVE  CNS-POS-008
               TO  ERR-POS              OF  PARM-SCZY1170-ARG1
      *----------  リターンコード
             MOVE  CNS-RTN-200
               TO  RTN-CD               OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
             MOVE  ST-RSTFILE
               TO  DETAIL-RTN-CD        OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
             MOVE  CNS-DETAIL-0
               TO  DETAIL-RTN-CD-FLG    OF  PARM-SCZY1170-ARG1
      *---------- フリーメッセージ
             MOVE  CNS-FILE-OPEN-ERR
               TO  FREE-MSG             OF  PARM-SCZY1170-ARG1
      *----------  エラー処理
             PERFORM  ERR-RTN
           END-IF
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY CNS-PGM-ID ":*** OPEN-OUTFILE-RTN END ***"
      *-----------------------------------------------------------------
           CONTINUE.
       OPEN-RSTFILE-EXT.
           EXIT.
      ******************************************************************
      *    2) 明細リストファイルから、1で読み込より
      ******************************************************************
       READ-RSTFILE-RTN       SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY CNS-PGM-ID ":***  明細リストファイル読み START ***"
      *-------------------<DEBUG>---------------------------------------
           READ  RST-FILE
             AT  END  MOVE  CNS-ON  TO  FLG-EOF-RSTFILE
           END-READ
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY CNS-PGM-ID":FLG-EOF-RSTFILE=["FLG-EOF-RSTFILE"]"
      D    DISPLAY CNS-PGM-ID":ST-RSTFILE=["ST-RSTFILE"]"
      *-----------------------------------------------------------------
           IF  FLG-EOF-RSTFILE  NOT  = CNS-ON
           THEN
             IF  ST-RSTFILE  = CNS-FILE-NORMAL
             THEN
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY CNS-PGM-ID":取得のデータレコード(17:4)=["
      D                       RST-REC(CNS-17:CNS-4)"]"
      D    DISPLAY CNS-PGM-ID":ワークチェック起動ID=["WK-CHK-KIDOU-ID"]"
      *-----------------------------------------------------------------
               IF  RST-REC(CNS-17:CNS-4) NOT =  WK-CHK-KIDOU-ID
               THEN
      *--------  ワークチェック起動ID←取得のデータレコード(17:4)
                 MOVE  RST-REC(CNS-17:CNS-4)  TO   WK-CHK-KIDOU-ID
      *--------  ワークすべて起動ID件数←ワークすべて起動ID件数 + 1
                 COMPUTE  WK-ALL-KIDOU-CNT  = WK-ALL-KIDOU-CNT + CNS-1
      *--------  ワークすべて起動ID明細(ワークすべて起動ID件数)←
      *--------  ワークチェック起動ID
                 MOVE  WK-CHK-KIDOU-ID
                   TO  WK-MEISAI-KIDOU-ID(WK-ALL-KIDOU-CNT)
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY CNS-PGM-ID":ワークチェック起動ID=["WK-CHK-KIDOU-ID"]"
      D    DISPLAY CNS-PGM-ID":ワークすべて起動ID件数=["
      D                       WK-ALL-KIDOU-CNT"]"
      D    DISPLAY CNS-PGM-ID":ワークすべて起動ID明細("
      D                       WK-ALL-KIDOU-CNT")=["
      D                       WK-MEISAI-KIDOU-ID(WK-ALL-KIDOU-CNT)"]"
      *-----------------------------------------------------------------
               ELSE
                 CONTINUE
               END-IF
             ELSE
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY CNS-PGM-ID":ST-RSTFILE = ["ST-RSTFILE"]"
      D    DISPLAY CNS-PGM-ID":ファイルアクセスエラー(OPEN)"
      *-----------------------------------------------------------------
      *----------  エラー検知プログラムID
               MOVE  CNS-PGM-ID
                 TO  ERR-PGM-ID           OF  PARM-SCZY1170-ARG1
      *----------  ポジション
               MOVE  CNS-POS-009
                 TO  ERR-POS              OF  PARM-SCZY1170-ARG1
      *----------  リターンコード
               MOVE  CNS-RTN-210
                 TO  RTN-CD               OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
               MOVE  ST-RSTFILE
                 TO  DETAIL-RTN-CD        OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
               MOVE  CNS-DETAIL-0
                 TO  DETAIL-RTN-CD-FLG    OF  PARM-SCZY1170-ARG1
      *---------- フリーメッセージ
               MOVE  CNS-FILE-READ-ERR
                 TO  FREE-MSG             OF  PARM-SCZY1170-ARG1
      *----------  エラー処理
               PERFORM  ERR-RTN
             END-IF
           ELSE
             CONTINUE
           END-IF
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY CNS-PGM-ID ":*** 明細リストファイル読み END ***"
      *-----------------------------------------------------------------
           CONTINUE.
       READ-RSTFILE-EXT.
           EXIT.
      ******************************************************************
      *    3) 明細リストファイルをクローズ
      ******************************************************************
       CLOSE-RSTFILE-RTN      SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** 明細リストファイルをCLOSE START ***"
      D    DISPLAY  CNS-PGM-ID":*** RSTFILE CLOSE START  ***"
      *-----------------------------------------------------------------
           CLOSE  RST-FILE
           IF  ST-RSTFILE  =  CNS-FILE-NORMAL  THEN
             MOVE  CNS-OFF  TO  FLG-RSTFILE-OPEN
           ELSE
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY "ファイルアクセスエラー(CLOSE)"
      *-----------------------------------------------------------------
      *----------  エラー検知プログラムID
             MOVE  CNS-PGM-ID
               TO  ERR-PGM-ID           OF  PARM-SCZY1170-ARG1
      *----------  ポジション
             MOVE  CNS-POS-010
               TO  ERR-POS              OF  PARM-SCZY1170-ARG1
      *----------  リターンコード
             MOVE  CNS-RTN-230
               TO  RTN-CD               OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
             MOVE  ST-RSTFILE
               TO  DETAIL-RTN-CD        OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
             MOVE  CNS-DETAIL-0
               TO  DETAIL-RTN-CD-FLG    OF  PARM-SCZY1170-ARG1
      *---------- フリーメッセージ
             MOVE  CNS-FILE-CLOSE-ERR
               TO  FREE-MSG             OF  PARM-SCZY1170-ARG1
      *----------  エラー処理
             PERFORM  ERR-RTN
           END-IF
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":***  RSTFILE CLOSE END  ***"
      D    DISPLAY  CNS-PGM-ID":FLG-RSTFILE-OPEN=["FLG-RSTFILE-OPEN"]"
      D    DISPLAY  CNS-PGM-ID":*** 明細リストファイルをCLOSE  END  ***"
      *-----------------------------------------------------------------
           CONTINUE.
       CLOSE-RSTFILE-EXT.
           EXIT.
      ******************************************************************
      *    3.2.3ctlファイルをオープンする
      ******************************************************************
       CTL-FILE-GET-RTN       SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** ctlファイルをオープン START ***"
      *-----------------------------------------------------------------
           INITIALIZE  WK-GZ-KOMANDO
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワーク圧縮コマンド=["WK-GZ-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":ワークODW接続用業務タスクID=["
      D             WK-ODW-GYOMU-TASK-ID"]"
      *-----------------------------------------------------------------
           EVALUATE  WK-ODW-GYOMU-TASK-ID
             WHEN  CNS-TD870JC
             WHEN  CNS-TD930US
             WHEN  CNS-TD890US
             WHEN  CNS-TD850JC
      *--------  3.5.1.ctlファイル01のオープン
               PERFORM  CTLFILE01-OPEN-RTN
      *--------  ワーク圧縮コマンド
               STRING  CNS-GZIP
                       WK-NAS-PATH(1:WK-I)
                       CNS-SLASH
                       CNS-RX
                       WK-RIYO-CMP-CD
                       CNS-UNDERBAR
                       WK-SYORI-YMD
                       CNS-UNDERBAR
                       WK-KIDOU-ID
                       CNS-UNDERBAR
                       WK-ODW-GYOMU-TASK-ID
                       CNS-UNDERBAR
                       CNS-X-01
                       DELIMITED BY SIZE
                 INTO  WK-GZ-KOMANDO
             WHEN  CNS-TD920US
      *--------  3.5.1.ctlファイル01のオープン
               PERFORM  CTLFILE01-OPEN-RTN
      *--------  3.5.2.ctlファイル02のオープン
               PERFORM  CTLFILE02-OPEN-RTN
      *--------  ワーク圧縮コマンド
               STRING  CNS-GZIP
                       WK-NAS-PATH(1:WK-I)
                       CNS-SLASH
                       CNS-RX
                       WK-RIYO-CMP-CD
                       CNS-UNDERBAR
                       WK-SYORI-YMD
                       CNS-UNDERBAR
                       WK-KIDOU-ID
                       CNS-UNDERBAR
                       WK-ODW-GYOMU-TASK-ID
                       CNS-UNDERBAR
                       CNS-X-01
                       CNS-SPACE
                       WK-NAS-PATH(1:WK-I)
                       CNS-SLASH
                       CNS-RX
                       WK-RIYO-CMP-CD
                       CNS-UNDERBAR
                       WK-SYORI-YMD
                       CNS-UNDERBAR
                       WK-KIDOU-ID
                       CNS-UNDERBAR
                       WK-ODW-GYOMU-TASK-ID
                       CNS-UNDERBAR
                       CNS-X-02
                       DELIMITED BY SIZE
                 INTO  WK-GZ-KOMANDO
             WHEN  CNS-TD900US
      *--------  3.5.1.ctlファイル01のオープン
               PERFORM  CTLFILE01-OPEN-RTN
      *--------  3.5.2.ctlファイル02のオープン
               PERFORM  CTLFILE02-OPEN-RTN
      *--------  3.5.1.ctlファイル05のオープン
               PERFORM  CTLFILE05-OPEN-RTN
      *--------  3.5.2.ctlファイル06のオープン
               PERFORM  CTLFILE06-OPEN-RTN
      *--------  ワーク圧縮コマンド
               STRING  CNS-GZIP
                       WK-NAS-PATH(1:WK-I)
                       CNS-SLASH
                       CNS-RX
                       WK-RIYO-CMP-CD
                       CNS-UNDERBAR
                       WK-SYORI-YMD
                       CNS-UNDERBAR
                       WK-KIDOU-ID
                       CNS-UNDERBAR
                       WK-ODW-GYOMU-TASK-ID
                       CNS-UNDERBAR
                       CNS-X-01
                       CNS-SPACE
                       WK-NAS-PATH(1:WK-I)
                       CNS-SLASH
                       CNS-RX
                       WK-RIYO-CMP-CD
                       CNS-UNDERBAR
                       WK-SYORI-YMD
                       CNS-UNDERBAR
                       WK-KIDOU-ID
                       CNS-UNDERBAR
                       WK-ODW-GYOMU-TASK-ID
                       CNS-UNDERBAR
                       CNS-X-02
                       CNS-SPACE
                       WK-NAS-PATH(1:WK-I)
                       CNS-SLASH
                       CNS-RX
                       WK-RIYO-CMP-CD
                       CNS-UNDERBAR
                       WK-SYORI-YMD
                       CNS-UNDERBAR
                       WK-KIDOU-ID
                       CNS-UNDERBAR
                       WK-ODW-GYOMU-TASK-ID
                       CNS-UNDERBAR
                       CNS-X-05
                       CNS-SPACE
                       WK-NAS-PATH(1:WK-I)
                       CNS-SLASH
                       CNS-RX
                       WK-RIYO-CMP-CD
                       CNS-UNDERBAR
                       WK-SYORI-YMD
                       CNS-UNDERBAR
                       WK-KIDOU-ID
                       CNS-UNDERBAR
                       WK-ODW-GYOMU-TASK-ID
                       CNS-UNDERBAR
                       CNS-X-06
                       DELIMITED BY SIZE
                 INTO  WK-GZ-KOMANDO
             WHEN  CNS-TD860JC
               MOVE  CNS-1           TO  WK-IDX
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":WK-IDX=["WK-IDX"]"
      D    DISPLAY  CNS-PGM-ID":ワーク起動IDリストファイル名("WK-IDX")"
      D                       "=["WK-KIDOU-FILENAME(WK-IDX)"]"
      *-----------------------------------------------------------------
               PERFORM  UNTIL  WK-IDX  >  CNS-396
                          OR  WK-KIDOU-FILENAME(WK-IDX) = SPACE
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワーク起動IDリストファイル名("WK-IDX")"
      D             "(CNS-30:CNS-2)=["
      D             WK-KIDOU-FILENAME(WK-IDX)(CNS-30:CNS-2)"]"
      D    DISPLAY  CNS-PGM-ID":FLG-CTLFILE-OPEN-01=["
      D                         FLG-CTLFILE-OPEN-01"]"
      *-----------------------------------------------------------------
                 IF  WK-KIDOU-FILENAME(WK-IDX)(CNS-30:CNS-2)
                    =  CNS-X-01
                   AND  FLG-CTLFILE-OPEN-01  =  CNS-OFF
                 THEN
      *--------  3.5.1.ctlファイル01のオープン
                   PERFORM  CTLFILE01-OPEN-RTN
                 ELSE
                   CONTINUE
                 END-IF
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":FLG-CTLFILE-OPEN-02=["
      D                         FLG-CTLFILE-OPEN-02"]"
      *-----------------------------------------------------------------
                 IF  WK-KIDOU-FILENAME(WK-IDX)(CNS-30:CNS-2)
                    =  CNS-X-02
                   AND  FLG-CTLFILE-OPEN-02  =  CNS-OFF
                 THEN
      *--------  3.5.1.ctlファイル02のオープン
                   PERFORM  CTLFILE02-OPEN-RTN
                 ELSE
                   CONTINUE
                 END-IF
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":FLG-CTLFILE-OPEN-03=["
      D                         FLG-CTLFILE-OPEN-03"]"
      *-----------------------------------------------------------------
                 IF  WK-KIDOU-FILENAME(WK-IDX)(CNS-30:CNS-2)
                    =  CNS-X-03
                   AND  FLG-CTLFILE-OPEN-03  =  CNS-OFF
                 THEN
      *--------  3.5.1.ctlファイル03のオープン
                   PERFORM  CTLFILE03-OPEN-RTN
                 ELSE
                   CONTINUE
                 END-IF
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":FLG-CTLFILE-OPEN-04=["
      D                         FLG-CTLFILE-OPEN-04"]"
      *-----------------------------------------------------------------
                 IF  WK-KIDOU-FILENAME(WK-IDX)(CNS-30:CNS-2)
                    =  CNS-X-04
                   AND  FLG-CTLFILE-OPEN-04  =  CNS-OFF
                 THEN
      *--------  3.5.1.ctlファイル04のオープン
                   PERFORM  CTLFILE04-OPEN-RTN
                 ELSE
                   CONTINUE
                 END-IF
                 COMPUTE  WK-IDX = WK-IDX + CNS-1
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":WK-IDX=["WK-IDX"]"
      *-----------------------------------------------------------------
               END-PERFORM
      *--------  ワーク圧縮コマンド
               STRING  CNS-GZIP
                       DELIMITED BY SIZE
                 INTO  WK-GZ-KOMANDO
               INSPECT  FUNCTION REVERSE(WK-GZ-KOMANDO)
                        TALLYING WK-LEN-GZ-KOMANDO FOR LEADING SPACES
               COMPUTE  WK-LEN-GZ-KOMANDO = 
                        FUNCTION LENGTH(WK-GZ-KOMANDO)
                                                - WK-LEN-GZ-KOMANDO  
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワーク圧縮コマンド=["WK-GZ-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":ワーク圧縮コマンドの長さ=["
      D             WK-LEN-GZ-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":FLG-CTLFILE-OPEN-01=["
      D                         FLG-CTLFILE-OPEN-01"]"
      *-----------------------------------------------------------------
               IF  FLG-CTLFILE-OPEN-01  = CNS-ON
               THEN
                 STRING  WK-GZ-KOMANDO(CNS-1:WK-LEN-GZ-KOMANDO)
                         CNS-SPACE
                         WK-NAS-PATH(1:WK-I)
                         CNS-SLASH
                         CNS-RX
                         WK-RIYO-CMP-CD
                         CNS-UNDERBAR
                         WK-SYORI-YMD
                         CNS-UNDERBAR
                         WK-KIDOU-ID
                         CNS-UNDERBAR
                         WK-ODW-GYOMU-TASK-ID
                         CNS-UNDERBAR
                         CNS-X-01
                         DELIMITED BY SIZE
                   INTO  WK-GZ-KOMANDO
                 INITIALIZE  WK-LEN-GZ-KOMANDO
                 INSPECT  FUNCTION REVERSE(WK-GZ-KOMANDO)
                          TALLYING WK-LEN-GZ-KOMANDO FOR LEADING SPACES
                 COMPUTE  WK-LEN-GZ-KOMANDO = 
                          FUNCTION LENGTH(WK-GZ-KOMANDO)
                                                - WK-LEN-GZ-KOMANDO  
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワーク圧縮コマンド=["WK-GZ-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":ワーク圧縮コマンドの長さ=["
      D             WK-LEN-GZ-KOMANDO"]"
      *-----------------------------------------------------------------
               ELSE
                 CONTINUE
               END-IF
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":FLG-CTLFILE-OPEN-02=["
      D                         FLG-CTLFILE-OPEN-02"]"
      *-----------------------------------------------------------------
               IF  FLG-CTLFILE-OPEN-02  = CNS-ON
               THEN
                 STRING  WK-GZ-KOMANDO(CNS-1:WK-LEN-GZ-KOMANDO)
                         CNS-SPACE
                         WK-NAS-PATH(1:WK-I)
                         CNS-SLASH
                         CNS-RX
                         WK-RIYO-CMP-CD
                         CNS-UNDERBAR
                         WK-SYORI-YMD
                         CNS-UNDERBAR
                         WK-KIDOU-ID
                         CNS-UNDERBAR
                         WK-ODW-GYOMU-TASK-ID
                         CNS-UNDERBAR
                         CNS-X-02
                         DELIMITED BY SIZE
                   INTO  WK-GZ-KOMANDO
                 INITIALIZE  WK-LEN-GZ-KOMANDO
                 INSPECT  FUNCTION REVERSE(WK-GZ-KOMANDO)
                          TALLYING WK-LEN-GZ-KOMANDO FOR LEADING SPACES
                 COMPUTE  WK-LEN-GZ-KOMANDO = 
                          FUNCTION LENGTH(WK-GZ-KOMANDO)
                                                - WK-LEN-GZ-KOMANDO  
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワーク圧縮コマンド=["WK-GZ-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":ワーク圧縮コマンドの長さ=["
      D             WK-LEN-GZ-KOMANDO"]"
      *-----------------------------------------------------------------
               ELSE
                 CONTINUE
               END-IF
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":FLG-CTLFILE-OPEN-03=["
      D                         FLG-CTLFILE-OPEN-03"]"
      *-----------------------------------------------------------------
               IF  FLG-CTLFILE-OPEN-03  = CNS-ON
               THEN
                 STRING  WK-GZ-KOMANDO(CNS-1:WK-LEN-GZ-KOMANDO)
                         CNS-SPACE
                         WK-NAS-PATH(1:WK-I)
                         CNS-SLASH
                         CNS-RX
                         WK-RIYO-CMP-CD
                         CNS-UNDERBAR
                         WK-SYORI-YMD
                         CNS-UNDERBAR
                         WK-KIDOU-ID
                         CNS-UNDERBAR
                         WK-ODW-GYOMU-TASK-ID
                         CNS-UNDERBAR
                         CNS-X-03
                         DELIMITED BY SIZE
                   INTO  WK-GZ-KOMANDO
                 INITIALIZE  WK-LEN-GZ-KOMANDO
                 INSPECT  FUNCTION REVERSE(WK-GZ-KOMANDO)
                          TALLYING WK-LEN-GZ-KOMANDO FOR LEADING SPACES
                 COMPUTE  WK-LEN-GZ-KOMANDO = 
                          FUNCTION LENGTH(WK-GZ-KOMANDO)
                                                - WK-LEN-GZ-KOMANDO  
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワーク圧縮コマンド=["WK-GZ-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":ワーク圧縮コマンドの長さ=["
      D             WK-LEN-GZ-KOMANDO"]"
      *-----------------------------------------------------------------
               ELSE
                 CONTINUE
               END-IF
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":FLG-CTLFILE-OPEN-04=["
      D                         FLG-CTLFILE-OPEN-04"]"
      *-----------------------------------------------------------------
               IF  FLG-CTLFILE-OPEN-04  = CNS-ON
               THEN
                 STRING  WK-GZ-KOMANDO(CNS-1:WK-LEN-GZ-KOMANDO)
                         CNS-SPACE
                         WK-NAS-PATH(1:WK-I)
                         CNS-SLASH
                         CNS-RX
                         WK-RIYO-CMP-CD
                         CNS-UNDERBAR
                         WK-SYORI-YMD
                         CNS-UNDERBAR
                         WK-KIDOU-ID
                         CNS-UNDERBAR
                         WK-ODW-GYOMU-TASK-ID
                         CNS-UNDERBAR
                         CNS-X-04
                         CNS-SPACE
                         DELIMITED BY SIZE
                   INTO  WK-GZ-KOMANDO 
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワーク圧縮コマンド=["WK-GZ-KOMANDO"]"
      *-----------------------------------------------------------------
               ELSE
                 CONTINUE
               END-IF
             WHEN  OTHER
               CONTINUE
           END-EVALUATE
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワーク圧縮コマンド=["WK-GZ-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":*** ctlファイルをオープン END ***"
      *-----------------------------------------------------------------
           CONTINUE.
       CTL-FILE-GET-EXT.
           EXIT.
      ******************************************************************
      *    3.5.1.ctlファイル01のオープン
      ******************************************************************
       CTLFILE01-OPEN-RTN     SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY CNS-PGM-ID ":***  ctlファイル01のオープン START ***"
      *-----------------------------------------------------------------
           STRING  WK-NAS-PATH
                   CNS-SLASH
                   CNS-RX
                   WK-RIYO-CMP-CD
                   CNS-UNDERBAR
                   WK-SYORI-YMD
                   CNS-UNDERBAR
                   WK-KIDOU-ID
                   CNS-UNDERBAR
                   WK-GYOMU-TASK-ID
                   CNS-UNDERBAR
                   CNS-X-01
                   CNS-CTL
                   DELIMITED BY SPACE
           INTO  CTLFILE01
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY CNS-PGM-ID ":CTLFILE01 = ["CTLFILE01"]"
      *-----------------------------------------------------------------
           OPEN  OUTPUT  CTL-FILE01
           IF  ST-CTLFILE01  =  CNS-FILE-NORMAL
           THEN
             MOVE  CNS-ON               TO  FLG-CTLFILE-OPEN-01
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY CNS-PGM-ID":ST-CTLFILE01=["ST-CTLFILE01"]"
      D    DISPLAY CNS-PGM-ID":FLG-CTLFILE-OPEN-01=["
      D                       FLG-CTLFILE-OPEN-01"]"
      *-----------------------------------------------------------------
           ELSE
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY CNS-PGM-ID":ST-CTLFILE01 = ["ST-CTLFILE01"]"
      D    DISPLAY CNS-PGM-ID":ctlファイル01アクセスエラー(OPEN)"
      *-----------------------------------------------------------------
      *----------  エラー検知プログラムID
             MOVE  CNS-PGM-ID
               TO  ERR-PGM-ID           OF  PARM-SCZY1170-ARG1
      *----------  ポジション
             MOVE  CNS-POS-011
               TO  ERR-POS              OF  PARM-SCZY1170-ARG1
      *----------  リターンコード
             MOVE  CNS-RTN-200
               TO  RTN-CD               OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
             MOVE  ST-CTLFILE01
               TO  DETAIL-RTN-CD        OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
             MOVE  CNS-DETAIL-0
               TO  DETAIL-RTN-CD-FLG    OF  PARM-SCZY1170-ARG1
      *---------- フリーメッセージ
             MOVE  CNS-FILE-OPEN-ERR
               TO  FREE-MSG             OF  PARM-SCZY1170-ARG1
      *----------  エラー処理
             PERFORM  ERR-RTN
           END-IF
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY CNS-PGM-ID ":*** ctlファイル01のオープン END ***"
      *-----------------------------------------------------------------
           CONTINUE.
       CTLFILE01-OPEN-EXT.
           EXIT.
      ******************************************************************
      *    3.5.2.ctlファイル02のオープン
      ******************************************************************
       CTLFILE02-OPEN-RTN     SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY CNS-PGM-ID ":***  ctlファイル02のオープン START ***"
      *-----------------------------------------------------------------
           STRING  WK-NAS-PATH
                   CNS-SLASH
                   CNS-RX
                   WK-RIYO-CMP-CD
                   CNS-UNDERBAR
                   WK-SYORI-YMD
                   CNS-UNDERBAR
                   WK-KIDOU-ID
                   CNS-UNDERBAR
                   WK-GYOMU-TASK-ID
                   CNS-UNDERBAR
                   CNS-X-02
                   CNS-CTL
                   DELIMITED BY SPACE
           INTO  CTLFILE02
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY CNS-PGM-ID ":CTLFILE02 = ["CTLFILE02"]"
      *-----------------------------------------------------------------
           OPEN  OUTPUT  CTL-FILE02
           IF  ST-CTLFILE02  =  CNS-FILE-NORMAL
           THEN
             MOVE  CNS-ON               TO  FLG-CTLFILE-OPEN-02
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY CNS-PGM-ID":ST-CTLFILE02=["ST-CTLFILE02"]"
      D    DISPLAY CNS-PGM-ID":FLG-CTLFILE-OPEN-02=["
      D                       FLG-CTLFILE-OPEN-02"]"
      *-----------------------------------------------------------------
           ELSE
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY CNS-PGM-ID":ST-CTLFILE02 = ["ST-CTLFILE02"]"
      D    DISPLAY CNS-PGM-ID":ctlファイル02アクセスエラー(OPEN)"
      *-----------------------------------------------------------------
      *----------  エラー検知プログラムID
             MOVE  CNS-PGM-ID
               TO  ERR-PGM-ID           OF  PARM-SCZY1170-ARG1
      *----------  ポジション
             MOVE  CNS-POS-012
               TO  ERR-POS              OF  PARM-SCZY1170-ARG1
      *----------  リターンコード
             MOVE  CNS-RTN-200
               TO  RTN-CD               OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
             MOVE  ST-CTLFILE02
               TO  DETAIL-RTN-CD        OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
             MOVE  CNS-DETAIL-0
               TO  DETAIL-RTN-CD-FLG    OF  PARM-SCZY1170-ARG1
      *---------- フリーメッセージ
             MOVE  CNS-FILE-OPEN-ERR
               TO  FREE-MSG             OF  PARM-SCZY1170-ARG1
      *----------  エラー処理
             PERFORM  ERR-RTN
           END-IF
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY CNS-PGM-ID ":*** ctlファイル02のオープン END ***"
      *-----------------------------------------------------------------
           CONTINUE.
       CTLFILE02-OPEN-EXT.
           EXIT.
      ******************************************************************
      *    3.5.3.ctlファイル03のオープン
      ******************************************************************
       CTLFILE03-OPEN-RTN     SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY CNS-PGM-ID ":***  ctlファイル03のオープン START ***"
      *-----------------------------------------------------------------
           STRING  WK-NAS-PATH
                   CNS-SLASH
                   CNS-RX
                   WK-RIYO-CMP-CD
                   CNS-UNDERBAR
                   WK-SYORI-YMD
                   CNS-UNDERBAR
                   WK-KIDOU-ID
                   CNS-UNDERBAR
                   WK-GYOMU-TASK-ID
                   CNS-UNDERBAR
                   CNS-X-03
                   CNS-CTL
                   DELIMITED BY SPACE
           INTO  CTLFILE03
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY CNS-PGM-ID ":CTLFILE03 = ["CTLFILE03"]"
      *-----------------------------------------------------------------
           OPEN  OUTPUT  CTL-FILE03
           IF  ST-CTLFILE03  =  CNS-FILE-NORMAL
           THEN
             MOVE  CNS-ON               TO  FLG-CTLFILE-OPEN-03
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY CNS-PGM-ID":ST-CTLFILE03=["ST-CTLFILE03"]"
      D    DISPLAY CNS-PGM-ID":FLG-CTLFILE-OPEN-03=["
      D                       FLG-CTLFILE-OPEN-03"]"
      *-----------------------------------------------------------------
           ELSE
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY CNS-PGM-ID":ST-CTLFILE03 = ["ST-CTLFILE03"]"
      D    DISPLAY CNS-PGM-ID":ctlファイル03アクセスエラー(OPEN)"
      *-----------------------------------------------------------------
      *----------  エラー検知プログラムID
             MOVE  CNS-PGM-ID
               TO  ERR-PGM-ID           OF  PARM-SCZY1170-ARG1
      *----------  ポジション
             MOVE  CNS-POS-013
               TO  ERR-POS              OF  PARM-SCZY1170-ARG1
      *----------  リターンコード
             MOVE  CNS-RTN-200
               TO  RTN-CD               OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
             MOVE  ST-CTLFILE03
               TO  DETAIL-RTN-CD        OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
             MOVE  CNS-DETAIL-0
               TO  DETAIL-RTN-CD-FLG    OF  PARM-SCZY1170-ARG1
      *---------- フリーメッセージ
             MOVE  CNS-FILE-OPEN-ERR
               TO  FREE-MSG             OF  PARM-SCZY1170-ARG1
      *----------  エラー処理
             PERFORM  ERR-RTN
           END-IF
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY CNS-PGM-ID ":*** ctlファイル03のオープン END ***"
      *-----------------------------------------------------------------
           CONTINUE.
       CTLFILE03-OPEN-EXT.
           EXIT.
      ******************************************************************
      *    3.5.4.ctlファイル04のオープン
      ******************************************************************
       CTLFILE04-OPEN-RTN     SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY CNS-PGM-ID ":***  ctlファイル04のオープン START ***"
      *-----------------------------------------------------------------
           STRING  WK-NAS-PATH
                   CNS-SLASH
                   CNS-RX
                   WK-RIYO-CMP-CD
                   CNS-UNDERBAR
                   WK-SYORI-YMD
                   CNS-UNDERBAR
                   WK-KIDOU-ID
                   CNS-UNDERBAR
                   WK-GYOMU-TASK-ID
                   CNS-UNDERBAR
                   CNS-X-04
                   CNS-CTL
                   DELIMITED BY SPACE
           INTO  CTLFILE04
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY CNS-PGM-ID ":CTLFILE04 = ["CTLFILE04"]"
      *-----------------------------------------------------------------
           OPEN  OUTPUT  CTL-FILE04
           IF  ST-CTLFILE04  =  CNS-FILE-NORMAL
           THEN
             MOVE  CNS-ON               TO  FLG-CTLFILE-OPEN-04
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY CNS-PGM-ID":ST-CTLFILE04=["ST-CTLFILE04"]"
      D    DISPLAY CNS-PGM-ID":FLG-CTLFILE-OPEN-04=["
      D                       FLG-CTLFILE-OPEN-04"]"
      *-----------------------------------------------------------------
           ELSE
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY CNS-PGM-ID":ST-CTLFILE04 = ["ST-CTLFILE04"]"
      D    DISPLAY CNS-PGM-ID":ctlファイル04アクセスエラー(OPEN)"
      *-----------------------------------------------------------------
      *----------  エラー検知プログラムID
             MOVE  CNS-PGM-ID
               TO  ERR-PGM-ID           OF  PARM-SCZY1170-ARG1
      *----------  ポジション
             MOVE  CNS-POS-014
               TO  ERR-POS              OF  PARM-SCZY1170-ARG1
      *----------  リターンコード
             MOVE  CNS-RTN-200
               TO  RTN-CD               OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
             MOVE  ST-CTLFILE04
               TO  DETAIL-RTN-CD        OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
             MOVE  CNS-DETAIL-0
               TO  DETAIL-RTN-CD-FLG    OF  PARM-SCZY1170-ARG1
      *---------- フリーメッセージ
             MOVE  CNS-FILE-OPEN-ERR
               TO  FREE-MSG             OF  PARM-SCZY1170-ARG1
      *----------  エラー処理
             PERFORM  ERR-RTN
           END-IF
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY CNS-PGM-ID ":*** ctlファイル04のオープン END ***"
      *-----------------------------------------------------------------
           CONTINUE.
       CTLFILE04-OPEN-EXT.
           EXIT.
      ******************************************************************
      *    3.5.5.ctlファイル05のオープン
      ******************************************************************
       CTLFILE05-OPEN-RTN     SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY CNS-PGM-ID ":***  ctlファイル05のオープン START ***"
      *-----------------------------------------------------------------
           STRING  WK-NAS-PATH
                   CNS-SLASH
                   CNS-RX
                   WK-RIYO-CMP-CD
                   CNS-UNDERBAR
                   WK-SYORI-YMD
                   CNS-UNDERBAR
                   WK-KIDOU-ID
                   CNS-UNDERBAR
                   WK-GYOMU-TASK-ID
                   CNS-UNDERBAR
                   CNS-X-05
                   CNS-CTL
                   DELIMITED BY SPACE
           INTO  CTLFILE05
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY CNS-PGM-ID ":CTLFILE05 = ["CTLFILE05"]"
      *-----------------------------------------------------------------
           OPEN  OUTPUT  CTL-FILE05
           IF  ST-CTLFILE05  =  CNS-FILE-NORMAL
           THEN
             MOVE  CNS-ON               TO  FLG-CTLFILE-OPEN-05
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY CNS-PGM-ID":ST-CTLFILE05=["ST-CTLFILE05"]"
      D    DISPLAY CNS-PGM-ID":FLG-CTLFILE-OPEN-05=["
      D                       FLG-CTLFILE-OPEN-05"]"
      *-----------------------------------------------------------------
           ELSE
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY CNS-PGM-ID":ST-CTLFILE05 = ["ST-CTLFILE05"]"
      D    DISPLAY CNS-PGM-ID":ctlファイル05アクセスエラー(OPEN)"
      *-----------------------------------------------------------------
      *----------  エラー検知プログラムID
             MOVE  CNS-PGM-ID
               TO  ERR-PGM-ID           OF  PARM-SCZY1170-ARG1
      *----------  ポジション
             MOVE  CNS-POS-015
               TO  ERR-POS              OF  PARM-SCZY1170-ARG1
      *----------  リターンコード
             MOVE  CNS-RTN-200
               TO  RTN-CD               OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
             MOVE  ST-CTLFILE05
               TO  DETAIL-RTN-CD        OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
             MOVE  CNS-DETAIL-0
               TO  DETAIL-RTN-CD-FLG    OF  PARM-SCZY1170-ARG1
      *---------- フリーメッセージ
             MOVE  CNS-FILE-OPEN-ERR
               TO  FREE-MSG             OF  PARM-SCZY1170-ARG1
      *----------  エラー処理
             PERFORM  ERR-RTN
           END-IF
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY CNS-PGM-ID ":*** ctlファイル05のオープン END ***"
      *-----------------------------------------------------------------
           CONTINUE.
       CTLFILE05-OPEN-EXT.
           EXIT.
      ******************************************************************
      *    3.5.6.ctlファイル06のオープン
      ******************************************************************
       CTLFILE06-OPEN-RTN     SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY CNS-PGM-ID ":***  ctlファイル06のオープン START ***"
      *-----------------------------------------------------------------
           STRING  WK-NAS-PATH
                   CNS-SLASH
                   CNS-RX
                   WK-RIYO-CMP-CD
                   CNS-UNDERBAR
                   WK-SYORI-YMD
                   CNS-UNDERBAR
                   WK-KIDOU-ID
                   CNS-UNDERBAR
                   WK-GYOMU-TASK-ID
                   CNS-UNDERBAR
                   CNS-X-06
                   CNS-CTL
                   DELIMITED BY SPACE
           INTO  CTLFILE06
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY CNS-PGM-ID ":CTLFILE06 = ["CTLFILE06"]"
      *-----------------------------------------------------------------
           OPEN  OUTPUT  CTL-FILE06
           IF  ST-CTLFILE06  =  CNS-FILE-NORMAL
           THEN
             MOVE  CNS-ON               TO  FLG-CTLFILE-OPEN-06
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY CNS-PGM-ID":ST-CTLFILE06=["ST-CTLFILE06"]"
      D    DISPLAY CNS-PGM-ID":FLG-CTLFILE-OPEN-06=["
      D                       FLG-CTLFILE-OPEN-06"]"
      *-----------------------------------------------------------------
           ELSE
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY CNS-PGM-ID":ST-CTLFILE04 = ["ST-CTLFILE04"]"
      D    DISPLAY CNS-PGM-ID":ctlファイル04アクセスエラー(OPEN)"
      *-----------------------------------------------------------------
      *----------  エラー検知プログラムID
             MOVE  CNS-PGM-ID
               TO  ERR-PGM-ID           OF  PARM-SCZY1170-ARG1
      *----------  ポジション
             MOVE  CNS-POS-016
               TO  ERR-POS              OF  PARM-SCZY1170-ARG1
      *----------  リターンコード
             MOVE  CNS-RTN-200
               TO  RTN-CD               OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
             MOVE  ST-CTLFILE06
               TO  DETAIL-RTN-CD        OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
             MOVE  CNS-DETAIL-0
               TO  DETAIL-RTN-CD-FLG    OF  PARM-SCZY1170-ARG1
      *---------- フリーメッセージ
             MOVE  CNS-FILE-OPEN-ERR
               TO  FREE-MSG             OF  PARM-SCZY1170-ARG1
      *----------  エラー処理
             PERFORM  ERR-RTN
           END-IF
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY CNS-PGM-ID ":*** ctlファイル06のオープン END ***"
      *-----------------------------------------------------------------
           CONTINUE.
       CTLFILE06-OPEN-EXT.
           EXIT.
      ******************************************************************
      *    3.2.4それぞれの起動IDリストファイルの内容を読み込み、
      *         マージファイルに書き込む
      ******************************************************************
       KIDOU-RSTFILE-RD-RTN   SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** 3.2.4それぞれの起動IDリストファイル"
      D                       "の内容を読み込み  START  ***"
      *-----------------------------------------------------------------
           MOVE  CNS-1           TO  WK-IDX
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":WK-IDX=["WK-IDX"]"
      D    DISPLAY  CNS-PGM-ID":ワーク起動IDリストファイル名("WK-IDX")"
      D                       "=["WK-KIDOU-FILENAME(WK-IDX)"]"
      *-----------------------------------------------------------------
           PERFORM  UNTIL  WK-IDX  >  CNS-396
                           OR  WK-KIDOU-FILENAME(WK-IDX) = SPACE
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークODW接続用業務タスクID=["
      D             WK-ODW-GYOMU-TASK-ID"]"
      D    DISPLAY  CNS-PGM-ID":ワーク起動IDリストファイル名("WK-IDX")"
      D             "(CNS-30:CNS-2)=["
      D             WK-KIDOU-FILENAME(WK-IDX)(CNS-30:CNS-2)"]"
      *-----------------------------------------------------------------
             IF  WK-ODW-GYOMU-TASK-ID  =  CNS-TD900US
             THEN
               EVALUATE  WK-KIDOU-FILENAME(WK-IDX)(CNS-30:CNS-2)
                 WHEN  CNS-X-01
                 WHEN  CNS-X-03
      *---------  a.ヘッダーの作成1
                   PERFORM  HEAD-EDIT-1-RTN
      *---------  b.明細レコードの作成1
                   PERFORM  MEISAI-EDIT-1-RTN
                 WHEN  CNS-X-02
                 WHEN  CNS-X-04
      *---------  a.ヘッダーの作成2
                   PERFORM  HEAD-EDIT-2-RTN
      *---------  b.明細レコードの作成2
                   PERFORM  MEISAI-EDIT-2-RTN
                 WHEN  CNS-X-05
                 WHEN  CNS-X-07
      *---------  a.ヘッダーの作成5
                   PERFORM  HEAD-EDIT-5-RTN
      *---------  b.明細レコードの作成5
                   PERFORM  MEISAI-EDIT-5-RTN
                 WHEN  CNS-X-06
                 WHEN  CNS-X-08
      *---------  a.ヘッダーの作成6
                   PERFORM  HEAD-EDIT-6-RTN
      *---------  b.明細レコードの作成6
                   PERFORM  MEISAI-EDIT-6-RTN
                 WHEN  OTHER
                   CONTINUE
               END-EVALUATE
             ELSE
               EVALUATE  WK-KIDOU-FILENAME(WK-IDX)(CNS-30:CNS-2)
                 WHEN  CNS-X-01
      *---------  a.ヘッダーの作成1
                   PERFORM  HEAD-EDIT-1-RTN
      *---------  b.明細レコードの作成1
                   PERFORM  MEISAI-EDIT-1-RTN
                 WHEN  CNS-X-02
      *---------  a.ヘッダーの作成2
                   PERFORM  HEAD-EDIT-2-RTN
      *---------  b.明細レコードの作成2
                   PERFORM  MEISAI-EDIT-2-RTN
                 WHEN  CNS-X-03
      *---------  a.ヘッダーの作成3
                   PERFORM  HEAD-EDIT-3-RTN
      *---------  b.明細レコードの作成3
                   PERFORM  MEISAI-EDIT-3-RTN
                 WHEN  CNS-X-04
      *---------  a.ヘッダーの作成4
                   PERFORM  HEAD-EDIT-4-RTN
      *---------  b.明細レコードの作成4
                   PERFORM  MEISAI-EDIT-4-RTN
                 WHEN  OTHER
                   CONTINUE
               END-EVALUATE
             END-IF
             COMPUTE  WK-IDX = WK-IDX + CNS-1
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":WK-IDX=["WK-IDX"]"
      *-----------------------------------------------------------------
           END-PERFORM
      *---------  マージファイルのフッターを作成
           PERFORM  END-EDIT-RTN
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** 3.2.4それぞれの起動IDリストファイル"
      D                       "の内容を読み込み  END  ***"
      *-----------------------------------------------------------------
           CONTINUE.
       KIDOU-RSTFILE-RD-EXT.
           EXIT.
      ******************************************************************
      *    ヘッダーの作成1
      ******************************************************************
       HEAD-EDIT-1-RTN        SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** ヘッダーの作成1  START  ***"
      D    DISPLAY  CNS-PGM-ID":ワークマージファイル01ヘッダーフラグ=["
      D                       WK-HEAD-FLG-FILE01"]"
      *-----------------------------------------------------------------
           IF  WK-HEAD-FLG-FILE01  =  CNS-OFF
           THEN
             MOVE  CNS-ON               TO  WK-HEAD-FLG-FILE01
      *--------  ワークコマンドの初期化
              INITIALIZE    WK-ADM-ARG1
                            WK-ADM-ARG2
                            WK-ADM-ARG3
                            WK-ADM-ARG4
                            WK-KOMANDO
                            WK-LEN-KOMANDO
                            WK-ERR-POS
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      *-----------------------------------------------------------------
             STRING  CNS-BIN-SED
                     WK-NAS-PATH(CNS-1:WK-I)
                     CNS-SLASH
                     WK-KIDOU-FILENAME(WK-IDX)
                     CNS-PUT
                     WK-NAS-PATH(CNS-1:WK-I)
                     CNS-SLASH
                     CNS-RX
                     WK-RIYO-CMP-CD
                     CNS-UNDERBAR
                     WK-SYORI-YMD
                     CNS-UNDERBAR
                     WK-KIDOU-ID
                     CNS-UNDERBAR
                     WK-ODW-GYOMU-TASK-ID
                     CNS-UNDERBAR
                     CNS-X-01
                     CNS-BAK
                     DELIMITED BY SIZE
                INTO  WK-KOMANDO
             INSPECT  FUNCTION REVERSE(WK-KOMANDO)
                      TALLYING WK-LEN-KOMANDO FOR LEADING SPACES
             COMPUTE  WK-LEN-KOMANDO = 
                      FUNCTION LENGTH(WK-KOMANDO) - WK-LEN-KOMANDO
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["
      D                        WK-KOMANDO(1:WK-LEN-KOMANDO)"]"
      *-----------------------------------------------------------------
             MOVE  CNS-POS-017        TO  WK-ERR-POS
      *-----------  【CBLDCADM】をコール処理
             PERFORM  CALL-CBLDCADM-RTN
           ELSE
             CONTINUE
           END-IF
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** ヘッダーの作成1  END  ***"
      *-----------------------------------------------------------------
           CONTINUE.
       HEAD-EDIT-1-EXT.
           EXIT.
      ******************************************************************
      *    b.明細レコードの作成1
      ******************************************************************
       MEISAI-EDIT-1-RTN      SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** b.明細レコードの作成1  START  ***"
      *-----------------------------------------------------------------
      *--------  ワークコマンドの初期化
            INITIALIZE      WK-ADM-ARG1
                            WK-ADM-ARG2
                            WK-ADM-ARG3
                            WK-ADM-ARG4
                            WK-KOMANDO
                            WK-LEN-KOMANDO
                            WK-ERR-POS
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      *-----------------------------------------------------------------
           STRING  CNS-BIN-CAT
                   WK-NAS-PATH(CNS-1:WK-I)
                   CNS-SLASH
                   WK-KIDOU-FILENAME(WK-IDX)
                   CNS-SED-D
                   CNS-OUT
                   WK-NAS-PATH(CNS-1:WK-I)
                   CNS-SLASH
                   CNS-RX
                   WK-RIYO-CMP-CD
                   CNS-UNDERBAR
                   WK-SYORI-YMD
                   CNS-UNDERBAR
                   WK-KIDOU-ID
                   CNS-UNDERBAR
                   WK-ODW-GYOMU-TASK-ID
                   CNS-UNDERBAR
                   CNS-X-01
                   CNS-BAK
                   DELIMITED BY SIZE
              INTO  WK-KOMANDO
           INSPECT  FUNCTION REVERSE(WK-KOMANDO)
                    TALLYING WK-LEN-KOMANDO FOR LEADING SPACES
           COMPUTE  WK-LEN-KOMANDO = 
                    FUNCTION LENGTH(WK-KOMANDO) - WK-LEN-KOMANDO
      *-----------------------------------------------------------------
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["
      D                        WK-KOMANDO(1:WK-LEN-KOMANDO)"]"
      *-----------------------------------------------------------------
           MOVE  CNS-POS-018        TO  WK-ERR-POS
      *-----------  【CBLDCADM】をコール処理
           PERFORM  CALL-CBLDCADM-RTN
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** b.明細レコードの作成1  END  ***"
      *-----------------------------------------------------------------
           CONTINUE.
       MEISAI-EDIT-1-EXT.
           EXIT.
      ******************************************************************
      *    ヘッダーの作成2
      ******************************************************************
       HEAD-EDIT-2-RTN        SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** ヘッダーの作成2 START  ***"
      D    DISPLAY  CNS-PGM-ID":ワークマージファイル02ヘッダーフラグ=["
      D                       WK-HEAD-FLG-FILE02"]"
      *-----------------------------------------------------------------
           IF  WK-HEAD-FLG-FILE02  =  CNS-OFF
           THEN
             MOVE  CNS-ON               TO  WK-HEAD-FLG-FILE02
      *--------  ワークコマンドの初期化
              INITIALIZE    WK-ADM-ARG1
                            WK-ADM-ARG2
                            WK-ADM-ARG3
                            WK-ADM-ARG4
                            WK-KOMANDO
                            WK-LEN-KOMANDO
                            WK-ERR-POS
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      *-----------------------------------------------------------------
             STRING  CNS-BIN-SED
                     WK-NAS-PATH(CNS-1:WK-I)
                     CNS-SLASH
                     WK-KIDOU-FILENAME(WK-IDX)
                     CNS-PUT
                     WK-NAS-PATH(CNS-1:WK-I)
                     CNS-SLASH
                     CNS-RX
                     WK-RIYO-CMP-CD
                     CNS-UNDERBAR
                     WK-SYORI-YMD
                     CNS-UNDERBAR
                     WK-KIDOU-ID
                     CNS-UNDERBAR
                     WK-ODW-GYOMU-TASK-ID
                     CNS-UNDERBAR
                     CNS-X-02
                     CNS-BAK
                     DELIMITED BY SIZE
                INTO  WK-KOMANDO
             INSPECT  FUNCTION REVERSE(WK-KOMANDO)
                      TALLYING WK-LEN-KOMANDO FOR LEADING SPACES
             COMPUTE  WK-LEN-KOMANDO = 
                      FUNCTION LENGTH(WK-KOMANDO) - WK-LEN-KOMANDO
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["
      D                        WK-KOMANDO(1:WK-LEN-KOMANDO)"]"
      *-----------------------------------------------------------------
             MOVE  CNS-POS-019        TO  WK-ERR-POS
      *-----------  【CBLDCADM】をコール処理
             PERFORM  CALL-CBLDCADM-RTN
           ELSE
             CONTINUE
           END-IF
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** ヘッダーの作成2  END  ***"
      *-----------------------------------------------------------------
           CONTINUE.
       HEAD-EDIT-2-EXT.
           EXIT.
      ******************************************************************
      *    b.明細レコードの作成2
      ******************************************************************
       MEISAI-EDIT-2-RTN      SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** b.明細レコードの作成2  START  ***"
      *-----------------------------------------------------------------
      *--------  ワークコマンドの初期化
            INITIALIZE      WK-ADM-ARG1
                            WK-ADM-ARG2
                            WK-ADM-ARG3
                            WK-ADM-ARG4
                            WK-KOMANDO
                            WK-LEN-KOMANDO
                            WK-ERR-POS
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      *-----------------------------------------------------------------
           STRING  CNS-BIN-CAT
                   WK-NAS-PATH(CNS-1:WK-I)
                   CNS-SLASH
                   WK-KIDOU-FILENAME(WK-IDX)
                   CNS-SED-D
                   CNS-OUT
                   WK-NAS-PATH(CNS-1:WK-I)
                   CNS-SLASH
                   CNS-RX
                   WK-RIYO-CMP-CD
                   CNS-UNDERBAR
                   WK-SYORI-YMD
                   CNS-UNDERBAR
                   WK-KIDOU-ID
                   CNS-UNDERBAR
                   WK-ODW-GYOMU-TASK-ID
                   CNS-UNDERBAR
                   CNS-X-02
                   CNS-BAK
                   DELIMITED BY SIZE
              INTO  WK-KOMANDO
           INSPECT  FUNCTION REVERSE(WK-KOMANDO)
                    TALLYING WK-LEN-KOMANDO FOR LEADING SPACES
           COMPUTE  WK-LEN-KOMANDO = 
                    FUNCTION LENGTH(WK-KOMANDO) - WK-LEN-KOMANDO
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["
      D                        WK-KOMANDO(1:WK-LEN-KOMANDO)"]"
      *-----------------------------------------------------------------
           MOVE  CNS-POS-020        TO  WK-ERR-POS
      *-----------  【CBLDCADM】をコール処理
           PERFORM  CALL-CBLDCADM-RTN
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** b.明細レコードの作成2  END  ***"
      *-----------------------------------------------------------------
           CONTINUE.
       MEISAI-EDIT-2-EXT.
           EXIT.
      ******************************************************************
      *    ヘッダーの作成3
      ******************************************************************
       HEAD-EDIT-3-RTN        SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** ヘッダーの作成3  START  ***"
      D    DISPLAY  CNS-PGM-ID":ワークマージファイル03ヘッダーフラグ=["
      D                       WK-HEAD-FLG-FILE03"]"
      *-----------------------------------------------------------------
           IF  WK-HEAD-FLG-FILE03  =  CNS-OFF
           THEN
             MOVE  CNS-ON               TO  WK-HEAD-FLG-FILE03
      *--------  ワークコマンドの初期化
              INITIALIZE    WK-ADM-ARG1
                            WK-ADM-ARG2
                            WK-ADM-ARG3
                            WK-ADM-ARG4
                            WK-KOMANDO
                            WK-LEN-KOMANDO
                            WK-ERR-POS
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      *-----------------------------------------------------------------
             STRING  CNS-BIN-SED
                     WK-NAS-PATH(CNS-1:WK-I)
                     CNS-SLASH
                     WK-KIDOU-FILENAME(WK-IDX)
                     CNS-PUT
                     WK-NAS-PATH(CNS-1:WK-I)
                     CNS-SLASH
                     CNS-RX
                     WK-RIYO-CMP-CD
                     CNS-UNDERBAR
                     WK-SYORI-YMD
                     CNS-UNDERBAR
                     WK-KIDOU-ID
                     CNS-UNDERBAR
                     WK-ODW-GYOMU-TASK-ID
                     CNS-UNDERBAR
                     CNS-X-03
                     CNS-BAK
                     DELIMITED BY SIZE
                INTO  WK-KOMANDO
             INSPECT  FUNCTION REVERSE(WK-KOMANDO)
                      TALLYING WK-LEN-KOMANDO FOR LEADING SPACES
             COMPUTE  WK-LEN-KOMANDO = 
                      FUNCTION LENGTH(WK-KOMANDO) - WK-LEN-KOMANDO
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["
      D                        WK-KOMANDO(1:WK-LEN-KOMANDO)"]"
      *-----------------------------------------------------------------
             MOVE  CNS-POS-021        TO  WK-ERR-POS
      *-----------  【CBLDCADM】をコール処理
             PERFORM  CALL-CBLDCADM-RTN
           ELSE
             CONTINUE
           END-IF
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** ヘッダーの作成  END  ***"
      *-----------------------------------------------------------------
           CONTINUE.
       HEAD-EDIT-3-EXT.
           EXIT.
      ******************************************************************
      *    b.明細レコードの作成3
      ******************************************************************
       MEISAI-EDIT-3-RTN      SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** b.明細レコードの作成3  START  ***"
      *-----------------------------------------------------------------
      *--------  ワークコマンドの初期化
            INITIALIZE      WK-ADM-ARG1
                            WK-ADM-ARG2
                            WK-ADM-ARG3
                            WK-ADM-ARG4
                            WK-KOMANDO
                            WK-LEN-KOMANDO
                            WK-ERR-POS
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      *-----------------------------------------------------------------
           STRING  CNS-BIN-CAT
                   WK-NAS-PATH(CNS-1:WK-I)
                   CNS-SLASH
                   WK-KIDOU-FILENAME(WK-IDX)
                   CNS-SED-D
                   CNS-OUT
                   WK-NAS-PATH(CNS-1:WK-I)
                   CNS-SLASH
                   CNS-RX
                   WK-RIYO-CMP-CD
                   CNS-UNDERBAR
                   WK-SYORI-YMD
                   CNS-UNDERBAR
                   WK-KIDOU-ID
                   CNS-UNDERBAR
                   WK-ODW-GYOMU-TASK-ID
                   CNS-UNDERBAR
                   CNS-X-03
                   CNS-BAK
                   DELIMITED BY SIZE
              INTO  WK-KOMANDO
           INSPECT  FUNCTION REVERSE(WK-KOMANDO)
                    TALLYING WK-LEN-KOMANDO FOR LEADING SPACES
           COMPUTE  WK-LEN-KOMANDO = 
                    FUNCTION LENGTH(WK-KOMANDO) - WK-LEN-KOMANDO
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["
      D                        WK-KOMANDO(1:WK-LEN-KOMANDO)"]"
      *-----------------------------------------------------------------
           MOVE  CNS-POS-022        TO  WK-ERR-POS
      *-----------  【CBLDCADM】をコール処理
           PERFORM  CALL-CBLDCADM-RTN
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** b.明細レコードの作成3  END  ***"
      *-----------------------------------------------------------------
           CONTINUE.
       MEISAI-EDIT-3-EXT.
           EXIT.
      ******************************************************************
      *    ヘッダーの作成4
      ******************************************************************
       HEAD-EDIT-4-RTN        SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** ヘッダーの作成4  START  ***"
      D    DISPLAY  CNS-PGM-ID":ワークマージファイル04ヘッダーフラグ=["
      D                       WK-HEAD-FLG-FILE04"]"
      *-----------------------------------------------------------------
           IF  WK-HEAD-FLG-FILE04  =  CNS-OFF
           THEN
             MOVE  CNS-1               TO  WK-HEAD-FLG-FILE04
      *--------  ワークコマンドの初期化
              INITIALIZE    WK-ADM-ARG1
                            WK-ADM-ARG2
                            WK-ADM-ARG3
                            WK-ADM-ARG4
                            WK-KOMANDO
                            WK-LEN-KOMANDO
                            WK-ERR-POS
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      *-----------------------------------------------------------------
             STRING  CNS-BIN-SED
                     WK-NAS-PATH(CNS-1:WK-I)
                     CNS-SLASH
                     WK-KIDOU-FILENAME(WK-IDX)
                     CNS-PUT
                     WK-NAS-PATH(CNS-1:WK-I)
                     CNS-SLASH
                     CNS-RX
                     WK-RIYO-CMP-CD
                     CNS-UNDERBAR
                     WK-SYORI-YMD
                     CNS-UNDERBAR
                     WK-KIDOU-ID
                     CNS-UNDERBAR
                     WK-ODW-GYOMU-TASK-ID
                     CNS-UNDERBAR
                     CNS-X-04
                     CNS-BAK
                     DELIMITED BY SIZE
                INTO  WK-KOMANDO
             INSPECT  FUNCTION REVERSE(WK-KOMANDO)
                      TALLYING WK-LEN-KOMANDO FOR LEADING SPACES
             COMPUTE  WK-LEN-KOMANDO = 
                      FUNCTION LENGTH(WK-KOMANDO) - WK-LEN-KOMANDO
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["
      D                        WK-KOMANDO(1:WK-LEN-KOMANDO)"]"
      *-----------------------------------------------------------------
             MOVE  CNS-POS-023        TO  WK-ERR-POS
      *-----------  【CBLDCADM】をコール処理
             PERFORM  CALL-CBLDCADM-RTN
           ELSE
             CONTINUE
           END-IF
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** ヘッダーの作成4  END  ***"
      *-----------------------------------------------------------------
           CONTINUE.
       HEAD-EDIT-4-EXT.
           EXIT.
      ******************************************************************
      *    b.明細レコードの作成4
      ******************************************************************
       MEISAI-EDIT-4-RTN      SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** b.明細レコードの作成4  START  ***"
      *-----------------------------------------------------------------
      *--------  ワークコマンドの初期化
            INITIALIZE      WK-ADM-ARG1
                            WK-ADM-ARG2
                            WK-ADM-ARG3
                            WK-ADM-ARG4
                            WK-KOMANDO
                            WK-LEN-KOMANDO
                            WK-ERR-POS
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      *-----------------------------------------------------------------
           STRING  CNS-BIN-CAT
                   WK-NAS-PATH(CNS-1:WK-I)
                   CNS-SLASH
                   WK-KIDOU-FILENAME(WK-IDX)
                   CNS-SED-D
                   CNS-OUT
                   WK-NAS-PATH(CNS-1:WK-I)
                   CNS-SLASH
                   CNS-RX
                   WK-RIYO-CMP-CD
                   CNS-UNDERBAR
                   WK-SYORI-YMD
                   CNS-UNDERBAR
                   WK-KIDOU-ID
                   CNS-UNDERBAR
                   WK-ODW-GYOMU-TASK-ID
                   CNS-UNDERBAR
                   CNS-X-04
                   CNS-BAK
                   DELIMITED BY SIZE
              INTO  WK-KOMANDO
           INSPECT  FUNCTION REVERSE(WK-KOMANDO)
                    TALLYING WK-LEN-KOMANDO FOR LEADING SPACES
           COMPUTE  WK-LEN-KOMANDO = 
                    FUNCTION LENGTH(WK-KOMANDO) - WK-LEN-KOMANDO
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["
      D                        WK-KOMANDO(1:WK-LEN-KOMANDO)"]"
      *-----------------------------------------------------------------
           MOVE  CNS-POS-024        TO  WK-ERR-POS
      *-----------  【CBLDCADM】をコール処理
           PERFORM  CALL-CBLDCADM-RTN
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** b.明細レコードの作成4  END  ***"
      *-----------------------------------------------------------------
           CONTINUE.
       MEISAI-EDIT-4-EXT.
           EXIT.
      ******************************************************************
      *    ヘッダーの作成
      ******************************************************************
       HEAD-EDIT-5-RTN        SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** ヘッダーの作成5  START  ***"
      D    DISPLAY  CNS-PGM-ID":ワークマージファイル05ヘッダーフラグ=["
      D                       WK-HEAD-FLG-FILE05"]"
      *-----------------------------------------------------------------
           IF  WK-HEAD-FLG-FILE05  =  CNS-OFF
           THEN
             MOVE  CNS-ON               TO  WK-HEAD-FLG-FILE05
      *--------  ワークコマンドの初期化
              INITIALIZE    WK-ADM-ARG1
                            WK-ADM-ARG2
                            WK-ADM-ARG3
                            WK-ADM-ARG4
                            WK-KOMANDO
                            WK-LEN-KOMANDO
                            WK-ERR-POS
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      *-----------------------------------------------------------------
             STRING  CNS-BIN-SED
                     WK-NAS-PATH(CNS-1:WK-I)
                     CNS-SLASH
                     WK-KIDOU-FILENAME(WK-IDX)
                     CNS-PUT
                     WK-NAS-PATH(CNS-1:WK-I)
                     CNS-SLASH
                     CNS-RX
                     WK-RIYO-CMP-CD
                     CNS-UNDERBAR
                     WK-SYORI-YMD
                     CNS-UNDERBAR
                     WK-KIDOU-ID
                     CNS-UNDERBAR
                     WK-ODW-GYOMU-TASK-ID
                     CNS-UNDERBAR
                     CNS-X-05
                     CNS-BAK
                     DELIMITED BY SIZE
                INTO  WK-KOMANDO
             INSPECT  FUNCTION REVERSE(WK-KOMANDO)
                      TALLYING WK-LEN-KOMANDO FOR LEADING SPACES
             COMPUTE  WK-LEN-KOMANDO = 
                      FUNCTION LENGTH(WK-KOMANDO) - WK-LEN-KOMANDO
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["
      D                        WK-KOMANDO(1:WK-LEN-KOMANDO)"]"
      *-----------------------------------------------------------------
             MOVE  CNS-POS-025        TO  WK-ERR-POS
      *-----------  【CBLDCADM】をコール処理
             PERFORM  CALL-CBLDCADM-RTN
           ELSE
             CONTINUE
           END-IF
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** ヘッダーの作成5  END  ***"
      *-----------------------------------------------------------------
           CONTINUE.
       HEAD-EDIT-5-EXT.
           EXIT.
      ******************************************************************
      *    b.明細レコードの作成5
      ******************************************************************
       MEISAI-EDIT-5-RTN      SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** b.明細レコードの作成5  START  ***"
      *-----------------------------------------------------------------
      *--------  ワークコマンドの初期化
            INITIALIZE      WK-ADM-ARG1
                            WK-ADM-ARG2
                            WK-ADM-ARG3
                            WK-ADM-ARG4
                            WK-KOMANDO
                            WK-LEN-KOMANDO
                            WK-ERR-POS
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      *-----------------------------------------------------------------
           STRING  CNS-BIN-CAT
                   WK-NAS-PATH(CNS-1:WK-I)
                   CNS-SLASH
                   WK-KIDOU-FILENAME(WK-IDX)
                   CNS-SED-D
                   CNS-OUT
                   WK-NAS-PATH(CNS-1:WK-I)
                   CNS-SLASH
                   CNS-RX
                   WK-RIYO-CMP-CD
                   CNS-UNDERBAR
                   WK-SYORI-YMD
                   CNS-UNDERBAR
                   WK-KIDOU-ID
                   CNS-UNDERBAR
                   WK-ODW-GYOMU-TASK-ID
                   CNS-UNDERBAR
                   CNS-X-05
                   CNS-BAK
                   DELIMITED BY SIZE
              INTO  WK-KOMANDO
           INSPECT  FUNCTION REVERSE(WK-KOMANDO)
                    TALLYING WK-LEN-KOMANDO FOR LEADING SPACES
           COMPUTE  WK-LEN-KOMANDO = 
                    FUNCTION LENGTH(WK-KOMANDO) - WK-LEN-KOMANDO
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["
      D                        WK-KOMANDO(1:WK-LEN-KOMANDO)"]"
      *-----------------------------------------------------------------
           MOVE  CNS-POS-026        TO  WK-ERR-POS
      *-----------  【CBLDCADM】をコール処理
           PERFORM  CALL-CBLDCADM-RTN
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** b.明細レコードの作成5  END  ***"
      *-----------------------------------------------------------------
           CONTINUE.
       MEISAI-EDIT-5-EXT.
           EXIT.
      ******************************************************************
      *    ヘッダーの作成6
      ******************************************************************
       HEAD-EDIT-6-RTN        SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** ヘッダーの作成6  START  ***"
      D    DISPLAY  CNS-PGM-ID":ワークマージファイル06ヘッダーフラグ=["
      D                       WK-HEAD-FLG-FILE06"]"
      *-----------------------------------------------------------------
           IF  WK-HEAD-FLG-FILE06  =  CNS-OFF
           THEN
             MOVE  CNS-ON               TO  WK-HEAD-FLG-FILE06
      *--------  ワークコマンドの初期化
              INITIALIZE    WK-ADM-ARG1
                            WK-ADM-ARG2
                            WK-ADM-ARG3
                            WK-ADM-ARG4
                            WK-KOMANDO
                            WK-LEN-KOMANDO
                            WK-ERR-POS
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      *-----------------------------------------------------------------
             STRING  CNS-BIN-SED
                     WK-NAS-PATH(CNS-1:WK-I)
                     CNS-SLASH
                     WK-KIDOU-FILENAME(WK-IDX)
                     CNS-PUT
                     WK-NAS-PATH(CNS-1:WK-I)
                     CNS-SLASH
                     CNS-RX
                     WK-RIYO-CMP-CD
                     CNS-UNDERBAR
                     WK-SYORI-YMD
                     CNS-UNDERBAR
                     WK-KIDOU-ID
                     CNS-UNDERBAR
                     WK-ODW-GYOMU-TASK-ID
                     CNS-UNDERBAR
                     CNS-X-06
                     CNS-BAK
                     DELIMITED BY SIZE
                INTO  WK-KOMANDO
             INSPECT  FUNCTION REVERSE(WK-KOMANDO)
                      TALLYING WK-LEN-KOMANDO FOR LEADING SPACES
             COMPUTE  WK-LEN-KOMANDO = 
                      FUNCTION LENGTH(WK-KOMANDO) - WK-LEN-KOMANDO
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["
      D                        WK-KOMANDO(1:WK-LEN-KOMANDO)"]"
      *-----------------------------------------------------------------
             MOVE  CNS-POS-027        TO  WK-ERR-POS
      *-----------  【CBLDCADM】をコール処理
             PERFORM  CALL-CBLDCADM-RTN
           ELSE
             CONTINUE
           END-IF
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** ヘッダーの作成6  END  ***"
      *-----------------------------------------------------------------
           CONTINUE.
       HEAD-EDIT-6-EXT.
           EXIT.
      ******************************************************************
      *    b.明細レコードの作成6
      ******************************************************************
       MEISAI-EDIT-6-RTN      SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** b.明細レコードの作成6  START  ***"
      *-----------------------------------------------------------------
      *--------  ワークコマンドの初期化
            INITIALIZE      WK-ADM-ARG1
                            WK-ADM-ARG2
                            WK-ADM-ARG3
                            WK-ADM-ARG4
                            WK-KOMANDO
                            WK-LEN-KOMANDO
                            WK-ERR-POS
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      *-----------------------------------------------------------------
           STRING  CNS-BIN-CAT
                   WK-NAS-PATH(CNS-1:WK-I)
                   CNS-SLASH
                   WK-KIDOU-FILENAME(WK-IDX)
                   CNS-SED-D
                   CNS-OUT
                   WK-NAS-PATH(CNS-1:WK-I)
                   CNS-SLASH
                   CNS-RX
                   WK-RIYO-CMP-CD
                   CNS-UNDERBAR
                   WK-SYORI-YMD
                   CNS-UNDERBAR
                   WK-KIDOU-ID
                   CNS-UNDERBAR
                   WK-ODW-GYOMU-TASK-ID
                   CNS-UNDERBAR
                   CNS-X-06
                   CNS-BAK
                   DELIMITED BY SIZE
              INTO  WK-KOMANDO
           INSPECT  FUNCTION REVERSE(WK-KOMANDO)
                    TALLYING WK-LEN-KOMANDO FOR LEADING SPACES
           COMPUTE  WK-LEN-KOMANDO = 
                    FUNCTION LENGTH(WK-KOMANDO) - WK-LEN-KOMANDO
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["
      D                        WK-KOMANDO(1:WK-LEN-KOMANDO)"]"
      *-----------------------------------------------------------------
           MOVE  CNS-POS-028        TO  WK-ERR-POS
      *-----------  【CBLDCADM】をコール処理
           PERFORM  CALL-CBLDCADM-RTN
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** b.明細レコードの作成6  END  ***"
      *-----------------------------------------------------------------
           CONTINUE.
       MEISAI-EDIT-6-EXT.
           EXIT.
      ******************************************************************
      *    3.2.5ctlファイルをクローズする
      ******************************************************************
       CTL-FILE-CLOSE-RTN     SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** ctlファイルをクローズ  START  ***"
      D    DISPLAY  CNS-PGM-ID":ctlファイル01オープンフラグ=["
      D                       FLG-CTLFILE-OPEN-01"]"
      *-----------------------------------------------------------------
           IF  FLG-CTLFILE-OPEN-01  =  CNS-ON
           THEN
             PERFORM  CTLFILE01-CLOSE-RTN
           ELSE
             CONTINUE
           END-IF
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ctlファイル02オープンフラグ=["
      D                       FLG-CTLFILE-OPEN-02"]"
      *-----------------------------------------------------------------
           IF  FLG-CTLFILE-OPEN-02  =  CNS-ON
           THEN
             PERFORM  CTLFILE02-CLOSE-RTN
           ELSE
             CONTINUE
           END-IF
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ctlファイル03オープンフラグ=["
      D                       FLG-CTLFILE-OPEN-03"]"
      *-----------------------------------------------------------------
           IF  FLG-CTLFILE-OPEN-03  =  CNS-ON
           THEN
             PERFORM  CTLFILE03-CLOSE-RTN
           ELSE
             CONTINUE
           END-IF
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ctlファイル04オープンフラグ=["
      D                       FLG-CTLFILE-OPEN-04"]"
      *-----------------------------------------------------------------
           IF  FLG-CTLFILE-OPEN-04  =  CNS-ON
           THEN
             PERFORM  CTLFILE04-CLOSE-RTN
           ELSE
             CONTINUE
           END-IF
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ctlファイル05オープンフラグ=["
      D                       FLG-CTLFILE-OPEN-05"]"
      *-----------------------------------------------------------------
           IF  FLG-CTLFILE-OPEN-05  =  CNS-ON
           THEN
             PERFORM  CTLFILE05-CLOSE-RTN
           ELSE
             CONTINUE
           END-IF
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ctlファイル06オープンフラグ=["
      D                       FLG-CTLFILE-OPEN-06"]"
      *-----------------------------------------------------------------
           IF  FLG-CTLFILE-OPEN-06  =  CNS-ON
           THEN
             PERFORM  CTLFILE06-CLOSE-RTN
           ELSE
             CONTINUE
           END-IF
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** ctlファイルをクローズ  END  ***"
      *-----------------------------------------------------------------
           CONTINUE.
       CTL-FILE-CLOSE-EXT.
           EXIT.
      ******************************************************************
      *    2) マージファイルのフッターを作成
      ******************************************************************
       END-EDIT-RTN           SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  CNS-PGM-ID":*****  マージファイルのフッターを作成"
      D                       "  START  *****"
      D    DISPLAY  CNS-PGM-ID":ワークODW接続用業務タスクID=["
      D             WK-ODW-GYOMU-TASK-ID"]"
      *-----------------------------------------------------------------
           EVALUATE  WK-ODW-GYOMU-TASK-ID
             WHEN  CNS-TD870JC
      *---------  ワークコマンドの初期化
               INITIALIZE   WK-ADM-ARG1
                            WK-ADM-ARG2
                            WK-ADM-ARG3
                            WK-ADM-ARG4
                            WK-KOMANDO
                            WK-LEN-KOMANDO
                            WK-ERR-POS
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":WK-LEN-KOMANDO=["WK-LEN-KOMANDO"]"
      *-----------------------------------------------------------------
               STRING  CNS-PRINTF
                       CNS-YINGHAO
                       CNS-IFP
                       CNS-YINGHAO
                       CNS-WCL
                       WK-NAS-PATH(1:WK-I)
                       CNS-SLASH
                       CNS-RX
                       WK-RIYO-CMP-CD
                       CNS-UNDERBAR
                       WK-SYORI-YMD
                       CNS-UNDERBAR
                       WK-KIDOU-ID
                       CNS-UNDERBAR
                       WK-ODW-GYOMU-TASK-ID
                       CNS-UNDERBAR
                       CNS-X-01
                       CNS-BAK
                       CNS-AWK
                       CNS-YINGHAO
                       CNS-ZN
                       CNS-YINGHAO
                       CNS-OUT
                       WK-NAS-PATH(1:WK-I)
                       CNS-SLASH
                       CNS-RX
                       WK-RIYO-CMP-CD
                       CNS-UNDERBAR
                       WK-SYORI-YMD
                       CNS-UNDERBAR
                       WK-KIDOU-ID
                       CNS-UNDERBAR
                       WK-ODW-GYOMU-TASK-ID
                       CNS-UNDERBAR
                       CNS-X-01
                       CNS-BAK
                       DELIMITED BY SIZE
                 INTO  WK-KOMANDO
               INSPECT  FUNCTION REVERSE(WK-KOMANDO)
                        TALLYING WK-LEN-KOMANDO FOR LEADING SPACES
               COMPUTE  WK-LEN-KOMANDO = 
                        FUNCTION LENGTH(WK-KOMANDO) - WK-LEN-KOMANDO
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["
      D                        WK-KOMANDO(1:WK-LEN-KOMANDO)"]"
      *-----------------------------------------------------------------
               MOVE  CNS-POS-029        TO  WK-ERR-POS
      *-----------  【CBLDCADM】をコール処理
               PERFORM  CALL-CBLDCADM-RTN
             WHEN  CNS-TD890US
      *---------  ワークコマンドの初期化
                INITIALIZE  WK-ADM-ARG1
                            WK-ADM-ARG2
                            WK-ADM-ARG3
                            WK-ADM-ARG4
                            WK-KOMANDO
                            WK-LEN-KOMANDO
                            WK-ERR-POS
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":WK-LEN-KOMANDO=["WK-LEN-KOMANDO"]"
      *-----------------------------------------------------------------
               STRING  CNS-PRINTF
                       CNS-YINGHAO
                       CNS-IAFT
                       CNS-YINGHAO
                       CNS-WCL
                       WK-NAS-PATH(1:WK-I)
                       CNS-SLASH
                       CNS-RX
                       WK-RIYO-CMP-CD
                       CNS-UNDERBAR
                       WK-SYORI-YMD
                       CNS-UNDERBAR
                       WK-KIDOU-ID
                       CNS-UNDERBAR
                       WK-ODW-GYOMU-TASK-ID
                       CNS-UNDERBAR
                       CNS-X-01
                       CNS-BAK
                       CNS-AWK
                       CNS-YINGHAO
                       CNS-ZN
                       CNS-YINGHAO
                       CNS-OUT
                       WK-NAS-PATH(1:WK-I)
                       CNS-SLASH
                       CNS-RX
                       WK-RIYO-CMP-CD
                       CNS-UNDERBAR
                       WK-SYORI-YMD
                       CNS-UNDERBAR
                       WK-KIDOU-ID
                       CNS-UNDERBAR
                       WK-ODW-GYOMU-TASK-ID
                       CNS-UNDERBAR
                       CNS-X-01
                       CNS-BAK
                       DELIMITED BY SIZE
                 INTO  WK-KOMANDO
               INSPECT  FUNCTION REVERSE(WK-KOMANDO)
                        TALLYING WK-LEN-KOMANDO FOR LEADING SPACES
               COMPUTE  WK-LEN-KOMANDO = 
                        FUNCTION LENGTH(WK-KOMANDO) - WK-LEN-KOMANDO
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["
      D                        WK-KOMANDO(1:WK-LEN-KOMANDO)"]"
      *-----------------------------------------------------------------
               MOVE  CNS-POS-030        TO  WK-ERR-POS
      *-----------  【CBLDCADM】をコール処理
               PERFORM  CALL-CBLDCADM-RTN
             WHEN  CNS-TD900US
      *---------  ワークコマンドの初期化
                INITIALIZE  WK-ADM-ARG1
                            WK-ADM-ARG2
                            WK-ADM-ARG3
                            WK-ADM-ARG4
                            WK-KOMANDO
                            WK-LEN-KOMANDO
                            WK-ERR-POS
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":WK-LEN-KOMANDO=["WK-LEN-KOMANDO"]"
      *-----------------------------------------------------------------
               STRING  CNS-PRINTF
                       CNS-YINGHAO
                       CNS-IAFP
                       CNS-YINGHAO
                       CNS-WCL
                       WK-NAS-PATH(1:WK-I)
                       CNS-SLASH
                       CNS-RX
                       WK-RIYO-CMP-CD
                       CNS-UNDERBAR
                       WK-SYORI-YMD
                       CNS-UNDERBAR
                       WK-KIDOU-ID
                       CNS-UNDERBAR
                       WK-ODW-GYOMU-TASK-ID
                       CNS-UNDERBAR
                       CNS-X-01
                       CNS-BAK
                       CNS-AWK
                       CNS-YINGHAO
                       CNS-ZN
                       CNS-YINGHAO
                       CNS-OUT
                       WK-NAS-PATH(1:WK-I)
                       CNS-SLASH
                       CNS-RX
                       WK-RIYO-CMP-CD
                       CNS-UNDERBAR
                       WK-SYORI-YMD
                       CNS-UNDERBAR
                       WK-KIDOU-ID
                       CNS-UNDERBAR
                       WK-ODW-GYOMU-TASK-ID
                       CNS-UNDERBAR
                       CNS-X-01
                       CNS-BAK
                       DELIMITED BY SIZE
                 INTO  WK-KOMANDO
               INSPECT  FUNCTION REVERSE(WK-KOMANDO)
                        TALLYING WK-LEN-KOMANDO FOR LEADING SPACES
               COMPUTE  WK-LEN-KOMANDO = 
                        FUNCTION LENGTH(WK-KOMANDO) - WK-LEN-KOMANDO
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["
      D                        WK-KOMANDO(1:WK-LEN-KOMANDO)"]"
      *-----------------------------------------------------------------
               MOVE  CNS-POS-031        TO  WK-ERR-POS
      *-----------  【CBLDCADM】をコール処理
               PERFORM  CALL-CBLDCADM-RTN
      *---------  ワークコマンドの初期化
               INITIALIZE  WK-ADM-ARG1
                           WK-ADM-ARG2
                           WK-ADM-ARG3
                           WK-ADM-ARG4
                           WK-KOMANDO
                           WK-LEN-KOMANDO
                           WK-ERR-POS
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":WK-LEN-KOMANDO=["WK-LEN-KOMANDO"]"
      *-----------------------------------------------------------------
               STRING  CNS-PRINTF
                       CNS-YINGHAO
                       CNS-IAFP
                       CNS-YINGHAO
                       CNS-WCL
                       WK-NAS-PATH(1:WK-I)
                       CNS-SLASH
                       CNS-RX
                       WK-RIYO-CMP-CD
                       CNS-UNDERBAR
                       WK-SYORI-YMD
                       CNS-UNDERBAR
                       WK-KIDOU-ID
                       CNS-UNDERBAR
                       WK-ODW-GYOMU-TASK-ID
                       CNS-UNDERBAR
                       CNS-X-02
                       CNS-BAK
                       CNS-AWK
                       CNS-YINGHAO
                       CNS-ZN
                       CNS-YINGHAO
                       CNS-OUT
                       WK-NAS-PATH(1:WK-I)
                       CNS-SLASH
                       CNS-RX
                       WK-RIYO-CMP-CD
                       CNS-UNDERBAR
                       WK-SYORI-YMD
                       CNS-UNDERBAR
                       WK-KIDOU-ID
                       CNS-UNDERBAR
                       WK-ODW-GYOMU-TASK-ID
                       CNS-UNDERBAR
                       CNS-X-02
                       CNS-BAK
                       DELIMITED BY SIZE
                 INTO  WK-KOMANDO
               INSPECT  FUNCTION REVERSE(WK-KOMANDO)
                        TALLYING WK-LEN-KOMANDO FOR LEADING SPACES
               COMPUTE  WK-LEN-KOMANDO = 
                        FUNCTION LENGTH(WK-KOMANDO) - WK-LEN-KOMANDO
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["
      D                        WK-KOMANDO(1:WK-LEN-KOMANDO)"]"
      *-----------------------------------------------------------------
               MOVE  CNS-POS-032        TO  WK-ERR-POS
      *-----------  【CBLDCADM】をコール処理
               PERFORM  CALL-CBLDCADM-RTN
      *---------  ワークコマンドの初期化
               INITIALIZE  WK-ADM-ARG1
                           WK-ADM-ARG2
                           WK-ADM-ARG3
                           WK-ADM-ARG4
                           WK-KOMANDO
                           WK-LEN-KOMANDO
                           WK-ERR-POS
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":WK-LEN-KOMANDO=["WK-LEN-KOMANDO"]"
      *-----------------------------------------------------------------
               STRING  CNS-PRINTF
                       CNS-YINGHAO
                       CNS-IAFP
                       CNS-YINGHAO
                       CNS-WCL
                       WK-NAS-PATH(1:WK-I)
                       CNS-SLASH
                       CNS-RX
                       WK-RIYO-CMP-CD
                       CNS-UNDERBAR
                       WK-SYORI-YMD
                       CNS-UNDERBAR
                       WK-KIDOU-ID
                       CNS-UNDERBAR
                       WK-ODW-GYOMU-TASK-ID
                       CNS-UNDERBAR
                       CNS-X-05
                       CNS-BAK
                       CNS-AWK
                       CNS-YINGHAO
                       CNS-ZN
                       CNS-YINGHAO
                       CNS-OUT
                       WK-NAS-PATH(1:WK-I)
                       CNS-SLASH
                       CNS-RX
                       WK-RIYO-CMP-CD
                       CNS-UNDERBAR
                       WK-SYORI-YMD
                       CNS-UNDERBAR
                       WK-KIDOU-ID
                       CNS-UNDERBAR
                       WK-ODW-GYOMU-TASK-ID
                       CNS-UNDERBAR
                       CNS-X-05
                       CNS-BAK
                       DELIMITED BY SIZE
                 INTO  WK-KOMANDO
               INSPECT  FUNCTION REVERSE(WK-KOMANDO)
                        TALLYING WK-LEN-KOMANDO FOR LEADING SPACES
               COMPUTE  WK-LEN-KOMANDO = 
                        FUNCTION LENGTH(WK-KOMANDO) - WK-LEN-KOMANDO
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["
      D                        WK-KOMANDO(1:WK-LEN-KOMANDO)"]"
      *-----------------------------------------------------------------
               MOVE  CNS-POS-033        TO  WK-ERR-POS
      *-----------  【CBLDCADM】をコール処理
               PERFORM  CALL-CBLDCADM-RTN
      *---------  ワークコマンドの初期化
               INITIALIZE   WK-ADM-ARG1
                            WK-ADM-ARG2
                            WK-ADM-ARG3
                            WK-ADM-ARG4
                            WK-KOMANDO
                            WK-LEN-KOMANDO
                            WK-ERR-POS
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":WK-LEN-KOMANDO=["WK-LEN-KOMANDO"]"
      *-----------------------------------------------------------------
               STRING  CNS-PRINTF
                       CNS-YINGHAO
                       CNS-IAFP
                       CNS-YINGHAO
                       CNS-WCL
                       WK-NAS-PATH(1:WK-I)
                       CNS-SLASH
                       CNS-RX
                       WK-RIYO-CMP-CD
                       CNS-UNDERBAR
                       WK-SYORI-YMD
                       CNS-UNDERBAR
                       WK-KIDOU-ID
                       CNS-UNDERBAR
                       WK-ODW-GYOMU-TASK-ID
                       CNS-UNDERBAR
                       CNS-X-06
                       CNS-BAK
                       CNS-AWK
                       CNS-YINGHAO
                       CNS-ZN
                       CNS-YINGHAO
                       CNS-OUT
                       WK-NAS-PATH(1:WK-I)
                       CNS-SLASH
                       CNS-RX
                       WK-RIYO-CMP-CD
                       CNS-UNDERBAR
                       WK-SYORI-YMD
                       CNS-UNDERBAR
                       WK-KIDOU-ID
                       CNS-UNDERBAR
                       WK-ODW-GYOMU-TASK-ID
                       CNS-UNDERBAR
                       CNS-X-06
                       CNS-BAK
                       DELIMITED BY SIZE
                 INTO  WK-KOMANDO
               INSPECT  FUNCTION REVERSE(WK-KOMANDO)
                        TALLYING WK-LEN-KOMANDO FOR LEADING SPACES
               COMPUTE  WK-LEN-KOMANDO = 
                        FUNCTION LENGTH(WK-KOMANDO) - WK-LEN-KOMANDO
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["
      D                        WK-KOMANDO(1:WK-LEN-KOMANDO)"]"
      *-----------------------------------------------------------------
               MOVE  CNS-POS-034        TO  WK-ERR-POS
      *-----------  【CBLDCADM】をコール処理
               PERFORM  CALL-CBLDCADM-RTN
             WHEN  CNS-TD920US
      *---------  ワークコマンドの初期化
               INITIALIZE   WK-ADM-ARG1
                            WK-ADM-ARG2
                            WK-ADM-ARG3
                            WK-ADM-ARG4
                            WK-KOMANDO
                            WK-LEN-KOMANDO
                            WK-ERR-POS
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":WK-LEN-KOMANDO=["WK-LEN-KOMANDO"]"
      *-----------------------------------------------------------------
               STRING  CNS-PRINTF
                       CNS-YINGHAO
                       CNS-IFA
                       CNS-YINGHAO
                       CNS-WCL
                       WK-NAS-PATH(1:WK-I)
                       CNS-SLASH
                       CNS-RX
                       WK-RIYO-CMP-CD
                       CNS-UNDERBAR
                       WK-SYORI-YMD
                       CNS-UNDERBAR
                       WK-KIDOU-ID
                       CNS-UNDERBAR
                       WK-ODW-GYOMU-TASK-ID
                       CNS-UNDERBAR
                       CNS-X-01
                       CNS-BAK
                       CNS-AWK
                       CNS-YINGHAO
                       CNS-ZN
                       CNS-YINGHAO
                       CNS-OUT
                       WK-NAS-PATH(1:WK-I)
                       CNS-SLASH
                       CNS-RX
                       WK-RIYO-CMP-CD
                       CNS-UNDERBAR
                       WK-SYORI-YMD
                       CNS-UNDERBAR
                       WK-KIDOU-ID
                       CNS-UNDERBAR
                       WK-ODW-GYOMU-TASK-ID
                       CNS-UNDERBAR
                       CNS-X-01
                       CNS-BAK
                       DELIMITED BY SIZE
                 INTO  WK-KOMANDO
               INSPECT  FUNCTION REVERSE(WK-KOMANDO)
                        TALLYING WK-LEN-KOMANDO FOR LEADING SPACES
               COMPUTE  WK-LEN-KOMANDO = 
                        FUNCTION LENGTH(WK-KOMANDO) - WK-LEN-KOMANDO
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["
      D                        WK-KOMANDO(1:WK-LEN-KOMANDO)"]"
      *-----------------------------------------------------------------
               MOVE  CNS-POS-035        TO  WK-ERR-POS
      *-----------  【CBLDCADM】をコール処理
               PERFORM  CALL-CBLDCADM-RTN
      *---------  ワークコマンドの初期化
               INITIALIZE   WK-ADM-ARG1
                            WK-ADM-ARG2
                            WK-ADM-ARG3
                            WK-ADM-ARG4
                            WK-KOMANDO
                            WK-LEN-KOMANDO
                            WK-ERR-POS
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":WK-LEN-KOMANDO=["WK-LEN-KOMANDO"]"
      *-----------------------------------------------------------------
               STRING  CNS-PRINTF
                       CNS-YINGHAO
                       CNS-IFA
                       CNS-YINGHAO
                       CNS-WCL
                       WK-NAS-PATH(1:WK-I)
                       CNS-SLASH
                       CNS-RX
                       WK-RIYO-CMP-CD
                       CNS-UNDERBAR
                       WK-SYORI-YMD
                       CNS-UNDERBAR
                       WK-KIDOU-ID
                       CNS-UNDERBAR
                       WK-ODW-GYOMU-TASK-ID
                       CNS-UNDERBAR
                       CNS-X-02
                       CNS-BAK
                       CNS-AWK
                       CNS-YINGHAO
                       CNS-ZN
                       CNS-YINGHAO
                       CNS-OUT
                       WK-NAS-PATH(1:WK-I)
                       CNS-SLASH
                       CNS-RX
                       WK-RIYO-CMP-CD
                       CNS-UNDERBAR
                       WK-SYORI-YMD
                       CNS-UNDERBAR
                       WK-KIDOU-ID
                       CNS-UNDERBAR
                       WK-ODW-GYOMU-TASK-ID
                       CNS-UNDERBAR
                       CNS-X-02
                       CNS-BAK
                       DELIMITED BY SIZE
                 INTO  WK-KOMANDO
               INSPECT  FUNCTION REVERSE(WK-KOMANDO)
                        TALLYING WK-LEN-KOMANDO FOR LEADING SPACES
               COMPUTE  WK-LEN-KOMANDO = 
                        FUNCTION LENGTH(WK-KOMANDO) - WK-LEN-KOMANDO
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["
      D                        WK-KOMANDO(1:WK-LEN-KOMANDO)"]"
      *-----------------------------------------------------------------
               MOVE  CNS-POS-036        TO  WK-ERR-POS
      *-----------  【CBLDCADM】をコール処理
               PERFORM  CALL-CBLDCADM-RTN
             WHEN  CNS-TD930US
      *---------  ワークコマンドの初期化
               INITIALIZE   WK-ADM-ARG1
                            WK-ADM-ARG2
                            WK-ADM-ARG3
                            WK-ADM-ARG4
                            WK-KOMANDO
                            WK-LEN-KOMANDO
                            WK-ERR-POS
               STRING  CNS-PRINTF
                       CNS-YINGHAO
                       CNS-IFC
                       CNS-YINGHAO
                       CNS-WCL
                       WK-NAS-PATH(1:WK-I)
                       CNS-SLASH
                       CNS-RX
                       WK-RIYO-CMP-CD
                       CNS-UNDERBAR
                       WK-SYORI-YMD
                       CNS-UNDERBAR
                       WK-KIDOU-ID
                       CNS-UNDERBAR
                       WK-ODW-GYOMU-TASK-ID
                       CNS-UNDERBAR
                       CNS-X-01
                       CNS-BAK
                       CNS-AWK
                       CNS-YINGHAO
                       CNS-ZN
                       CNS-YINGHAO
                       CNS-OUT
                       WK-NAS-PATH(1:WK-I)
                       CNS-SLASH
                       CNS-RX
                       WK-RIYO-CMP-CD
                       CNS-UNDERBAR
                       WK-SYORI-YMD
                       CNS-UNDERBAR
                       WK-KIDOU-ID
                       CNS-UNDERBAR
                       WK-ODW-GYOMU-TASK-ID
                       CNS-UNDERBAR
                       CNS-X-01
                       CNS-BAK
                       DELIMITED BY SIZE
                 INTO  WK-KOMANDO
               INSPECT  FUNCTION REVERSE(WK-KOMANDO)
                        TALLYING WK-LEN-KOMANDO FOR LEADING SPACES
               COMPUTE  WK-LEN-KOMANDO = 
                        FUNCTION LENGTH(WK-KOMANDO) - WK-LEN-KOMANDO
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["
      D                        WK-KOMANDO(1:WK-LEN-KOMANDO)"]"
      *-----------------------------------------------------------------
               MOVE  CNS-POS-037        TO  WK-ERR-POS
      *-----------  【CBLDCADM】をコール処理
               PERFORM  CALL-CBLDCADM-RTN
             WHEN  CNS-TD850JC
      *---------  ワークコマンドの初期化
               INITIALIZE   WK-ADM-ARG1
                            WK-ADM-ARG2
                            WK-ADM-ARG3
                            WK-ADM-ARG4
                            WK-KOMANDO
                            WK-LEN-KOMANDO
                            WK-ERR-POS
               STRING  CNS-PRINTF
                       CNS-YINGHAO
                       CNS-IAFS
                       CNS-YINGHAO
                       CNS-WCL
                       WK-NAS-PATH(1:WK-I)
                       CNS-SLASH
                       CNS-RX
                       WK-RIYO-CMP-CD
                       CNS-UNDERBAR
                       WK-SYORI-YMD
                       CNS-UNDERBAR
                       WK-KIDOU-ID
                       CNS-UNDERBAR
                       WK-ODW-GYOMU-TASK-ID
                       CNS-UNDERBAR
                       CNS-X-01
                       CNS-BAK
                       CNS-AWK
                       CNS-YINGHAO
                       CNS-ZN
                       CNS-YINGHAO
                       CNS-OUT
                       WK-NAS-PATH(1:WK-I)
                       CNS-SLASH
                       CNS-RX
                       WK-RIYO-CMP-CD
                       CNS-UNDERBAR
                       WK-SYORI-YMD
                       CNS-UNDERBAR
                       WK-KIDOU-ID
                       CNS-UNDERBAR
                       WK-ODW-GYOMU-TASK-ID
                       CNS-UNDERBAR
                       CNS-X-01
                       CNS-BAK
                       DELIMITED BY SIZE
                 INTO  WK-KOMANDO
               INSPECT  FUNCTION REVERSE(WK-KOMANDO)
                        TALLYING WK-LEN-KOMANDO FOR LEADING SPACES
               COMPUTE  WK-LEN-KOMANDO = 
                        FUNCTION LENGTH(WK-KOMANDO) - WK-LEN-KOMANDO
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["
      D                        WK-KOMANDO(1:WK-LEN-KOMANDO)"]"
      *-----------------------------------------------------------------
               MOVE  CNS-POS-038        TO  WK-ERR-POS
      *-----------  【CBLDCADM】をコール処理
               PERFORM  CALL-CBLDCADM-RTN
             WHEN  CNS-TD860JC
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":FLG-CTLFILE-OPEN-01=["
      D                         FLG-CTLFILE-OPEN-01"]"
      *-----------------------------------------------------------------
               IF  FLG-CTLFILE-OPEN-01  =  CNS-ON
               THEN
      *---------  ワークコマンドの初期化
                 INITIALIZE  WK-ADM-ARG1
                             WK-ADM-ARG2
                             WK-ADM-ARG3
                             WK-ADM-ARG4
                             WK-KOMANDO
                             WK-LEN-KOMANDO
                             WK-ERR-POS
                 STRING  CNS-PRINTF
                         CNS-YINGHAO
                         CNS-IFIC
                         CNS-YINGHAO
                         CNS-WCL
                         WK-NAS-PATH(1:WK-I)
                         CNS-SLASH
                         CNS-RX
                         WK-RIYO-CMP-CD
                         CNS-UNDERBAR
                         WK-SYORI-YMD
                         CNS-UNDERBAR
                         WK-KIDOU-ID
                         CNS-UNDERBAR
                         WK-ODW-GYOMU-TASK-ID
                         CNS-UNDERBAR
                         CNS-X-01
                         CNS-BAK
                         CNS-AWK
                         CNS-YINGHAO
                         CNS-ZN
                         CNS-YINGHAO
                         CNS-OUT
                         WK-NAS-PATH(1:WK-I)
                         CNS-SLASH
                         CNS-RX
                         WK-RIYO-CMP-CD
                         CNS-UNDERBAR
                         WK-SYORI-YMD
                         CNS-UNDERBAR
                         WK-KIDOU-ID
                         CNS-UNDERBAR
                         WK-ODW-GYOMU-TASK-ID
                         CNS-UNDERBAR
                         CNS-X-01
                         CNS-BAK
                         DELIMITED BY SIZE
                   INTO  WK-KOMANDO
                 INSPECT  FUNCTION REVERSE(WK-KOMANDO)
                          TALLYING WK-LEN-KOMANDO FOR LEADING SPACES
                 COMPUTE  WK-LEN-KOMANDO = 
                          FUNCTION LENGTH(WK-KOMANDO) - WK-LEN-KOMANDO
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["
      D                        WK-KOMANDO(1:WK-LEN-KOMANDO)"]"
      *-----------------------------------------------------------------
                 MOVE  CNS-POS-039        TO  WK-ERR-POS
      *-----------  【CBLDCADM】をコール処理
                 PERFORM  CALL-CBLDCADM-RTN
               ELSE
                 CONTINUE
               END-IF
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":FLG-CTLFILE-OPEN-02=["
      D                         FLG-CTLFILE-OPEN-02"]"
      *-----------------------------------------------------------------
               IF  FLG-CTLFILE-OPEN-02  =  CNS-ON
               THEN
      *---------  ワークコマンドの初期化
                 INITIALIZE  WK-ADM-ARG1
                             WK-ADM-ARG2
                             WK-ADM-ARG3
                             WK-ADM-ARG4
                             WK-KOMANDO
                             WK-LEN-KOMANDO
                             WK-ERR-POS
                 STRING  CNS-PRINTF
                         CNS-YINGHAO
                         CNS-IFII
                         CNS-YINGHAO
                         CNS-WCL
                         WK-NAS-PATH(1:WK-I)
                         CNS-SLASH
                         CNS-RX
                         WK-RIYO-CMP-CD
                         CNS-UNDERBAR
                         WK-SYORI-YMD
                         CNS-UNDERBAR
                         WK-KIDOU-ID
                         CNS-UNDERBAR
                         WK-ODW-GYOMU-TASK-ID
                         CNS-UNDERBAR
                         CNS-X-02
                         CNS-BAK
                         CNS-AWK
                         CNS-YINGHAO
                         CNS-ZN
                         CNS-YINGHAO
                         CNS-OUT
                         WK-NAS-PATH(1:WK-I)
                         CNS-SLASH
                         CNS-RX
                         WK-RIYO-CMP-CD
                         CNS-UNDERBAR
                         WK-SYORI-YMD
                         CNS-UNDERBAR
                         WK-KIDOU-ID
                         CNS-UNDERBAR
                         WK-ODW-GYOMU-TASK-ID
                         CNS-UNDERBAR
                         CNS-X-02
                         CNS-BAK
                         DELIMITED BY SIZE
                   INTO  WK-KOMANDO
                 INSPECT  FUNCTION REVERSE(WK-KOMANDO)
                          TALLYING WK-LEN-KOMANDO FOR LEADING SPACES
                 COMPUTE  WK-LEN-KOMANDO = 
                          FUNCTION LENGTH(WK-KOMANDO) - WK-LEN-KOMANDO
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["
      D                        WK-KOMANDO(1:WK-LEN-KOMANDO)"]"
      *-----------------------------------------------------------------
                 MOVE  CNS-POS-040        TO  WK-ERR-POS
      *-----------  【CBLDCADM】をコール処理
                 PERFORM  CALL-CBLDCADM-RTN
               ELSE
                 CONTINUE
               END-IF
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":FLG-CTLFILE-OPEN-03=["
      D                         FLG-CTLFILE-OPEN-03"]"
      *-----------------------------------------------------------------
               IF  FLG-CTLFILE-OPEN-03  =  CNS-ON
               THEN
      *---------  ワークコマンドの初期化
                 INITIALIZE  WK-ADM-ARG1
                             WK-ADM-ARG2
                             WK-ADM-ARG3
                             WK-ADM-ARG4
                             WK-KOMANDO
                             WK-LEN-KOMANDO
                             WK-ERR-POS
                 STRING  CNS-PRINTF
                         CNS-YINGHAO
                         CNS-IFB
                         CNS-YINGHAO
                         CNS-WCL
                         WK-NAS-PATH(1:WK-I)
                         CNS-SLASH
                         CNS-RX
                         WK-RIYO-CMP-CD
                         CNS-UNDERBAR
                         WK-SYORI-YMD
                         CNS-UNDERBAR
                         WK-KIDOU-ID
                         CNS-UNDERBAR
                         WK-ODW-GYOMU-TASK-ID
                         CNS-UNDERBAR
                         CNS-X-03
                         CNS-BAK
                         CNS-AWK
                         CNS-YINGHAO
                         CNS-ZN
                         CNS-YINGHAO
                         CNS-OUT
                         WK-NAS-PATH(1:WK-I)
                         CNS-SLASH
                         CNS-RX
                         WK-RIYO-CMP-CD
                         CNS-UNDERBAR
                         WK-SYORI-YMD
                         CNS-UNDERBAR
                         WK-KIDOU-ID
                         CNS-UNDERBAR
                         WK-ODW-GYOMU-TASK-ID
                         CNS-UNDERBAR
                         CNS-X-03
                         CNS-BAK
                         DELIMITED BY SIZE
                   INTO  WK-KOMANDO
                 INSPECT  FUNCTION REVERSE(WK-KOMANDO)
                          TALLYING WK-LEN-KOMANDO FOR LEADING SPACES
                 COMPUTE  WK-LEN-KOMANDO = 
                          FUNCTION LENGTH(WK-KOMANDO) - WK-LEN-KOMANDO
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["
      D                        WK-KOMANDO(1:WK-LEN-KOMANDO)"]"
      *-----------------------------------------------------------------
                 MOVE  CNS-POS-041        TO  WK-ERR-POS
      *-----------  【CBLDCADM】をコール処理
                 PERFORM  CALL-CBLDCADM-RTN
               ELSE
                 CONTINUE
               END-IF
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":FLG-CTLFILE-OPEN-04=["
      D                         FLG-CTLFILE-OPEN-04"]"
      *-----------------------------------------------------------------
               IF  FLG-CTLFILE-OPEN-04  =  CNS-ON
               THEN
      *---------  ワークコマンドの初期化
                 INITIALIZE  WK-ADM-ARG1
                             WK-ADM-ARG2
                             WK-ADM-ARG3
                             WK-ADM-ARG4
                             WK-KOMANDO
                             WK-LEN-KOMANDO
                             WK-ERR-POS
                 STRING  CNS-PRINTF
                         CNS-YINGHAO
                         CNS-IFF
                         CNS-YINGHAO
                         CNS-WCL
                         WK-NAS-PATH(1:WK-I)
                         CNS-SLASH
                         CNS-RX
                         WK-RIYO-CMP-CD
                         CNS-UNDERBAR
                         WK-SYORI-YMD
                         CNS-UNDERBAR
                         WK-KIDOU-ID
                         CNS-UNDERBAR
                         WK-ODW-GYOMU-TASK-ID
                         CNS-UNDERBAR
                         CNS-X-04
                         CNS-BAK
                         CNS-AWK
                         CNS-YINGHAO
                         CNS-ZN
                         CNS-YINGHAO
                         CNS-OUT
                         WK-NAS-PATH(1:WK-I)
                         CNS-SLASH
                         CNS-RX
                         WK-RIYO-CMP-CD
                         CNS-UNDERBAR
                         WK-SYORI-YMD
                         CNS-UNDERBAR
                         WK-KIDOU-ID
                         CNS-UNDERBAR
                         WK-ODW-GYOMU-TASK-ID
                         CNS-UNDERBAR
                         CNS-X-04
                         CNS-BAK
                         DELIMITED BY SIZE
                   INTO  WK-KOMANDO
                 INSPECT  FUNCTION REVERSE(WK-KOMANDO)
                          TALLYING WK-LEN-KOMANDO FOR LEADING SPACES
                 COMPUTE  WK-LEN-KOMANDO = 
                          FUNCTION LENGTH(WK-KOMANDO) - WK-LEN-KOMANDO
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["
      D                        WK-KOMANDO(1:WK-LEN-KOMANDO)"]"
      *-----------------------------------------------------------------
                 MOVE  CNS-POS-042        TO  WK-ERR-POS
      *-----------  【CBLDCADM】をコール処理
                 PERFORM  CALL-CBLDCADM-RTN
               ELSE
                 CONTINUE
               END-IF
             WHEN  OTHER
               CONTINUE
           END-EVALUATE
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  CNS-PGM-ID":*****  マージファイルのフッターを作成"
      D                       "  END  *****"
      *-----------------------------------------------------------------
           CONTINUE.
       END-EDIT-EXT.
           EXIT.
      ******************************************************************
      *    ctlファイル01をクローズ
      ******************************************************************
       CTLFILE01-CLOSE-RTN    SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** ctlファイル01をクローズ START ***"
      *-----------------------------------------------------------------
           CLOSE  CTL-FILE01
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ST-CTLFILE01=["ST-CTLFILE01"]"
      *-----------------------------------------------------------------
           IF  ST-CTLFILE01  =  CNS-FILE-NORMAL  THEN
             MOVE  CNS-OFF         TO  FLG-CTLFILE-OPEN-01
           ELSE
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY "ctlファイル01アクセスエラー(CLOSE)"
      *-----------------------------------------------------------------
      *----------  エラー検知プログラムID
             MOVE  CNS-PGM-ID
               TO  ERR-PGM-ID           OF  PARM-SCZY1170-ARG1
      *----------  ポジション
             MOVE  CNS-POS-043
               TO  ERR-POS              OF  PARM-SCZY1170-ARG1
      *----------  リターンコード
             MOVE  CNS-RTN-230
               TO  RTN-CD               OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
             MOVE  ST-CTLFILE01
               TO  DETAIL-RTN-CD        OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
             MOVE  CNS-DETAIL-0
               TO  DETAIL-RTN-CD-FLG    OF  PARM-SCZY1170-ARG1
      *---------- フリーメッセージ
             MOVE  CNS-FILE-CLOSE-ERR
               TO  FREE-MSG             OF  PARM-SCZY1170-ARG1
      *----------  エラー処理
             PERFORM  ERR-RTN
           END-IF
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ctlファイル01オープンフラグ=["
      D                         FLG-CTLFILE-OPEN-01"]"
      D    DISPLAY  CNS-PGM-ID":*** ctlファイル01をクローズ  END  ***"
      *-----------------------------------------------------------------
           CONTINUE.
       CTLFILE01-CLOSE-EXT.
           EXIT.
      ******************************************************************
      *    ctlファイル02をクローズ
      ******************************************************************
       CTLFILE02-CLOSE-RTN    SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** ctlファイル02をクローズ START ***"
      *-----------------------------------------------------------------
           CLOSE  CTL-FILE02
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ST-CTLFILE02=["ST-CTLFILE02"]"
      *-----------------------------------------------------------------
           IF  ST-CTLFILE02  =  CNS-FILE-NORMAL  THEN
             MOVE  CNS-OFF         TO  FLG-CTLFILE-OPEN-02
           ELSE
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY "ctlファイル02アクセスエラー(CLOSE)"
      *-----------------------------------------------------------------
      *----------  エラー検知プログラムID
             MOVE  CNS-PGM-ID
               TO  ERR-PGM-ID           OF  PARM-SCZY1170-ARG1
      *----------  ポジション
             MOVE  CNS-POS-044
               TO  ERR-POS              OF  PARM-SCZY1170-ARG1
      *----------  リターンコード
             MOVE  CNS-RTN-230
               TO  RTN-CD               OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
             MOVE  ST-CTLFILE02
               TO  DETAIL-RTN-CD        OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
             MOVE  CNS-DETAIL-0
               TO  DETAIL-RTN-CD-FLG    OF  PARM-SCZY1170-ARG1
      *---------- フリーメッセージ
             MOVE  CNS-FILE-CLOSE-ERR
               TO  FREE-MSG             OF  PARM-SCZY1170-ARG1
      *----------  エラー処理
             PERFORM  ERR-RTN
           END-IF
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ctlファイル02オープンフラグ=["
      D                         FLG-CTLFILE-OPEN-02"]"
      D    DISPLAY  CNS-PGM-ID":*** ctlファイル02をクローズ  END  ***"
      *-----------------------------------------------------------------
           CONTINUE.
       CTLFILE02-CLOSE-EXT.
           EXIT.
      ******************************************************************
      *    ctlファイル03をクローズ
      ******************************************************************
       CTLFILE03-CLOSE-RTN    SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** ctlファイル03をクローズ START ***"
      *-----------------------------------------------------------------
           CLOSE  CTL-FILE03
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ST-CTLFILE03=["ST-CTLFILE03"]"
      *-----------------------------------------------------------------
           IF  ST-CTLFILE03  =  CNS-FILE-NORMAL  THEN
             MOVE  CNS-OFF         TO  FLG-CTLFILE-OPEN-01
           ELSE
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY "ctlファイル03アクセスエラー(CLOSE)"
      *-----------------------------------------------------------------
      *----------  エラー検知プログラムID
             MOVE  CNS-PGM-ID
               TO  ERR-PGM-ID           OF  PARM-SCZY1170-ARG1
      *----------  ポジション
             MOVE  CNS-POS-045
               TO  ERR-POS              OF  PARM-SCZY1170-ARG1
      *----------  リターンコード
             MOVE  CNS-RTN-230
               TO  RTN-CD               OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
             MOVE  ST-CTLFILE03
               TO  DETAIL-RTN-CD        OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
             MOVE  CNS-DETAIL-0
               TO  DETAIL-RTN-CD-FLG    OF  PARM-SCZY1170-ARG1
      *---------- フリーメッセージ
             MOVE  CNS-FILE-CLOSE-ERR
               TO  FREE-MSG             OF  PARM-SCZY1170-ARG1
      *----------  エラー処理
             PERFORM  ERR-RTN
           END-IF
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ctlファイル03オープンフラグ=["
      D                         FLG-CTLFILE-OPEN-03"]"
      D    DISPLAY  CNS-PGM-ID":*** ctlファイル03をクローズ  END  ***"
      *-----------------------------------------------------------------
           CONTINUE.
       CTLFILE03-CLOSE-EXT.
           EXIT.
      ******************************************************************
      *    ctlファイル04をクローズ
      ******************************************************************
       CTLFILE04-CLOSE-RTN    SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** ctlファイル04をクローズ START ***"
      *-----------------------------------------------------------------
           CLOSE  CTL-FILE04
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ST-CTLFILE04=["ST-CTLFILE04"]"
      *-----------------------------------------------------------------
           IF  ST-CTLFILE04  =  CNS-FILE-NORMAL  THEN
             MOVE  CNS-OFF         TO  FLG-CTLFILE-OPEN-04
           ELSE
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY "ctlファイル04アクセスエラー(CLOSE)"
      *-----------------------------------------------------------------
      *----------  エラー検知プログラムID
             MOVE  CNS-PGM-ID
               TO  ERR-PGM-ID           OF  PARM-SCZY1170-ARG1
      *----------  ポジション
             MOVE  CNS-POS-046
               TO  ERR-POS              OF  PARM-SCZY1170-ARG1
      *----------  リターンコード
             MOVE  CNS-RTN-230
               TO  RTN-CD               OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
             MOVE  ST-CTLFILE04
               TO  DETAIL-RTN-CD        OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
             MOVE  CNS-DETAIL-0
               TO  DETAIL-RTN-CD-FLG    OF  PARM-SCZY1170-ARG1
      *---------- フリーメッセージ
             MOVE  CNS-FILE-CLOSE-ERR
               TO  FREE-MSG             OF  PARM-SCZY1170-ARG1
      *----------  エラー処理
             PERFORM  ERR-RTN
           END-IF
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ctlファイル04オープンフラグ=["
      D                         FLG-CTLFILE-OPEN-04"]"
      D    DISPLAY  CNS-PGM-ID":*** ctlファイル04をクローズ  END  ***"
      *-----------------------------------------------------------------
           CONTINUE.
       CTLFILE04-CLOSE-EXT.
           EXIT.
      ******************************************************************
      *    ctlファイル05をクローズ
      ******************************************************************
       CTLFILE05-CLOSE-RTN    SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** ctlファイル05をクローズ START ***"
      *-----------------------------------------------------------------
           CLOSE  CTL-FILE05
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ST-CTLFILE05=["ST-CTLFILE05"]"
      *-----------------------------------------------------------------
           IF  ST-CTLFILE05  =  CNS-FILE-NORMAL  THEN
             MOVE  CNS-OFF         TO  FLG-CTLFILE-OPEN-05
           ELSE
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY "ctlファイル05アクセスエラー(CLOSE)"
      *-----------------------------------------------------------------
      *----------  エラー検知プログラムID
             MOVE  CNS-PGM-ID
               TO  ERR-PGM-ID           OF  PARM-SCZY1170-ARG1
      *----------  ポジション
             MOVE  CNS-POS-047
               TO  ERR-POS              OF  PARM-SCZY1170-ARG1
      *----------  リターンコード
             MOVE  CNS-RTN-230
               TO  RTN-CD               OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
             MOVE  ST-CTLFILE05
               TO  DETAIL-RTN-CD        OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
             MOVE  CNS-DETAIL-0
               TO  DETAIL-RTN-CD-FLG    OF  PARM-SCZY1170-ARG1
      *---------- フリーメッセージ
             MOVE  CNS-FILE-CLOSE-ERR
               TO  FREE-MSG             OF  PARM-SCZY1170-ARG1
      *----------  エラー処理
             PERFORM  ERR-RTN
           END-IF
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ctlファイル05オープンフラグ=["
      D                         FLG-CTLFILE-OPEN-05"]"
      D    DISPLAY  CNS-PGM-ID":*** ctlファイル05をクローズ  END  ***"
      *-----------------------------------------------------------------
           CONTINUE.
       CTLFILE05-CLOSE-EXT.
           EXIT.
      ******************************************************************
      *    ctlファイル06をクローズ
      ******************************************************************
       CTLFILE06-CLOSE-RTN    SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** ctlファイル06をクローズ START ***"
      *-----------------------------------------------------------------
           CLOSE  CTL-FILE06
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ST-CTLFILE06=["ST-CTLFILE06"]"
      *-----------------------------------------------------------------
           IF  ST-CTLFILE06  =  CNS-FILE-NORMAL  THEN
             MOVE  CNS-OFF         TO  FLG-CTLFILE-OPEN-06
           ELSE
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY "ctlファイル01アクセスエラー(CLOSE)"
      *-----------------------------------------------------------------
      *----------  エラー検知プログラムID
             MOVE  CNS-PGM-ID
               TO  ERR-PGM-ID           OF  PARM-SCZY1170-ARG1
      *----------  ポジション
             MOVE  CNS-POS-048
               TO  ERR-POS              OF  PARM-SCZY1170-ARG1
      *----------  リターンコード
             MOVE  CNS-RTN-230
               TO  RTN-CD               OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
             MOVE  ST-CTLFILE06
               TO  DETAIL-RTN-CD        OF  PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
             MOVE  CNS-DETAIL-0
               TO  DETAIL-RTN-CD-FLG    OF  PARM-SCZY1170-ARG1
      *---------- フリーメッセージ
             MOVE  CNS-FILE-CLOSE-ERR
               TO  FREE-MSG             OF  PARM-SCZY1170-ARG1
      *----------  エラー処理
             PERFORM  ERR-RTN
           END-IF
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ctlファイル06オープンフラグ=["
      D                         FLG-CTLFILE-OPEN-06"]"
      D    DISPLAY  CNS-PGM-ID":*** ctlファイル06をクローズ  END  ***"
      *-----------------------------------------------------------------
           CONTINUE.
       CTLFILE06-CLOSE-EXT.
           EXIT.
      ******************************************************************
      *    3.2.6マージファイル名前から".bak"を削除して
      ******************************************************************
       DEL-BAK-FILE-RTN       SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** マージファイル名前を削除 START ***"
      *-----------------------------------------------------------------
      *--------  ワークコマンドの初期化
           INITIALIZE        WK-ADM-ARG1
                             WK-ADM-ARG2
                             WK-ADM-ARG3
                             WK-ADM-ARG4
                             WK-KOMANDO
                             WK-LEN-KOMANDO
                             WK-ERR-POS
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      *-----------------------------------------------------------------
           STRING  CNS-BIN-REN
                   CNS-BAK
                   CNS-SPACE
                   CNS-YINGHAO
                   CNS-YINGHAO
                   CNS-SPACE
                   WK-NAS-PATH(1:WK-I)
                   CNS-SLASH
                   CNS-RX
                   WK-RIYO-CMP-CD
                   CNS-UNDERBAR
                   WK-SYORI-YMD
                   CNS-UNDERBAR
                   WK-KIDOU-ID
                   CNS-UNDERBAR
                   WK-ODW-GYOMU-TASK-ID
                   "*"
                   CNS-BAK
                   DELIMITED BY SIZE
             INTO  WK-KOMANDO
           INSPECT  FUNCTION REVERSE(WK-KOMANDO)
                    TALLYING WK-LEN-KOMANDO FOR LEADING SPACES
           COMPUTE  WK-LEN-KOMANDO = 
                    FUNCTION LENGTH(WK-KOMANDO) - WK-LEN-KOMANDO
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["
      D                        WK-KOMANDO(1:WK-LEN-KOMANDO)"]"
      *-----------------------------------------------------------------
           MOVE  CNS-POS-049        TO  WK-ERR-POS
      *-----------  【CBLDCADM】をコール処理
           PERFORM  CALL-CBLDCADM-RTN
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** マージファイル名前を削除  END  ***"
      *-----------------------------------------------------------------
           CONTINUE.
       DEL-BAK-FILE-EXT.
           EXIT.
      ******************************************************************
      *    3.2.7マージファイルの圧縮処理
      ******************************************************************
       GZ-BAK-FILE-RTN        SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** マージファイルの圧縮処理  START ***"
      *-----------------------------------------------------------------
      *---------  ワークコマンドの初期化
           INITIALIZE        WK-ADM-ARG1
                             WK-ADM-ARG2
                             WK-ADM-ARG3
                             WK-ADM-ARG4
                             WK-KOMANDO
                             WK-LEN-KOMANDO
                             WK-ERR-POS
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":WK-LEN-KOMANDO=["WK-LEN-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":ワーク圧縮コマンド=["WK-GZ-KOMANDO"]"
      *-----------------------------------------------------------------
           MOVE  WK-GZ-KOMANDO          TO  WK-KOMANDO
           INSPECT  FUNCTION REVERSE(WK-KOMANDO)
                    TALLYING WK-LEN-KOMANDO FOR LEADING SPACES
           COMPUTE  WK-LEN-KOMANDO = 
                    FUNCTION LENGTH(WK-KOMANDO) - WK-LEN-KOMANDO
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["
      D                        WK-KOMANDO(1:WK-LEN-KOMANDO)"]"
      *-----------------------------------------------------------------
           MOVE  CNS-POS-050        TO  WK-ERR-POS
      *---------  【CBLDCADM】システム運用の管理をコール
           PERFORM  CALL-CBLDCADM-RTN
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** マージファイルの圧縮処理  END  ***"
      *-----------------------------------------------------------------
           CONTINUE.
       GZ-BAK-FILE-EXT.
           EXIT.
      ******************************************************************
      *    3.2.8圧縮したgzファイルの名前を変更する
      ******************************************************************
       RENAME-FILE-RTN        SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** 圧縮したgzファイルの名前を変更する"
      D                       "  START  ***"
      *-----------------------------------------------------------------
      *---------  ワークコマンドの初期化
           INITIALIZE        WK-ADM-ARG1
                             WK-ADM-ARG2
                             WK-ADM-ARG3
                             WK-ADM-ARG4
                             WK-KOMANDO
                             WK-LEN-KOMANDO
                             WK-ERR-POS
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":WK-LEN-KOMANDO=["WK-LEN-KOMANDO"]"
      *-----------------------------------------------------------------
           STRING  CNS-BIN-REN
                   WK-ODW-GYOMU-TASK-ID
                   CNS-SPACE
                   WK-GYOMU-TASK-ID
                   CNS-SPACE
                   WK-NAS-PATH(1:WK-I)
                   CNS-SLASH
                   CNS-RX
                   WK-RIYO-CMP-CD
                   CNS-UNDERBAR
                   WK-SYORI-YMD
                   CNS-UNDERBAR
                   WK-KIDOU-ID
                   CNS-UNDERBAR
                   WK-ODW-GYOMU-TASK-ID
                   "*"
                   CNS-GZ
                   DELIMITED BY SIZE
             INTO  WK-KOMANDO
           INSPECT  FUNCTION REVERSE(WK-KOMANDO)
                    TALLYING WK-LEN-KOMANDO FOR LEADING SPACES
           COMPUTE  WK-LEN-KOMANDO = 
                    FUNCTION LENGTH(WK-KOMANDO) - WK-LEN-KOMANDO
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["
      D                        WK-KOMANDO(1:WK-LEN-KOMANDO)"]"
      *-----------------------------------------------------------------
           MOVE  CNS-POS-053        TO  WK-ERR-POS
      *---------  【CBLDCADM】システム運用の管理をコール
           PERFORM  CALL-CBLDCADM-RTN
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** 圧縮したgzファイルの名前を変更する"
      D                       "  END  ***"
      *-----------------------------------------------------------------
           CONTINUE.
       RENAME-FILE-EXT.
           EXIT.
      ******************************************************************
      *    3.2.9圧縮結果とctlファイルをBLサーバへコピー
      ******************************************************************
       COPY-BL-FILE-RTN       SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** 圧縮結果とctlファイルをBLサーバへ"
      D                       "コピー  START  ***"
      *-----------------------------------------------------------------
      *---------  ワークコマンドの初期化
           INITIALIZE        WK-ADM-ARG1
                             WK-ADM-ARG2
                             WK-ADM-ARG3
                             WK-ADM-ARG4
                             WK-KOMANDO
                             WK-LEN-KOMANDO
                             WK-ERR-POS
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":WK-LEN-KOMANDO=["WK-LEN-KOMANDO"]"
      *-----------------------------------------------------------------
           STRING  CNS-CP-F
                   WK-NAS-PATH(1:WK-I)
                   CNS-SLASH
                   CNS-RX
                   WK-RIYO-CMP-CD
                   CNS-UNDERBAR
                   WK-SYORI-YMD
                   CNS-UNDERBAR
                   WK-KIDOU-ID
                   CNS-UNDERBAR
                   WK-GYOMU-TASK-ID
                   CNS-UNDERBAR
                   "*"
                   CNS-GZ
                   CNS-SPACE
                   WK-NAS-PATH(1:WK-I)
                   CNS-SLASH
                   CNS-RX
                   WK-RIYO-CMP-CD
                   CNS-UNDERBAR
                   WK-SYORI-YMD
                   CNS-UNDERBAR
                   WK-KIDOU-ID
                   CNS-UNDERBAR
                   WK-GYOMU-TASK-ID
                   CNS-UNDERBAR
                   "*"
                   CNS-CTL
                   CNS-SPACE
                   WK-BL-PATH
                   DELIMITED BY SIZE
             INTO  WK-KOMANDO
           INSPECT  FUNCTION REVERSE(WK-KOMANDO)
                    TALLYING WK-LEN-KOMANDO FOR LEADING SPACES
           COMPUTE  WK-LEN-KOMANDO = 
                    FUNCTION LENGTH(WK-KOMANDO) - WK-LEN-KOMANDO
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["
      D                        WK-KOMANDO(1:WK-LEN-KOMANDO)"]"
      *-----------------------------------------------------------------
           MOVE  CNS-POS-051        TO  WK-ERR-POS
      *---------  【CBLDCADM】システム運用の管理をコール
           PERFORM  CALL-CBLDCADM-RTN
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** 圧縮結果とctlファイルをBLサーバへ"
      D                       "コピー  END  ***"
      *-----------------------------------------------------------------
           CONTINUE.
       COPY-BL-FILE-EXT.
           EXIT.
      ******************************************************************
      *    3.2.10TEMPファイルの削除処理
      ******************************************************************
       DEL-TEMP-FILE-RTN      SECTION.
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** TEMPファイルの削除処理  START  ***"
      *-----------------------------------------------------------------
      *---------  ワークコマンドの初期化
           INITIALIZE        WK-ADM-ARG1
                             WK-ADM-ARG2
                             WK-ADM-ARG3
                             WK-ADM-ARG4
                             WK-KOMANDO
                             WK-LEN-KOMANDO
                             WK-ERR-POS
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":WK-LEN-KOMANDO=["WK-LEN-KOMANDO"]"
      *-----------------------------------------------------------------
           STRING  CNS-BIN-LS
                   WK-NAS-PATH(1:WK-I)
                   CNS-SLASH
                   CNS-RX
                   WK-RIYO-CMP-CD
                   "*"
                   WK-KIDOU-SS-TASK-ID
                   "*"
                   CNS-SPACE
                   WK-NAS-PATH(1:WK-I)
                   CNS-SLASH
                   CNS-RX
                   WK-RIYO-CMP-CD
                   "*"
                   WK-GYOMU-TASK-ID
                   "*"
                   CNS-SPACE
                   WK-NAS-PATH(1:WK-I)
                   CNS-SLASH
                   CNS-RX
                   WK-RIYO-CMP-CD
                   "*"
                   WK-ODW-GYOMU-TASK-ID
                   "*"
                   CNS-GRP
                   "'"
                   WK-SYORI-YMD
                   "'"
                   CNS-GRP
                   CNS-V
                   CNS-FINI2
                   CNS-RMF
                   DELIMITED BY SIZE
             INTO  WK-KOMANDO
           INSPECT  FUNCTION REVERSE(WK-KOMANDO)
                    TALLYING WK-LEN-KOMANDO FOR LEADING SPACES
           COMPUTE  WK-LEN-KOMANDO = 
                    FUNCTION LENGTH(WK-KOMANDO) - WK-LEN-KOMANDO
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["WK-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":コマンドの長さ =["WK-LEN-KOMANDO"]"
      D    DISPLAY  CNS-PGM-ID":ワークコマンド=["
      D                        WK-KOMANDO(1:WK-LEN-KOMANDO)"]"
      *-----------------------------------------------------------------
           MOVE  CNS-POS-052        TO  WK-ERR-POS
      *---------  【CBLDCADM】システム運用の管理をコール
           PERFORM  CALL-CBLDCADM-RTN
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":*** TEMPファイルの削除処理  END  ***"
      *-----------------------------------------------------------------
           CONTINUE.
       DEL-TEMP-FILE-EXT.
           EXIT.
      ******************************************************************
      *    3.3 後処理
      ******************************************************************
       END-RTN                SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  CNS-PGM-ID":*****  後処理  START  *****"
      *-----------------------------------------------------------------
      *----------  リターンパッケージセットルーチンをコールする
           MOVE  CNS-RTN-000
             TO  RTN-CD                        OF  PARM-SCZY1170-ARG1
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  CNS-PGM-ID":RTN-CD  OF  PARM-SCZY1170-ARG1 = ["
      D                         RTN-CD  OF  PARM-SCZY1170-ARG1"]"
      D    DISPLAY  CNS-PGM-ID":***  CALL SCZY1170 START  ***"
      *-----------------------------------------------------------------
      *-----------------------------------------------------------------
           CALL   "SCZY1170"           USING  PARM-SCZY1170-INOUT
                                              PARM-RTNPKG
           MOVE  PARM-RTNPKG            TO  PARM-SDYJ2301-ARG2
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  CNS-PGM-ID":***  CALL SCZY1170 END  ***"
      D    DISPLAY  CNS-PGM-ID":COUNTER OF PARM-RTNPKG=["
      D                         COUNTER OF PARM-RTNPKG"]"
      D    DISPLAY  CNS-PGM-ID":PARM-RTNPKG=["
      D                         PARM-RTNPKG"]"
      D    DISPLAY  CNS-PGM-ID":PARM-SDYJ2301-ARG2=["
      D                         PARM-SDYJ2301-ARG2"]"
      D    DISPLAY  CNS-PGM-ID":RTN-CD(SCZY1170)=["
      D             RTN-CD OF PARM-RTNPKG(COUNTER OF PARM-RTNPKG)"]"
      D    DISPLAY  CNS-PGM-ID":*****   後処理  END   *****"
      D    DISPLAY  CNS-PGM-ID":◇◆◇◆◇   SDYJ2301  END   ◇◆◇◆◇"
      *-----------------------------------------------------------------
           CONTINUE.
       END-EXT.
           EXIT.
      ******************************************************************
      *    3.4 エラー処理
      ******************************************************************
       ERR-RTN                SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  CNS-PGM-ID":*****  エラー処理  START  *****"
      D    DISPLAY  CNS-PGM-ID":ctlファイル01オープンフラグ=["
      D                       FLG-CTLFILE-OPEN-01"]"
      *-----------------------------------------------------------------
           IF  FLG-CTLFILE-OPEN-01  =  CNS-ON
           THEN
             CLOSE  CTL-FILE01
             MOVE  CNS-OFF              TO  FLG-CTLFILE-OPEN-01
           ELSE
             CONTINUE
           END-IF
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  CNS-PGM-ID":ctlファイル01オープンフラグ=["
      D                       FLG-CTLFILE-OPEN-01"]"
      D    DISPLAY  CNS-PGM-ID":ctlファイル02オープンフラグ=["
      D                       FLG-CTLFILE-OPEN-02"]"
      *-----------------------------------------------------------------
           IF  FLG-CTLFILE-OPEN-02  =  CNS-ON
           THEN
             CLOSE  CTL-FILE02
             MOVE  CNS-OFF              TO  FLG-CTLFILE-OPEN-02
           ELSE
             CONTINUE
           END-IF
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  CNS-PGM-ID":ctlファイル02オープンフラグ=["
      D                       FLG-CTLFILE-OPEN-02"]"
      D    DISPLAY  CNS-PGM-ID":ctlファイル03オープンフラグ=["
      D                       FLG-CTLFILE-OPEN-03"]"
      *-----------------------------------------------------------------
           IF  FLG-CTLFILE-OPEN-03  =  CNS-ON
           THEN
             CLOSE  CTL-FILE03
             MOVE  CNS-OFF              TO  FLG-CTLFILE-OPEN-03
           ELSE
             CONTINUE
           END-IF
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  CNS-PGM-ID":ctlファイル03オープンフラグ=["
      D                       FLG-CTLFILE-OPEN-03"]"
      D    DISPLAY  CNS-PGM-ID":ctlファイル04オープンフラグ=["
      D                       FLG-CTLFILE-OPEN-04"]"
      *-----------------------------------------------------------------
           IF  FLG-CTLFILE-OPEN-04  =  CNS-ON
           THEN
             CLOSE  CTL-FILE04
             MOVE  CNS-OFF              TO  FLG-CTLFILE-OPEN-04
           ELSE
             CONTINUE
           END-IF
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  CNS-PGM-ID":ctlファイル04オープンフラグ=["
      D                       FLG-CTLFILE-OPEN-04"]"
      D    DISPLAY  CNS-PGM-ID":ctlファイル05オープンフラグ=["
      D                       FLG-CTLFILE-OPEN-05"]"
      *-----------------------------------------------------------------
           IF  FLG-CTLFILE-OPEN-05  =  CNS-ON
           THEN
             CLOSE  CTL-FILE05
             MOVE  CNS-OFF              TO  FLG-CTLFILE-OPEN-05
           ELSE
             CONTINUE
           END-IF
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  CNS-PGM-ID":ctlファイル05オープンフラグ=["
      D                       FLG-CTLFILE-OPEN-05"]"
      D    DISPLAY  CNS-PGM-ID":ctlファイル06オープンフラグ=["
      D                       FLG-CTLFILE-OPEN-06"]"
      *-----------------------------------------------------------------
           IF  FLG-CTLFILE-OPEN-06  =  CNS-ON
           THEN
             CLOSE  CTL-FILE06
             MOVE  CNS-OFF              TO  FLG-CTLFILE-OPEN-06
           ELSE
             CONTINUE
           END-IF
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  CNS-PGM-ID":ctlファイル06オープンフラグ=["
      D                       FLG-CTLFILE-OPEN-05"]"
      D    DISPLAY  CNS-PGM-ID":明細リストファイルオープンフラグ=["
      D                       FLG-RSTFILE-OPEN"]"
      *-----------------------------------------------------------------
           IF  FLG-RSTFILE-OPEN  =  CNS-ON
           THEN
             CLOSE  RST-FILE
             MOVE  CNS-OFF              TO  FLG-RSTFILE-OPEN
           ELSE
             CONTINUE
           END-IF
      *--------------------<DEBUG>--------------------------------------
      D    DISPLAY  CNS-PGM-ID":明細リストファイルオープンフラグ=["
      D                       FLG-RSTFILE-OPEN"]"
      D    DISPLAY  CNS-PGM-ID":エラー検知プログラム名          =["
      D             ERR-PGM-ID          OF  PARM-SCZY1170-ARG1"]"
      D    DISPLAY  CNS-PGM-ID":ポジション                      =["
      D             ERR-POS             OF  PARM-SCZY1170-ARG1"]"
      D    DISPLAY  CNS-PGM-ID":リターンコード                  =["
      D             RTN-CD              OF  PARM-SCZY1170-ARG1"]"
      D    DISPLAY  CNS-PGM-ID":詳細リターンコード              =["
      D             DETAIL-RTN-CD       OF  PARM-SCZY1170-ARG1"]"
      D    DISPLAY  CNS-PGM-ID":詳細リターンコードデコードフラグ=["
      D             DETAIL-RTN-CD-FLG   OF  PARM-SCZY1170-ARG1"]"
      D    DISPLAY  CNS-PGM-ID":フリーメッセージ                =["
      D             FREE-MSG            OF  PARM-SCZY1170-ARG1"]"
      D    DISPLAY  CNS-PGM-ID":PARM-RTNPKG            =["
      D             PARM-RTNPKG                      "]"
      D    DISPLAY  CNS-PGM-ID":***  CALL SCZY1170 START  ***"
      *-----------------------------------------------------------------
           CALL  "SCZY1170"             USING  PARM-SCZY1170-INOUT
                                               PARM-RTNPKG
           MOVE  PARM-RTNPKG            TO  PARM-SDYJ2301-ARG2
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  CNS-PGM-ID":***  CALL SCZY1170 END  ***"
      D    DISPLAY  CNS-PGM-ID":COUNTER OF PARM-RTNPKG=["
      D                         COUNTER OF PARM-RTNPKG"]"
      D    DISPLAY  CNS-PGM-ID":PARM-RTNPKG=["
      D                         PARM-RTNPKG"]"
      D    DISPLAY  CNS-PGM-ID":PARM-SDYJ2301-ARG2=["
      D                         PARM-SDYJ2301-ARG2"]"
      D    DISPLAY  CNS-PGM-ID":RTN-CD(SCZY1170)=["
      D             RTN-CD OF PARM-RTNPKG(COUNTER OF PARM-RTNPKG)"]"
      D    DISPLAY  CNS-PGM-ID":*****   エラー処理  END   *****"
      D    DISPLAY  CNS-PGM-ID":◇◆◇◆◇   SDYJ2301  END   ◇◆◇◆◇"
      *-----------------------------------------------------------------
           CONTINUE.
       ERR-EXT.
           GOBACK.
