      ******************************************************************
      *$Header: $
      ******************************************************************
      *
      *     システムＩＤ   : T-STAR
      *     システム名称   : 新有価証券バックオフィスシステム
      *     プログラム名称 : 最適化対象ファイル作成処理
      *     処理概要       : 最適化管理明細テーブルから最適化対象となる
      *                    : テーブルIDを抽出し、最適化対象ファイルへ
      *                    : 出力する。
      *     引数           : IN  最適化MAX容量
      *                    : IN  基準日
      *     改訂履歴
      *     年月日     区分  所属       担当者  内容
      *     ---------- ----  ---------  ------  ------------------------
      *     20090303   新規  SCS        呉聞杰  新規作成
      *     20130204   修正  GUT        高楽　　テーマ3262-1:ＤＢサーバ
      *                                         領域の最適化処理復活
      ******************************************************************
       IDENTIFICATION         DIVISION.
       PROGRAM-ID.    MDYB1401.
       AUTHOR.        Nomura.
       DATE-WRITTEN.  09-03-03.
       DATE-COMPILED.
      ******************************************************************
      *
      *                 環  境  部
      *
      ******************************************************************
       ENVIRONMENT            DIVISION.
       CONFIGURATION          SECTION.
       SOURCE-COMPUTER.       L1000V.
      *SOURCE-COMPUTER.       L1000V  WITH  DEBUGGING  MODE.
       OBJECT-COMPUTER.       RP5470.
       SPECIAL-NAMES.
       ENVIRONMENT-NAME               ENV-NAME
       ENVIRONMENT-VALUE              ENV-VALUE.
       INPUT-OUTPUT           SECTION.
       FILE-CONTROL.
           SELECT  SAITEKI-FILE   ASSIGN  TO  FILENAME
                   ORGANIZATION IS LINE SEQUENTIAL
                   FILE          STATUS  IS  ST-SAITEKIFILE.
      ******************************************************************
      *
      *                 デ  ー  タ  部
      *
      ******************************************************************
       DATA                   DIVISION.
       FILE                   SECTION.
       FD  SAITEKI-FILE
                         LABEL      RECORD    STANDARD.
       01  SAITEKIFILE-REC.
         05  SAITEKI-TABLE-ID      PIC  X(20).
         05  FILLER-0              PIC  X(01).
         05  SAITEKI-PAR-NAME      PIC  X(30).
         05  FILLER-1              PIC  X(01).
         05  SAITEKI-START-TIME    PIC  X(14).
         05  FILLER-2              PIC  X(01).
         05  SAITEKI-END-TIME      PIC  X(14).
      *  05  FILLER                PIC  X(01)  VALUE  X'0A'.
      ******************************************************************
      *                   作業場所節
      ******************************************************************
       WORKING-STORAGE        SECTION.
       01  IDNAME                  PIC  X(80)  VALUE
       "$Id: $".
      ******************************************************************
      *                    ファイル  エリア
      ******************************************************************
       01  FILE-AREA.
         05  FILENAME              PIC  X(256).
         05  FILE-PATH             PIC  X(256).
         05  ST-SAITEKIFILE        PIC  X(02).
      ******************************************************************
      *                コンスタント  エリア
      ******************************************************************
       01  CONST-AREA.
      *----------  プログラムＩＤ
         05  CNS-PROGRAM-ID        PIC  X(08)  VALUE "MDYB1401".
      *----------  最適化管理テーブル
      *  05  CNS-TBL-TKDYAA53      PIC  X(08)  VALUE "TKDYAA53".
      *----------  最適化管理明細テーブル
         05  CNS-TBL-TKDYAA56      PIC  X(08)  VALUE "TKDYAA56".
      *----------  リターンコード: 正常終了
         05  CNS-RET-CD-NORMAL     PIC  X(03)  VALUE "000".
      *----------  リターンコード: システムエラー（Oracle）
         05  CNS-RET-CD-ORAERR     PIC  X(03)  VALUE "900".
      *----------  リターンコード: システムエラー（Oracle以外）
         05  CNS-RET-CD-SYSERR     PIC  X(03)  VALUE "901".
         05  CNS-SQL-NORMAL        PIC  S9(04)  COMP-3 VALUE +0000.
         05  CNS-SQL-NOTFOUND      PIC  S9(04)  COMP-3 VALUE +1403.
      *----------  OPEN FLG
         05  CNS-ON                PIC  9(01)  VALUE  1.
      *----------  CLOSE FLG
         05  CNS-OFF               PIC  9(01)  VALUE  0.
      *----------  ファイルアクセスエラー（OPEN）
         05  CNS-RET-200           PIC  X(03)  VALUE  "200".
      *----------  ファイルアクセスエラー（WRITE）
         05  CNS-RET-220           PIC  X(03)  VALUE  "220".
      *----------  ファイルアクセスエラー（CLOSE）
         05  CNS-RET-230           PIC  X(03)  VALUE  "230".
      ******************************************************************
      *                   ワーク  エリア
      ******************************************************************
       01  WK-AREA.
      *----------  戻り値
         05  WK-RTN-STS            PIC  9(02).
      *----------  基準日
         05  WK-KJN-YMD            PIC  X(08).
      *  05  WK-TAB-TKDYAA53       PIC  X(13).
         05  WK-TAB-TKDYAA56       PIC  X(13).
         05  WK-SAITEKI-MAX-YOURYOU-9   PIC  9(13).
         05  WK-SAITEKI-MAX-YOURYOU     PIC  X(13).
      *  05  WK-NO-SAITEKI-COUNT   PIC  9(08).
         05  WK-PROGRAM-ID         PIC  X(16).
         05  WK-TBL-YOURYOU        PIC  9(18).
         05  WK-SQL-CONNECT        PIC  X(89).
         05  WK-COMMIT-RELEASE     PIC  X(15).
         05  I                     PIC  9(01).
      *----------  最適化対象フラグ
         05  WK-SAITEKI-FLG        PIC  9(01).
      *----------  ワーク処理月配列
         05  WK-SYORIGETU          OCCURS 4
                                   PIC  X(06).
      *----------  パーティション名の最後文字列
         05  WK-PARTITION-NAME     PIC  X(06).
      *----------  ワーク日付
         05  WK-HIDUKE             PIC  9(08).
      *
      *----------  ワークRTNパッケージ
       01  WK-KYOUTUU-RTNPKG.
         05  WK-PARM-RTNPKG.
           COPY "CZRTNPACKAGE.cpy".
      ******************************************************************
      *                      フラグエリア
      ******************************************************************
       01  FLAG-AREA.
         05  FLG-FILE-OPEN         PIC  9(01).
      *----------  Oracle接続判定フラグ
         05  FLG-ORA-CONNECT       PIC  9(01).
      *----------  カーソルデータ終了フラグ
      *  05  FLG-CLOSE1            PIC  9(01).
         05  FLG-CLOSE2            PIC  9(01).
         05  FLG-FETCH             PIC  9(01).
      ******************************************************************
      *                サブプログラム             パラメ−タ  エリア
      ******************************************************************
      *----------  バッチ開始メッセージ出力ルーチン
       01  PARM-SCZY7010-INOUT.
           COPY  "SCZY7010.cpy".
      *
      *----------  バッチ終了メッセージ出力ルーチン
       01  PARM-SCZY7020-INOUT.
           COPY "SCZY7020.cpy".
      *
      *----------  バッチ引数一括取得ルーチン
       01  PARM-SCZY7090-INOUT.
           COPY  "SCZY7090.cpy".
      *
      *----------  バッチＤＢ接続情報取得ルーチン
       01  PARM-SCZY7100-INOUT.
           COPY  "SCZY7100.cpy".
      *
      *----------  リターンパッケージセットルーチン
       01  PARM-SCZY1170-INOUT.
      *----------  リターンパッケージセットルーチンコピー句
           COPY  "SCZY1170.cpy".
       01  PARM-SCZY1170-RTNPKG.
         05  PARM-SCZY1170-ARG2.
      *----------  RTNパッケージ
           COPY  "CZRTNPACKAGE.cpy".
      *
      *----------  テーブルID取得ルーチン
       01  PARM-SCZY1160-INOUT.
           COPY  "SCZY1160.cpy".
      *
      *----------  カレンダールーチン
       01  PARM-SCZY1020-INOUT.
           COPY  "SCZY1020.cpy".
      ******************************************************************
      *    SQL通信, ORACLE通信,ホスト変数定義 エリア
      ******************************************************************
           EXEC SQL INCLUDE  SQLCA             END-EXEC.
           EXEC SQL BEGIN DECLARE  SECTION     END-EXEC.
       01  ORA-WORKING-ITEMS.
      *----------  ORACLE接続
         05  H-ORA-USER            PIC  X(80).
      *  05  SQLSTMT1              PIC  X(400)  VARYING.
         05  SQLSTMT2              PIC  X(400)  VARYING.
      *  05  SQLSTMT3              PIC  X(400)  VARYING.
      *  05  SQLSTMT4              PIC  X(600)  VARYING.
         05  SQLSTMT4              PIC  X(1100) VARYING.
         05  H-TBL-ID              PIC  X(20).
         05  H-PARTITION-NAME      PIC  X(30).
         05  H-TBL-YOURYOU         PIC  9(13).
         05  H-PRIO                PIC  9(02).
         05  H-SAITEKI-JIKOU-KBN   PIC  X(01).
           EXEC SQL END  DECLARE   SECTION     END-EXEC.
      ******************************************************************
      *
      *        手  続  き  部
      *
      ******************************************************************
       PROCEDURE              DIVISION.
      ******************************************************************
      *                      MDYB1401処理
      ******************************************************************
       MDYB1401-RTN           SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "****  MDYB1401-RTN  START  ****"
      *-----------------------------------------------------------------
      *----------  前処理
           PERFORM  INIT-RTN
      *----------  主処理
           PERFORM  MAIN-RTN
      *----------  後処理
           PERFORM  END-RTN.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "****  MDYB1401-RTN  END  ****".
      *-----------------------------------------------------------------
       MDYB1401-EXT.
           STOP RUN WK-RTN-STS.
      ******************************************************************
      *               前処理
      ******************************************************************
       INIT-RTN               SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "***  INIT-RTN  START  ***"
      *-----------------------------------------------------------------
           INITIALIZE   SAITEKIFILE-REC
                        FILE-AREA
                        WK-AREA
                        WK-KYOUTUU-RTNPKG
                        ORA-WORKING-ITEMS
                        FLAG-AREA
                        PARM-SCZY7010-INOUT
                        PARM-SCZY7020-INOUT
                        PARM-SCZY7090-INOUT
                        PARM-SCZY7100-INOUT
                        PARM-SCZY1160-INOUT
                        PARM-SCZY1170-INOUT
                        PARM-SCZY1020-INOUT
                        PARM-SCZY1170-RTNPKG
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "SAITEKIFILE-REC    =["SAITEKIFILE-REC"]"
      D    DISPLAY  "FILE-AREA          =["FILE-AREA"]"
      D    DISPLAY  "WK-AREA            =["WK-AREA"]"
      D    DISPLAY  "WK-KYOUTUU-RTNPKG  =["WK-KYOUTUU-RTNPKG"]"
      D    DISPLAY  "ORA-WORKING-ITEMS  =["ORA-WORKING-ITEMS"]"
      D    DISPLAY  "FLAG-AREA          =["FLAG-AREA"]"
      D    DISPLAY  "PARM-SCZY7010-INOUT=["PARM-SCZY7010-INOUT"]"
      D    DISPLAY  "PARM-SCZY7020-INOUT=["PARM-SCZY7020-INOUT"]"
      D    DISPLAY  "PARM-SCZY7090-INOUT=["PARM-SCZY7090-INOUT"]"
      D    DISPLAY  "PARM-SCZY7100-INOUT=["PARM-SCZY7100-INOUT"]"
      D    DISPLAY  "PARM-SCZY1160-INOUT=["PARM-SCZY1160-INOUT"]"
      D    DISPLAY  "PARM-SCZY1170-INOUT=["PARM-SCZY1170-INOUT"]"
      D    DISPLAY  "PARM-SCZY1020-INOUT=["PARM-SCZY1020-INOUT"]"
      D    DISPLAY  "PARM-SCZY1170-RTNPKG=["PARM-SCZY1170-RTNPKG"]"
      *-----------------------------------------------------------------
      *----------  バッチ開始メッセージ出力ルーチン処理
           PERFORM  SCZY7010-RTN
      *----------  バッチ引数取得ルーチン処理
           PERFORM  SCZY7090-RTN
      *----------  バッチ引数一括取得ルーチン
           PERFORM  SCZY7100-RTN
      *----------  DB接続処理
           PERFORM  DB-CONNECT-RTN
      *----------  テーブルID取得ルーチン処理
           PERFORM  SCZY1160-RTN.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*****  INIT-RTN  END  *****".
      *-----------------------------------------------------------------
       INIT-EXT.
           EXIT.
      ******************************************************************
      *                 バッチ開始メッセージ出力ルーチン処理
      ******************************************************************
       SCZY7010-RTN           SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*****  SCZY7010処理  START  *****"
      *-----------------------------------------------------------------
           MOVE  CNS-PROGRAM-ID
             TO  PGM-ID                      OF PARM-SCZY7010-INOUT
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "PGM-ID                  OF PARM-SCZY7010-INOUT=["
      D              PGM-ID                  OF PARM-SCZY7010-INOUT"]"
      D    DISPLAY  "CALL バッチ開始メッセージ出力ルーチSCZY7010 開始"
      *-----------------------------------------------------------------
           CALL "SCZY7010"                USING  PARM-SCZY7010-INOUT.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "CALL バッチ開始メッセージ出力ルーチSCZY7010 終了"
      D    DISPLAY  "*****  SCZY7010処理  END  *****".
      *-----------------------------------------------------------------
       SCZY7010-EXT.
           EXIT.
      ******************************************************************
      *                 バッチ引数一括取得ルーチン
      ******************************************************************
       SCZY7090-RTN           SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*****  SCZY7090処理  START  *****"
      *-----------------------------------------------------------------
           MOVE  2
             TO  ARG-NUM                     OF PARM-SCZY7090-INOUT
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "ARG-NUM                 OF PARM-SCZY7090-INOUT=["
      D              ARG-NUM                 OF PARM-SCZY7090-INOUT"]"
      D    DISPLAY  "CALL バッチ引数一括取得ルーチンSCZY7090 開始"
      *-----------------------------------------------------------------
           CALL  "SCZY7090"               USING  PARM-SCZY7090-INOUT
                                                 WK-KYOUTUU-RTNPKG
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "CALL バッチ引数一括取得ルーチンSCZY7090 終了"
      D    DISPLAY  "RTN-CD                  OF PARM-SCZY7090-RTNPKG=["
      D              RTN-CD                  OF WK-KYOUTUU-RTNPKG
      D                             (COUNTER OF WK-KYOUTUU-RTNPKG)"]"
      *-----------------------------------------------------------------
           IF  RTN-CD                        OF WK-KYOUTUU-RTNPKG
                                    (COUNTER OF WK-KYOUTUU-RTNPKG)
               = CNS-RET-CD-NORMAL
           THEN
               MOVE  ARG-STRING              OF PARM-SCZY7090-ARG2(1)
                 TO  WK-SAITEKI-MAX-YOURYOU
               MOVE  FUNCTION NUMVAL(WK-SAITEKI-MAX-YOURYOU)
                 TO  WK-SAITEKI-MAX-YOURYOU-9
               MOVE  ARG-STRING              OF PARM-SCZY7090-ARG2(2)
                 TO  WK-KJN-YMD
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "最適化MAX容量 =["WK-SAITEKI-MAX-YOURYOU-9"]"
      D    DISPLAY  "基準日        =["WK-KJN-YMD"]"
      *-----------------------------------------------------------------
           ELSE
      *----------  エラー検知プログラム名
               MOVE  CNS-PROGRAM-ID
                 TO  ERR-PGM-ID              OF PARM-SCZY1170-ARG1
      *----------  ポジション
               MOVE  "0001"
                 TO  ERR-POS                 OF PARM-SCZY1170-ARG1
      *----------  リターンコード
               MOVE  CNS-RET-CD-SYSERR
                 TO  RTN-CD                  OF PARM-SCZY1170-ARG1
               MOVE  WK-KYOUTUU-RTNPKG       TO  PARM-SCZY1170-RTNPKG
               PERFORM  ERR-RTN
           END-IF.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*****  SCZY7090処理  END  *****".
      *-----------------------------------------------------------------
       SCZY7090-EXT.
           EXIT.
      ******************************************************************
      *             バッチＤＢ接続情報取得ルーチン処理
      ******************************************************************
       SCZY7100-RTN           SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*****  SCZY7100処理  START  *****"
      *-----------------------------------------------------------------
           INITIALIZE  WK-KYOUTUU-RTNPKG
           MOVE  "C000"
             TO  RIYO-CMP-CD                 OF PARM-SCZY7100-INOUT
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "RIYO-CMP-CD             OF PARM-SCZY7100-INOUT=["
      D              RIYO-CMP-CD             OF PARM-SCZY7100-INOUT"]"
      D    DISPLAY  "CALL バッチＤＢ接続情報取得ルーチンSCZY7100 開始"
      *-----------------------------------------------------------------
           CALL "SCZY7100"               USING  PARM-SCZY7100-INOUT
                                                WK-KYOUTUU-RTNPKG
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "CALL バッチＤＢ接続情報取得ルーチンSCZY7100 終了"
      D    DISPLAY  "RTN-CD                  OF PARM-SCZY7100-RTNPKG=["
      D              RTN-CD                  OF WK-KYOUTUU-RTNPKG
      D                             (COUNTER OF WK-KYOUTUU-RTNPKG)"]"
      *-----------------------------------------------------------------
           IF  RTN-CD                        OF WK-KYOUTUU-RTNPKG
                                    (COUNTER OF WK-KYOUTUU-RTNPKG)
               NOT = CNS-RET-CD-NORMAL
           THEN
      *----------  エラー検知プログラム名
               MOVE  CNS-PROGRAM-ID
                 TO  ERR-PGM-ID              OF PARM-SCZY1170-ARG1
      *----------  ポジション
               MOVE  "0002"
                 TO  ERR-POS                 OF PARM-SCZY1170-ARG1
      *----------  リターンコード
               MOVE  CNS-RET-CD-SYSERR
                 TO  RTN-CD                  OF PARM-SCZY1170-ARG1
               MOVE  WK-KYOUTUU-RTNPKG       TO  PARM-SCZY1170-RTNPKG
               PERFORM  ERR-RTN
           END-IF.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*****  SCZY7100処理  END  *****".
      *-----------------------------------------------------------------
       SCZY7100-EXT.
           EXIT.
      ******************************************************************
      *                 ＤＢ接続処理
      ******************************************************************
       DB-CONNECT-RTN         SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*****  ＤＢ接続処理  START  *****"
      *-----------------------------------------------------------------
           EXEC SQL
               WHENEVER SQLERROR CONTINUE
           END-EXEC
           MOVE  DB-SETUZOKU-JYOUHOU         OF PARM-SCZY7100-ARG2
             TO  H-ORA-USER
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "H-ORA-USER=["H-ORA-USER"]"
      *-----------------------------------------------------------------
           EXEC SQL
               CONNECT :H-ORA-USER
           END-EXEC
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "SQLCODE=["SQLCODE"]"
      *-----------------------------------------------------------------
           IF  SQLCODE = CNS-SQL-NORMAL
           THEN
      *----------  ORACLE接続成功
               MOVE  CNS-ON                  TO  FLG-ORA-CONNECT
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "FLG-ORA-CONNECT=["FLG-ORA-CONNECT"]"
      D    DISPLAY  "ORACLE接続成功"
      *-----------------------------------------------------------------
           ELSE
               STRING  "CONNECT :"
                       H-ORA-USER
                       DELIMITED BY SIZE
                       INTO  WK-SQL-CONNECT
      *----------  エラー検知プログラム名
               MOVE  CNS-PROGRAM-ID
                 TO  ERR-PGM-ID              OF PARM-SCZY1170-ARG1
      *----------  ポジション
               MOVE  "0003"
                 TO  ERR-POS                 OF PARM-SCZY1170-ARG1
      *----------  リターンコード
               MOVE  CNS-RET-CD-ORAERR
                 TO  RTN-CD                  OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
               MOVE  SQLCODE
                 TO  DETAIL-RTN-CD           OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
               MOVE  "1"
                 TO  DETAIL-RTN-CD-FLG       OF PARM-SCZY1170-ARG1
      *----------  フリーメッセージ
               MOVE  WK-SQL-CONNECT
                 TO  FREE-MSG                OF PARM-SCZY1170-ARG1
               PERFORM  ERR-RTN
           END-IF.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*****  ＤＢ接続処理  END  *****".
      *-----------------------------------------------------------------
       DB-CONNECT-EXT.
           EXIT.
      ******************************************************************
      *                 テーブルID取得処理
      ******************************************************************
       SCZY1160-RTN           SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*****  SCZY1160処理  START  *****"
      *-----------------------------------------------------------------
           INITIALIZE  WK-KYOUTUU-RTNPKG
      *----------  利用会社コード
           MOVE  "C000"
             TO  RIYO-CMP-CD                 OF PARM-SCZY1160-ARG1
      *---------- テーブルID
      *    MOVE  CNS-TBL-TKDYAA53
           MOVE  CNS-TBL-TKDYAA56
             TO  TBL-ID                      OF PARM-SCZY1160-ARG1(1)
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "RIYO-CMP-CD             OF PARM-SCZY1160-ARG1=["
      D              RIYO-CMP-CD             OF PARM-SCZY1160-ARG1"]"
      D    DISPLAY  "TBL-ID                  OF PARM-SCZY1160-ARG1=["
      D              TBL-ID                  OF PARM-SCZY1160-ARG1(1)"]"
      D    DISPLAY  "CALL テーブルID取得ルーチンSCZY1160 開始"
      *-----------------------------------------------------------------
           CALL  "SCZY1160"               USING  PARM-SCZY1160-INOUT
                                                 WK-KYOUTUU-RTNPKG
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "CALL テーブルID取得ルーチンSCZY1160 終了"
      D    DISPLAY  "RTN-CD                  OF PARM-SCZY1160-RTNPKG=["
      D              RTN-CD                  OF WK-KYOUTUU-RTNPKG
      D                             (COUNTER OF WK-KYOUTUU-RTNPKG)"]"
      *-----------------------------------------------------------------
           IF  RTN-CD                        OF WK-KYOUTUU-RTNPKG
                                    (COUNTER OF WK-KYOUTUU-RTNPKG)
               = CNS-RET-CD-NORMAL
           THEN
               MOVE  HENSYUGO-TBL-ID         OF PARM-SCZY1160-ARG2(1)
      *          TO  WK-TAB-TKDYAA53
                 TO  WK-TAB-TKDYAA56
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "WK-TAB-TKDYAA56=["WK-TAB-TKDYAA56"]"
      *-----------------------------------------------------------------
           ELSE
      *----------  エラー検知プログラム名
               MOVE  CNS-PROGRAM-ID
                 TO  ERR-PGM-ID              OF PARM-SCZY1170-ARG1
      *----------  ポジション
               MOVE  "0004"
                 TO  ERR-POS                 OF PARM-SCZY1170-ARG1
      *----------  リターンコード
               MOVE  CNS-RET-CD-SYSERR
                 TO  RTN-CD                  OF PARM-SCZY1170-ARG1
               MOVE  WK-KYOUTUU-RTNPKG       TO  PARM-SCZY1170-RTNPKG
               PERFORM  ERR-RTN
           END-IF.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*****  SCZY1160処理  END  *****".
      *-----------------------------------------------------------------
       SCZY1160-EXT.
           EXIT.
      ******************************************************************
      *               主処理
      ******************************************************************
       MAIN-RTN               SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "****  MAIN-RTN  START  ****"
      *D    DISPLAY  "****  未処理テーブル件数取得処理  START  ****"
      **-----------------------------------------------------------------
      **----------  カーソル1をオープンする
      *     PERFORM  CURSOR1-OPEN-RTN
      **----------  カーソル1をフェッチする
      *     PERFORM  CURSOR1-FETCH-RTN
      **----------  カーソル1をクロースする
      *     PERFORM  CURSOR1-CLOSE-RTN
      **-------------------<DEBUG>---------------------------------------
      *D    DISPLAY  "****  未処理テーブル件数取得処理  END  ****"
      *D    DISPLAY  "未処理テーブル件数 =["WK-NO-SAITEKI-COUNT"]"
      **-----------------------------------------------------------------
      *     IF  WK-NO-SAITEKI-COUNT = 0
      *     THEN
      **----------  最適化管理テーブルを初期化処理
      *         PERFORM  INIT-TKDYAA53-RTN
      *     ELSE
      **-------------------<DEBUG>---------------------------------------
      *D    DISPLAY  "処理継続"
      **-----------------------------------------------------------------
      *         CONTINUE
      *     END-IF
      *----------  テーブル容量更新処理
           PERFORM  UPD-TBL-YOURYOU-RTN
           MOVE  FUNCTION NUMVAL(WK-KJN-YMD)
             TO  WK-HIDUKE
           MOVE  WK-KJN-YMD(1:6)
             TO  WK-SYORIGETU(1)
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "ワーク日付 = ["WK-HIDUKE"]"
      D    DISPLAY  "ワーク処理月配列(1) = ["
      D              WK-SYORIGETU(1)"]"
      *-----------------------------------------------------------------
           PERFORM VARYING I FROM 2 BY 1
             UNTIL I > 4
      *----------  カレンダールーチン処理
             PERFORM  SCZY1020-RTN
           END-PERFORM
      *----------  環境変数から、SAITEKIファイルのパスを取得する
           PERFORM  GET-PATH-RTN
      *----------  最適化対象ファイルをオーペンする
           PERFORM  OPEN-FILE-RTN
           MOVE  0  TO  WK-TBL-YOURYOU
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "****  テーブル容量取得処理  START  ****"
      *-----------------------------------------------------------------
      *----------  カーソル2をオープンする
           PERFORM  CURSOR2-OPEN-RTN
      *----------  カーソル2をフェッチする
           PERFORM  CURSOR2-FETCH-RTN
      *----------  カーソル2をクロースする
           PERFORM  CURSOR2-CLOSE-RTN
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "****  テーブル容量取得処理  END  ****"
      *-----------------------------------------------------------------
      *----------  ファイルをクロースする
           PERFORM  CLOSE-FILE-RTN.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "****  MAIN-RTN  END  ****".
      *-----------------------------------------------------------------
       MAIN-EXT.
           EXIT.
      ******************************************************************
      *                    カレンダールーチン処理
      ******************************************************************
       SCZY1020-RTN           SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*****  SCZY1020処理  START  *****"
      *-----------------------------------------------------------------
           INITIALIZE  WK-KYOUTUU-RTNPKG
           MOVE  "3"
             TO  IXCAL-FUNCTION              OF PARM-SCZY1020-INOUT
           MOVE  WK-HIDUKE
             TO  IXCAL-KJN-YMD-1             OF PARM-SCZY1020-INOUT
           MOVE  "1"
             TO  IXCAL-COMP-BASE             OF PARM-SCZY1020-INOUT
           MOVE  "2"
             TO  IXCAL-ZENGO-KBN-1           OF PARM-SCZY1020-INOUT
           MOVE  "0"
             TO  IXCAL-ZENGO-KBN-2           OF PARM-SCZY1020-INOUT
           MOVE  "2"
             TO  IXCAL-TANI-KBN              OF PARM-SCZY1020-INOUT
           MOVE  1
             TO  IXCAL-DAYS                  OF PARM-SCZY1020-INOUT
           MOVE  ZERO
             TO  IXCAL-KJN-YMD-2             OF PARM-SCZY1020-INOUT
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "機能区分=["
      D              IXCAL-FUNCTION          OF PARM-SCZY1020-INOUT"]"
      D    DISPLAY  "基準年月日１=["
      D              IXCAL-KJN-YMD-1         OF PARM-SCZY1020-INOUT"]"
      D    DISPLAY  "計算ベース区分=["
      D              IXCAL-COMP-BASE         OF PARM-SCZY1020-INOUT"]"
      D    DISPLAY  "前後区分１=["
      D              IXCAL-ZENGO-KBN-1       OF PARM-SCZY1020-INOUT"]"
      D    DISPLAY  "前後区分２=["
      D              IXCAL-ZENGO-KBN-2       OF PARM-SCZY1020-INOUT"]"
      D    DISPLAY  "単位区分=["
      D              IXCAL-TANI-KBN          OF PARM-SCZY1020-INOUT"]"
      D    DISPLAY  "日数=["
      D              IXCAL-DAYS              OF PARM-SCZY1020-INOUT"]"
      D    DISPLAY  "CALL カレンダールーチンSCZY1020 開始"
      *-----------------------------------------------------------------
           CALL "SCZY1020"               USING  PARM-SCZY1020-INOUT
                                                WK-KYOUTUU-RTNPKG
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "CALL カレンダールーチンSCZY1020 終了"
      D    DISPLAY  "RTN-CD                  OF PARM-SCZY1020-RTNPKG=["
      D              RTN-CD                  OF WK-KYOUTUU-RTNPKG
      D                             (COUNTER OF WK-KYOUTUU-RTNPKG)"]"
      *-----------------------------------------------------------------
           IF  RTN-CD                        OF WK-KYOUTUU-RTNPKG
                                    (COUNTER OF WK-KYOUTUU-RTNPKG)
               NOT = CNS-RET-CD-NORMAL
           THEN
      *----------  エラー検知プログラム名
               MOVE  CNS-PROGRAM-ID
                 TO  ERR-PGM-ID              OF PARM-SCZY1170-ARG1
      *----------  ポジション
               MOVE  "0005"
                 TO  ERR-POS                 OF PARM-SCZY1170-ARG1
      *----------  リターンコード
               MOVE  CNS-RET-CD-SYSERR
                 TO  RTN-CD                  OF PARM-SCZY1170-ARG1
               MOVE  WK-KYOUTUU-RTNPKG       TO PARM-SCZY1170-RTNPKG
               PERFORM  ERR-RTN
           ELSE
               MOVE  IXCAL-KJN-YMD-2         OF PARM-SCZY1020-INOUT
                 TO  WK-HIDUKE
               MOVE  IXCAL-KJN-YMD-2         OF PARM-SCZY1020-INOUT(1:6)
                 TO  WK-SYORIGETU(I)
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "ワーク日付 = ["WK-HIDUKE"]"
      D    DISPLAY  "ワーク処理月配列("I") = ["
      D              WK-SYORIGETU(I)"]"
      *-----------------------------------------------------------------
           END-IF.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*****  SCZY1020処理  END  *****".
      *-----------------------------------------------------------------
       SCZY1020-EXT.
           EXIT.
      *******************************************************************
      **                 カーソル1 OPEN処理
      *******************************************************************
      * CURSOR1-OPEN-RTN       SECTION.
      **------------------------DEBUG------------------------------------
      *D    DISPLAY  "*****  カーソル1 OPEN処理  START  *****"
      *D    DISPLAY  "WK-TAB-TKDYAA53=["WK-TAB-TKDYAA53"]"
      **-----------------------------------------------------------------
      **----------  ＳＱＬ文作成
      *     MOVE  1  TO  SQLSTMT1-LEN
      *     STRING  "SELECT "
      *             " COUNT(1) "
      *             " FROM "
      *             WK-TAB-TKDYAA53
      *             " WHERE "
      *             "SAITEKI_JIKOU_KBN = ' '"
      *         DELIMITED BY SIZE
      *         INTO  SQLSTMT1-ARR
      *         POINTER  SQLSTMT1-LEN
      **-------------------<DEBUG>---------------------------------------
      *D    DISPLAY  "SQLSTMT1-ARR =["SQLSTMT1-ARR"]"
      *D    DISPLAY  "SQLSTMT1-LEN =["SQLSTMT1-LEN"]"
      **-----------------------------------------------------------------
      **----------  ＳＱＬ文 PREPARE
      *     EXEC SQL
      *         PREPARE S01  FROM :SQLSTMT1
      *     END-EXEC
      **-------------------<DEBUG>---------------------------------------
      *D    DISPLAY  "SQLCODE(PREPARE1)=["SQLCODE"]"
      **-----------------------------------------------------------------
      *     IF  SQLCODE  NOT = CNS-SQL-NORMAL
      *     THEN
      **----------  エラー検知プログラム名
      *         MOVE  CNS-PROGRAM-ID
      *           TO  ERR-PGM-ID              OF PARM-SCZY1170-ARG1
      **----------  ポジション
      *         MOVE  "0005"
      *           TO  ERR-POS                 OF PARM-SCZY1170-ARG1
      **----------  リターンコード
      *         MOVE  CNS-RET-CD-ORAERR
      *           TO  RTN-CD                  OF PARM-SCZY1170-ARG1
      **----------  詳細リターンコード
      *         MOVE  SQLCODE
      *           TO  DETAIL-RTN-CD           OF PARM-SCZY1170-ARG1
      **----------  詳細リターンコードデコードフラグ
      *         MOVE  "1"
      *           TO  DETAIL-RTN-CD-FLG       OF PARM-SCZY1170-ARG1
      **----------  フリーメッセージ
      *         MOVE  SQLSTMT1-ARR
      *           TO  FREE-MSG                OF PARM-SCZY1170-ARG1
      *         PERFORM  ERR-RTN
      *     END-IF
      **----------  カーソル1 DECLARE
      *     EXEC SQL
      *         DECLARE CR1 CURSOR  FOR S01
      *     END-EXEC
      **-------------------<DEBUG>---------------------------------------
      *D    DISPLAY  "SQLCODE(DECLARE1)=["SQLCODE"]"
      **-----------------------------------------------------------------
      *     IF  SQLCODE  NOT = CNS-SQL-NORMAL
      *     THEN
      **----------  エラー検知プログラム名
      *         MOVE  CNS-PROGRAM-ID
      *           TO  ERR-PGM-ID              OF PARM-SCZY1170-ARG1
      **----------  ポジション
      *         MOVE  "0006"
      *           TO  ERR-POS                 OF PARM-SCZY1170-ARG1
      **----------  リターンコード
      *         MOVE  CNS-RET-CD-ORAERR
      *           TO  RTN-CD                  OF PARM-SCZY1170-ARG1
      **----------  詳細リターンコード
      *         MOVE  SQLCODE
      *           TO  DETAIL-RTN-CD           OF PARM-SCZY1170-ARG1
      **----------  詳細リターンコードデコードフラグ
      *         MOVE  "1"
      *           TO  DETAIL-RTN-CD-FLG       OF PARM-SCZY1170-ARG1
      **----------  フリーメッセージ
      *         MOVE  SQLSTMT1-ARR
      *           TO  FREE-MSG                OF PARM-SCZY1170-ARG1
      *         PERFORM  ERR-RTN
      *     END-IF
      **----------  カーソル1 OPEN
      *     EXEC SQL
      *         OPEN  CR1
      *     END-EXEC
      **-------------------<DEBUG>---------------------------------------
      *D    DISPLAY  "SQLCODE(OPEN1)=["SQLCODE"]"
      **-----------------------------------------------------------------
      *     IF  SQLCODE  NOT = CNS-SQL-NORMAL
      *     THEN
      **----------  エラー検知プログラム名
      *         MOVE  CNS-PROGRAM-ID
      *           TO  ERR-PGM-ID              OF PARM-SCZY1170-ARG1
      **----------  ポジション
      *         MOVE  "0007"
      *           TO  ERR-POS                 OF PARM-SCZY1170-ARG1
      **----------  リターンコード
      *         MOVE  CNS-RET-CD-ORAERR
      *           TO  RTN-CD                  OF PARM-SCZY1170-ARG1
      **----------  詳細リターンコード
      *         MOVE  SQLCODE
      *           TO  DETAIL-RTN-CD           OF PARM-SCZY1170-ARG1
      **----------  詳細リターンコードデコードフラグ
      *         MOVE  "1"
      *           TO  DETAIL-RTN-CD-FLG       OF PARM-SCZY1170-ARG1
      **----------  フリーメッセージ
      *         MOVE  SQLSTMT1-ARR
      *           TO  FREE-MSG                OF PARM-SCZY1170-ARG1
      *         PERFORM  ERR-RTN
      *     ELSE
      *         MOVE  CNS-ON                  TO  FLG-CLOSE1
      **-----------------------------------------------------------------
      *D    DISPLAY  "FLG-CLOSE1=["FLG-CLOSE1"]"
      **-----------------------------------------------------------------
      *     END-IF.
      **------------------------DEBUG------------------------------------
      *D    DISPLAY  "*****  カーソル1 OPEN処理  END  *****".
      **-----------------------------------------------------------------
      * CURSOR1-OPEN-EXT.
      *     EXIT.
      *******************************************************************
      **                 カーソル1 FETCH処理
      *******************************************************************
      * CURSOR1-FETCH-RTN      SECTION.
      **------------------------DEBUG------------------------------------
      *D    DISPLAY  "*****  カーソル1 FETCH処理  START  *****"
      **------------------------DEBUG------------------------------------
      **----------  カーソル1 FETCH
      *     EXEC SQL
      *         FETCH  CR1
      *          INTO :WK-NO-SAITEKI-COUNT
      *     END-EXEC
      **-------------------<DEBUG>---------------------------------------
      *D    DISPLAY  "SQLCODE(FETCH1)=["SQLCODE"]"
      **-----------------------------------------------------------------
      *     IF    SQLCODE = CNS-SQL-NORMAL
      *     THEN
      **-------------------<DEBUG>---------------------------------------
      *D    DISPLAY  "処理継続"
      **-----------------------------------------------------------------
      *         CONTINUE
      *     ELSE
      **----------  エラー検知プログラム名
      *         MOVE  CNS-PROGRAM-ID
      *           TO  ERR-PGM-ID              OF PARM-SCZY1170-ARG1
      **----------  ポジション
      *         MOVE  "0008"
      *           TO  ERR-POS                 OF PARM-SCZY1170-ARG1
      **----------  リターンコード
      *         MOVE  CNS-RET-CD-ORAERR
      *           TO  RTN-CD                  OF PARM-SCZY1170-ARG1
      **----------  詳細リターンコード
      *         MOVE  SQLCODE
      *           TO  DETAIL-RTN-CD           OF PARM-SCZY1170-ARG1
      **----------  詳細リターンコードデコードフラグ
      *         MOVE  "1"
      *           TO  DETAIL-RTN-CD-FLG       OF PARM-SCZY1170-ARG1
      **----------  フリーメッセージ
      *         MOVE  SQLSTMT1-ARR
      *           TO  FREE-MSG                OF PARM-SCZY1170-ARG1
      *         PERFORM  ERR-RTN
      *     END-IF.
      **------------------------DEBUG------------------------------------
      *D    DISPLAY  "*****  カーソル1 FETCH処理  END  *****".
      **-----------------------------------------------------------------
      * CURSOR1-FETCH-EXT.
      *     EXIT.
      *******************************************************************
      **                カーソル1 CLOSE処理
      *******************************************************************
      * CURSOR1-CLOSE-RTN      SECTION.
      **-------------------<DEBUG>---------------------------------------
      *D    DISPLAY  "*****  カーソル1 CLOSE処理  START  *****"
      **-----------------------------------------------------------------
      *     EXEC SQL
      *         CLOSE CR1
      *     END-EXEC
      **-------------------<DEBUG>---------------------------------------
      *D    DISPLAY  "SQLCODE(CLOSE1)=["SQLCODE"]"
      **-----------------------------------------------------------------
      *     IF  SQLCODE = CNS-SQL-NORMAL
      *     THEN
      *         MOVE  CNS-OFF            TO  FLG-CLOSE1
      **-------------------<DEBUG>---------------------------------------
      *D    DISPLAY  "FLG-CLOSE1=["FLG-CLOSE1"]"
      **-----------------------------------------------------------------
      *     ELSE
      **----------  エラー検知プログラム名
      *         MOVE  CNS-PROGRAM-ID
      *           TO  ERR-PGM-ID         OF PARM-SCZY1170-ARG1
      **----------  ポジション
      *         MOVE  "0009"
      *           TO  ERR-POS            OF PARM-SCZY1170-ARG1
      **----------  リターンコード
      *         MOVE  CNS-RET-CD-ORAERR
      *           TO  RTN-CD             OF PARM-SCZY1170-ARG1
      **----------  詳細リターンコード
      *         MOVE  SQLCODE
      *           TO  DETAIL-RTN-CD      OF PARM-SCZY1170-ARG1
      **----------  詳細リターンコードデコードフラグ
      *         MOVE  "1"
      *           TO  DETAIL-RTN-CD-FLG  OF PARM-SCZY1170-ARG1
      **----------  フリーメッセージ
      *         MOVE  SQLSTMT1-ARR
      *           TO  FREE-MSG           OF PARM-SCZY1170-ARG1
      *         PERFORM  ERR-RTN
      *     END-IF.
      **-------------------<DEBUG>---------------------------------------
      *D    DISPLAY  "*****  カーソル1 CLOSE処理  END  *****".
      **-----------------------------------------------------------------
      * CURSOR1-CLOSE-EXT.
      *     EXIT.
      *******************************************************************
      **                最適化管理テーブルを初期化処理
      *******************************************************************
      * INIT-TKDYAA53-RTN      SECTION.
      **------------------------DEBUG------------------------------------
      *D    DISPLAY  "***  最適化管理テーブルを初期化処理  START ***"
      **-----------------------------------------------------------------
      **----------  ＳＱＬ文作成
      *     MOVE  CNS-PROGRAM-ID    TO  WK-PROGRAM-ID
      *     MOVE  1  TO  SQLSTMT3-LEN
      **----------  ＳＱＬ文作成
      *     STRING  "UPDATE "
      *             WK-TAB-TKDYAA53
      *             " SET "
      *             " SAITEKI_JIKOU_KBN = ' ', "
      *             " KAISI_JIKAN = null, "
      *             " SYURYO_JIKAN = null, "
      *             " SYORI_YMD = 0, "
      *             " UPD_DATE = SYSDATE, "
      *             " UPD_LOGIN_CMP_CD = ' ', "
      *             " UPD_SID = ' ', "
      *             " UPD_PGMID = '"
      *             WK-PROGRAM-ID
      *             "'"
      *         DELIMITED BY SIZE
      *         INTO  SQLSTMT3-ARR
      *         POINTER  SQLSTMT3-LEN
      **-------------------<DEBUG>---------------------------------------
      *D    DISPLAY  "SQLSTMT3-ARR=["SQLSTMT3-ARR"]"
      *D    DISPLAY  "SQLSTMT3-LEN=["SQLSTMT3-LEN"]"
      **-----------------------------------------------------------------
      **----------  ＳＱＬ文 PREPARE
      *     EXEC SQL
      *         PREPARE S03  FROM :SQLSTMT3
      *     END-EXEC
      **-------------------<DEBUG>---------------------------------------
      *D    DISPLAY  "SQLCODE(PREPARE3)=["SQLCODE"]"
      **-----------------------------------------------------------------
      *     IF  SQLCODE  NOT = CNS-SQL-NORMAL
      *     THEN
      **----------  エラー検知プログラム名
      *         MOVE  CNS-PROGRAM-ID
      *           TO  ERR-PGM-ID              OF PARM-SCZY1170-ARG1
      **----------  ポジション
      *         MOVE  "0010"
      *           TO  ERR-POS                 OF PARM-SCZY1170-ARG1
      **----------  リターンコード
      *         MOVE  CNS-RET-CD-ORAERR
      *           TO  RTN-CD                  OF PARM-SCZY1170-ARG1
      **----------  詳細リターンコード
      *         MOVE  SQLCODE
      *           TO  DETAIL-RTN-CD           OF PARM-SCZY1170-ARG1
      **----------  詳細リターンコードデコードフラグ
      *         MOVE  "1"
      *           TO  DETAIL-RTN-CD-FLG       OF PARM-SCZY1170-ARG1
      **----------  フリーメッセージ
      *         MOVE  SQLSTMT3-ARR
      *           TO  FREE-MSG                OF PARM-SCZY1170-ARG1
      *         PERFORM  ERR-RTN
      *     END-IF
      *     EXEC SQL
      *         EXECUTE S03
      *     END-EXEC
      **-------------------<DEBUG>---------------------------------------
      *D    DISPLAY  "SQLCODE(UPD)=["SQLCODE"]"
      **-----------------------------------------------------------------
      *     IF  SQLCODE  NOT = CNS-SQL-NORMAL
      *     THEN
      **----------  エラー検知プログラム名
      *         MOVE  CNS-PROGRAM-ID
      *           TO  ERR-PGM-ID              OF PARM-SCZY1170-ARG1
      **----------  ポジション
      *         MOVE  "0011"
      *           TO  ERR-POS                 OF PARM-SCZY1170-ARG1
      **----------  リターンコード
      *         MOVE  CNS-RET-CD-ORAERR
      *           TO  RTN-CD                  OF PARM-SCZY1170-ARG1
      **----------  詳細リターンコード
      *         MOVE  SQLCODE
      *           TO  DETAIL-RTN-CD           OF PARM-SCZY1170-ARG1
      **----------  詳細リターンコードデコードフラグ
      *         MOVE  "1"
      *           TO  DETAIL-RTN-CD-FLG       OF PARM-SCZY1170-ARG1
      **----------  フリーメッセージ
      *         MOVE  SQLSTMT3-ARR
      *           TO  FREE-MSG                OF PARM-SCZY1170-ARG1
      *         PERFORM  ERR-RTN
      *     ELSE
      **-------------------<DEBUG>---------------------------------------
      *D    DISPLAY  "処理継続"
      **-----------------------------------------------------------------
      *         CONTINUE
      *     END-IF.
      **------------------------DEBUG------------------------------------
      *D    DISPLAY  "*****  最適化管理テーブルを初期化処理  END  *****".
      **-----------------------------------------------------------------
      * INIT-TKDYAA53-EXT.
      *     EXIT.
      ******************************************************************
      *                テーブル容量更新処理
      ******************************************************************
       UPD-TBL-YOURYOU-RTN    SECTION.
      *------------------------DEBUG------------------------------------
      D    DISPLAY  "***  テーブル容量更新処理  START ***"
      *-----------------------------------------------------------------
      *----------  ＳＱＬ文作成
           MOVE  CNS-PROGRAM-ID    TO  WK-PROGRAM-ID
           MOVE  1  TO  SQLSTMT4-LEN
      *----------  ＳＱＬ文作成
           STRING  "UPDATE "
      *            WK-TAB-TKDYAA53
                   WK-TAB-TKDYAA56
                   " A SET "
      *            " TBL_YOURYOU = ("
                   " TBL_YOURYOU = "
      *            " TRUNC((SELECT((NVL((SELECT SUM(B.BYTES) "
                   " TRUNC((NVL((SELECT B.BYTES "
                   " FROM USER_SEGMENTS B "
      *            " WHERE (B.SEGMENT_TYPE = 'TABLE' "
      *            " OR B.SEGMENT_TYPE = 'TABLE_PARTITION') "
                   " WHERE B.SEGMENT_TYPE = 'TABLE' "
                   " AND TRIM(B.SEGMENT_NAME) = TRIM(A.TBL_ID)), 0) "
                   " + "
      *            " (NVL((SELECT SUM(C.BYTES) "
                   " NVL((SELECT SUM(C.BYTES) "
                   " FROM USER_SEGMENTS C, USER_LOBS D "
                   " WHERE TRIM(D.TABLE_NAME) = TRIM(A.TBL_ID) "
      *            " AND TRIM(D.SEGMENT_NAME) = "
      *            " TRIM(C.SEGMENT_NAME)), 0))) "
                   " AND D.SEGMENT_NAME = C.SEGMENT_NAME "
                   " AND D.PARTITIONED = 'NO'), 0) "
                   " + "
                   " NVL((SELECT E.BYTES "
                   " FROM USER_SEGMENTS E "
                   " WHERE E.SEGMENT_TYPE = 'TABLE PARTITION' "
                   " AND TRIM(E.SEGMENT_NAME) = TRIM(A.TBL_ID) "
                   " AND TRIM(E.PARTITION_NAME) = "
                   " TRIM(A.PARTITION_NAME)), 0) "
                   " + "
                   " NVL((SELECT SUM(F.BYTES) "
                   " FROM USER_SEGMENTS F, USER_LOBS G, "
                   " USER_LOB_PARTITIONS H "
                   " WHERE TRIM(G.TABLE_NAME) = TRIM(A.TBL_ID) "
                   " AND G.PARTITIONED = 'YES' "
                   " AND H.TABLE_NAME = G.TABLE_NAME "
                   " AND H.LOB_NAME = G.SEGMENT_NAME "
                   " AND TRIM(H.PARTITION_NAME) = "
                   " TRIM(A.PARTITION_NAME) "
                   " AND F.SEGMENT_NAME = G.SEGMENT_NAME "
                   " AND F.PARTITION_NAME = "
                   " H.LOB_PARTITION_NAME), 0)) "
      *            " /(1024 * 1024) FROM DUAL), 0)), "
                   " /(1024 * 1024), 0), "
                   " UPD_DATE = SYSDATE, "
                   " UPD_LOGIN_CMP_CD = ' ', "
                   " UPD_SID = ' ', "
                   " UPD_PGMID = '"
                   WK-PROGRAM-ID
                   "'"
      *            " WHERE "
      *            " SAITEKI_JIKOU_KBN = ' '"
               DELIMITED BY SIZE
               INTO  SQLSTMT4-ARR
               POINTER  SQLSTMT4-LEN
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "SQLSTMT4-ARR=["SQLSTMT4-ARR"]"
      D    DISPLAY  "SQLSTMT4-LEN=["SQLSTMT4-LEN"]"
      *-----------------------------------------------------------------
      *----------  ＳＱＬ文 PREPARE
           EXEC SQL
               PREPARE S04  FROM :SQLSTMT4
           END-EXEC
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "SQLCODE(PREPARE4)=["SQLCODE"]"
      *-----------------------------------------------------------------
           IF  SQLCODE  NOT = CNS-SQL-NORMAL
               AND SQLCODE  NOT = CNS-SQL-NOTFOUND
           THEN
      *----------  エラー検知プログラム名
               MOVE  CNS-PROGRAM-ID
                 TO  ERR-PGM-ID              OF PARM-SCZY1170-ARG1
      *----------  ポジション
               MOVE  "0012"
                 TO  ERR-POS                 OF PARM-SCZY1170-ARG1
      *----------  リターンコード
               MOVE  CNS-RET-CD-ORAERR
                 TO  RTN-CD                  OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
               MOVE  SQLCODE
                 TO  DETAIL-RTN-CD           OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
               MOVE  "1"
                 TO  DETAIL-RTN-CD-FLG       OF PARM-SCZY1170-ARG1
      *----------  フリーメッセージ
               MOVE  SQLSTMT4-ARR
                 TO  FREE-MSG                OF PARM-SCZY1170-ARG1
               PERFORM  ERR-RTN
           END-IF
           EXEC SQL
               EXECUTE S04
           END-EXEC
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "SQLCODE(UPD)=["SQLCODE"]"
      *-----------------------------------------------------------------
           IF  SQLCODE  NOT = CNS-SQL-NORMAL
               AND SQLCODE  NOT = CNS-SQL-NOTFOUND
           THEN
      *----------  エラー検知プログラム名
               MOVE  CNS-PROGRAM-ID
                 TO  ERR-PGM-ID              OF PARM-SCZY1170-ARG1
      *----------  ポジション
               MOVE  "0013"
                 TO  ERR-POS                 OF PARM-SCZY1170-ARG1
      *----------  リターンコード
               MOVE  CNS-RET-CD-ORAERR
                 TO  RTN-CD                  OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
               MOVE  SQLCODE
                 TO  DETAIL-RTN-CD           OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
               MOVE  "1"
                 TO  DETAIL-RTN-CD-FLG       OF PARM-SCZY1170-ARG1
      *----------  フリーメッセージ
               MOVE  SQLSTMT4-ARR
                 TO  FREE-MSG                OF PARM-SCZY1170-ARG1
               PERFORM  ERR-RTN
           ELSE
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "処理継続"
      *-----------------------------------------------------------------
               CONTINUE
           END-IF.
      *------------------------DEBUG------------------------------------
      D    DISPLAY  "*****  テーブル容量更新処理  END  *****".
      *-----------------------------------------------------------------
       UPD-TBL-YOURYOU-EXT.
           EXIT.
      ******************************************************************
      *         環境変数から、最適化対象ファイルのパスを取得する
      ******************************************************************
       GET-PATH-RTN           SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "***  環境変数取得処理  START  ***"
      *-----------------------------------------------------------------
           DISPLAY  "APL_TMP_DIR"  UPON  ENV-NAME
           ACCEPT  FILE-PATH   FROM  ENV-VALUE  ON EXCEPTION
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "環境変数取得 エラー"
      *-------------------<DEBUG>---------------------------------------
      *----------  エラー検知プログラム名
               MOVE  CNS-PROGRAM-ID
                 TO  ERR-PGM-ID              OF PARM-SCZY1170-ARG1
      *----------  ポジション
               MOVE  "0014"
                 TO  ERR-POS                 OF PARM-SCZY1170-ARG1
      *----------  リターンコード
               MOVE  CNS-RET-CD-SYSERR
                 TO  RTN-CD                  OF PARM-SCZY1170-ARG1
               PERFORM  ERR-RTN
           END-ACCEPT.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "FILE-PATH= ["FILE-PATH"]"
      D    DISPLAY  "***  環境変数取得処理  END  ***".
      *-----------------------------------------------------------------
       GET-PATH-EXT.
           EXIT.
      ******************************************************************
      *               最適化対象ファイルをオープンする
      ******************************************************************
       OPEN-FILE-RTN          SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*** 最適化対象ファイルをオープン処理 START ***"
      *-----------------------------------------------------------------
           STRING   FILE-PATH
                    "/OPTTABLE_"
                    WK-KJN-YMD
                    ".lst"
             DELIMITED BY SPACE INTO  FILENAME
           OPEN OUTPUT SAITEKI-FILE
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "FILENAME =["FILENAME"]"
      D    DISPLAY  "ST-SAITEKIFILE(OPEN) =["ST-SAITEKIFILE"]"
      *-----------------------------------------------------------------
           IF  ST-SAITEKIFILE  = "00"
           THEN
               MOVE    CNS-ON          TO  FLG-FILE-OPEN
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "FLG-FILE-OPEN=["FLG-FILE-OPEN"]"
      *-----------------------------------------------------------------
           ELSE
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "ファイルをオーペンする エラー"
      *-------------------<DEBUG>---------------------------------------
      *----------  エラー検知プログラム名
               MOVE  CNS-PROGRAM-ID
                 TO  ERR-PGM-ID              OF PARM-SCZY1170-ARG1
      *----------  ポジション
               MOVE  "0015"
                 TO  ERR-POS                 OF PARM-SCZY1170-ARG1
      *----------  リターンコード
               MOVE  CNS-RET-200
                 TO  RTN-CD                  OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
               MOVE  FUNCTION NUMVAL(ST-SAITEKIFILE)
                 TO  DETAIL-RTN-CD           OF PARM-SCZY1170-ARG1
      *----------  フリーメッセージ
               MOVE  FILENAME
                 TO  FREE-MSG                OF PARM-SCZY1170-ARG1
               PERFORM  ERR-RTN
           END-IF.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*** 最適化対象ファイルをオープン処理 END ***".
      *-----------------------------------------------------------------
       OPEN-FILE-EXT.
           EXIT.
      ******************************************************************
      *                 カーソル2 OPEN処理
      ******************************************************************
       CURSOR2-OPEN-RTN       SECTION.
      *------------------------DEBUG------------------------------------
      D    DISPLAY  "*****  カーソル2 OPEN処理  START  *****"
      *-----------------------------------------------------------------
      *----------  ＳＱＬ文作成
           MOVE  1  TO  SQLSTMT2-LEN
           STRING  "SELECT "
                   " TBL_ID, "
                   " PARTITION_NAME, "
      *            " TBL_YOURYOU "
                   " TBL_YOURYOU, "
                   " PRIO, "
                   " SAITEKI_JIKOU_KBN "
                   " FROM "
      *            WK-TAB-TKDYAA53
                   WK-TAB-TKDYAA56
                   " A "
      *            " WHERE "
      *            " A.SAITEKI_JIKOU_KBN = ' ' "
      *            " ORDER BY A.TBL_ID"
                   " ORDER BY A.PRIO ASC, A.SAITEKI_JIKOU_KBN ASC,"
                   " A.TBL_ID ASC, A.PARTITION_NAME ASC"
               DELIMITED BY SIZE
               INTO  SQLSTMT2-ARR
               POINTER  SQLSTMT2-LEN
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "SQLSTMT2-ARR =["SQLSTMT2-ARR"]"
      D    DISPLAY  "SQLSTMT2-LEN =["SQLSTMT2-LEN"]"
      *-----------------------------------------------------------------
      *----------  ＳＱＬ文 PREPARE
           EXEC SQL
               PREPARE S02  FROM :SQLSTMT2
           END-EXEC
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "SQLCODE(PREPARE2)=["SQLCODE"]"
      *-----------------------------------------------------------------
           IF  SQLCODE  NOT = CNS-SQL-NORMAL
           THEN
      *----------  エラー検知プログラム名
               MOVE  CNS-PROGRAM-ID
                 TO  ERR-PGM-ID              OF PARM-SCZY1170-ARG1
      *----------  ポジション
               MOVE  "0016"
                 TO  ERR-POS                 OF PARM-SCZY1170-ARG1
      *----------  リターンコード
               MOVE  CNS-RET-CD-ORAERR
                 TO  RTN-CD                  OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
               MOVE  SQLCODE
                 TO  DETAIL-RTN-CD           OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
               MOVE  "1"
                 TO  DETAIL-RTN-CD-FLG       OF PARM-SCZY1170-ARG1
      *----------  フリーメッセージ
               MOVE  SQLSTMT2-ARR
                 TO  FREE-MSG                OF PARM-SCZY1170-ARG1
               PERFORM  ERR-RTN
           END-IF
      *----------  カーソル2 DECLARE
           EXEC SQL
               DECLARE CR2 CURSOR  FOR S02
           END-EXEC
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "SQLCODE(DECLARE2)=["SQLCODE"]"
      *-----------------------------------------------------------------
           IF  SQLCODE  NOT = CNS-SQL-NORMAL
           THEN
      *----------  エラー検知プログラム名
               MOVE  CNS-PROGRAM-ID
                 TO  ERR-PGM-ID              OF PARM-SCZY1170-ARG1
      *----------  ポジション
               MOVE  "0017"
                 TO  ERR-POS                 OF PARM-SCZY1170-ARG1
      *----------  リターンコード
               MOVE  CNS-RET-CD-ORAERR
                 TO  RTN-CD                  OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
               MOVE  SQLCODE
                 TO  DETAIL-RTN-CD           OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
               MOVE  "1"
                 TO  DETAIL-RTN-CD-FLG       OF PARM-SCZY1170-ARG1
      *----------  フリーメッセージ
               MOVE  SQLSTMT2-ARR
                 TO  FREE-MSG                OF PARM-SCZY1170-ARG1
               PERFORM  ERR-RTN
           END-IF
      *----------  カーソル2 OPEN
           EXEC SQL
               OPEN  CR2
           END-EXEC
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "SQLCODE(OPEN2)=["SQLCODE"]"
      *-----------------------------------------------------------------
           IF  SQLCODE  NOT = CNS-SQL-NORMAL
           THEN
      *----------  エラー検知プログラム名
               MOVE  CNS-PROGRAM-ID
                 TO  ERR-PGM-ID              OF PARM-SCZY1170-ARG1
      *----------  ポジション
               MOVE  "0018"
                 TO  ERR-POS                 OF PARM-SCZY1170-ARG1
      *----------  リターンコード
               MOVE  CNS-RET-CD-ORAERR
                 TO  RTN-CD                  OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
               MOVE  SQLCODE
                 TO  DETAIL-RTN-CD           OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
               MOVE  "1"
                 TO  DETAIL-RTN-CD-FLG       OF PARM-SCZY1170-ARG1
      *----------  フリーメッセージ
               MOVE  SQLSTMT2-ARR
                 TO  FREE-MSG                OF PARM-SCZY1170-ARG1
               PERFORM  ERR-RTN
           ELSE
               MOVE  CNS-ON                  TO  FLG-CLOSE2
      *-----------------------------------------------------------------
      D    DISPLAY  "FLG-CLOSE2=["FLG-CLOSE2"]"
      *-----------------------------------------------------------------
           END-IF.
      *------------------------DEBUG------------------------------------
      D    DISPLAY  "*****  カーソル2 OPEN処理  END  *****".
      *-----------------------------------------------------------------
       CURSOR2-OPEN-EXT.
           EXIT.
      ******************************************************************
      *                 カーソル2 FETCH処理
      ******************************************************************
       CURSOR2-FETCH-RTN      SECTION.
      *------------------------DEBUG------------------------------------
      D    DISPLAY  "*****  カーソル2 FETCH処理  START  *****"
      *------------------------DEBUG------------------------------------
           MOVE  CNS-ON      TO  FLG-FETCH
           PERFORM  UNTIL  FLG-FETCH = CNS-OFF
      *----------  カーソル2 FETCH
             EXEC SQL
                 FETCH  CR2
                  INTO :H-TBL-ID,
                       :H-PARTITION-NAME,
      *                :H-TBL-YOURYOU
                       :H-TBL-YOURYOU,
                       :H-PRIO,
                       :H-SAITEKI-JIKOU-KBN
             END-EXEC
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "SQLCODE(FETCH2)=["SQLCODE"]"
      *-----------------------------------------------------------------
             EVALUATE  SQLCODE
                 WHEN  CNS-SQL-NORMAL
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*** 処理を継続 ***"
      D    DISPLAY  "フェッチされたテーブルID =["H-TBL-ID"]"
      D    DISPLAY  "フェッチされたパーティション名 "
      D             "=["H-PARTITION-NAME"]"
      D    DISPLAY  "フェッチされたテーブル容量 =["H-TBL-YOURYOU"]"
      D    DISPLAY  "フェッチされた優先順位 =["H-PRIO"]"
      D    DISPLAY  "フェッチされた最適化実行区分 "
      D             "=["H-SAITEKI-JIKOU-KBN"]"
      D    DISPLAY  "最適化MAX容量 =["WK-SAITEKI-MAX-YOURYOU-9"]"
      D    DISPLAY  "テーブル容量保存用ワーク =["WK-TBL-YOURYOU"]"
      *-----------------------------------------------------------------
                     IF  (WK-TBL-YOURYOU = 0) OR (WK-TBL-YOURYOU +
                          H-TBL-YOURYOU <= WK-SAITEKI-MAX-YOURYOU-9)
                     THEN
                       MOVE  0          TO  WK-SAITEKI-FLG
                       IF  H-PARTITION-NAME  NOT = SPACE
                          AND H-PRIO = 99
                       THEN
                         MOVE H-PARTITION-NAME(15:6)
                           TO WK-PARTITION-NAME
                         IF  WK-PARTITION-NAME = "MAX   "
                          OR WK-PARTITION-NAME = "MIN   "
                          OR WK-PARTITION-NAME = "TMP   "
                          OR WK-PARTITION-NAME = WK-SYORIGETU(1)
                          OR WK-PARTITION-NAME = WK-SYORIGETU(2)
                          OR WK-PARTITION-NAME = WK-SYORIGETU(3)
                          OR WK-PARTITION-NAME = WK-SYORIGETU(4)
                         THEN
                           MOVE  1      TO  WK-SAITEKI-FLG
                         END-IF
                       ELSE
                         MOVE  1        TO  WK-SAITEKI-FLG
                       END-IF
                       IF  WK-SAITEKI-FLG = 1
                       THEN
                         COMPUTE  WK-TBL-YOURYOU = WK-TBL-YOURYOU +
                                                   H-TBL-YOURYOU
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "テーブル容量保存用ワーク(FETCH)=["WK-TBL-YOURYOU"]"
      D    DISPLAY  "*** ファイルをWRITE START ***"
      *-----------------------------------------------------------------
                         MOVE  H-TBL-ID
                           TO  SAITEKI-TABLE-ID   OF SAITEKIFILE-REC
                         MOVE  ","
                           TO  FILLER-0           OF SAITEKIFILE-REC
                         MOVE  H-PARTITION-NAME
                           TO  SAITEKI-PAR-NAME   OF SAITEKIFILE-REC
                         MOVE  ","
                           TO  FILLER-1           OF SAITEKIFILE-REC
                         MOVE  "00000000000000"
                           TO  SAITEKI-START-TIME OF SAITEKIFILE-REC
                         MOVE  ","
                           TO  FILLER-2           OF SAITEKIFILE-REC
                         MOVE  "99999999999999"
                           TO  SAITEKI-END-TIME   OF SAITEKIFILE-REC
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "SAITEKIFILE-REC=["SAITEKIFILE-REC"]"
      *-----------------------------------------------------------------
                         WRITE  SAITEKIFILE-REC
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*** ファイルをWRITE END ***"
      D    DISPLAY  "ST-SAITEKIFILE(WRITE)=["ST-SAITEKIFILE"]"
      *-----------------------------------------------------------------
                         IF  ST-SAITEKIFILE  NOT = "00"
                         THEN
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "ファイルをWRITE エラー"
      *-------------------<DEBUG>---------------------------------------
      *----------  エラー検知プログラム名
                             MOVE  CNS-PROGRAM-ID
                               TO  ERR-PGM-ID     OF PARM-SCZY1170-ARG1
      *----------  ポジション
                             MOVE  "0019"
                               TO  ERR-POS        OF PARM-SCZY1170-ARG1
      *----------  リターンコード
                             MOVE  CNS-RET-220
                               TO  RTN-CD         OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
                             MOVE  FUNCTION NUMVAL(ST-SAITEKIFILE)
                               TO  DETAIL-RTN-CD  OF PARM-SCZY1170-ARG1
      *----------  フリーメッセージ
                             MOVE  FILENAME
                               TO  FREE-MSG       OF PARM-SCZY1170-ARG1
                             PERFORM  ERR-RTN
                         ELSE
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*** 処理を継続 ***"
      *-------------------<DEBUG>---------------------------------------
                             CONTINUE
                         END-IF
                       END-IF
                     ELSE
                       CONTINUE
      *                  MOVE  CNS-OFF      TO  FLG-FETCH
      *-------------------<DEBUG>---------------------------------------
      *D    DISPLAY  "FLG-FETCH=["FLG-FETCH"]"
      *-------------------<DEBUG>---------------------------------------
                     END-IF
                 WHEN  CNS-SQL-NOTFOUND
                     MOVE  CNS-OFF      TO  FLG-FETCH
                 WHEN  OTHER
      *----------  エラー検知プログラム名
                     MOVE  CNS-PROGRAM-ID
                       TO  ERR-PGM-ID        OF PARM-SCZY1170-ARG1
      *----------  ポジション
                     MOVE  "0020"
                       TO  ERR-POS           OF PARM-SCZY1170-ARG1
      *----------  リターンコード
                     MOVE  CNS-RET-CD-ORAERR
                       TO  RTN-CD            OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
                     MOVE  SQLCODE
                       TO  DETAIL-RTN-CD     OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
                     MOVE  "1"
                       TO  DETAIL-RTN-CD-FLG OF PARM-SCZY1170-ARG1
      *----------  フリーメッセージ
                     MOVE  SQLSTMT2-ARR
                       TO  FREE-MSG          OF PARM-SCZY1170-ARG1
                     PERFORM  ERR-RTN
             END-EVALUATE
           END-PERFORM.
      *------------------------DEBUG------------------------------------
      D    DISPLAY  "*****  カーソル2 FETCH処理  END  *****".
      *-----------------------------------------------------------------
       CURSOR2-FETCH-EXT.
           EXIT.
      ******************************************************************
      *                カーソル2 CLOSE処理
      ******************************************************************
       CURSOR2-CLOSE-RTN      SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*****  カーソル2 CLOSE処理  START  *****"
      *-----------------------------------------------------------------
           EXEC SQL
               CLOSE CR2
           END-EXEC
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "SQLCODE(CLOSE2)=["SQLCODE"]"
      *-----------------------------------------------------------------
           IF  SQLCODE = CNS-SQL-NORMAL
           THEN
               MOVE  CNS-OFF            TO  FLG-CLOSE2
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "FLG-CLOSE2 =["FLG-CLOSE2"]"
      *-----------------------------------------------------------------
           ELSE
      *----------  エラー検知プログラム名
               MOVE  CNS-PROGRAM-ID
                 TO  ERR-PGM-ID         OF PARM-SCZY1170-ARG1
      *----------  ポジション
               MOVE  "0021"
                 TO  ERR-POS            OF PARM-SCZY1170-ARG1
      *----------  リターンコード
               MOVE  CNS-RET-CD-ORAERR
                 TO  RTN-CD             OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
               MOVE  SQLCODE
                 TO  DETAIL-RTN-CD      OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
               MOVE  "1"
                 TO  DETAIL-RTN-CD-FLG  OF PARM-SCZY1170-ARG1
      *----------  フリーメッセージ
               MOVE  SQLSTMT2-ARR
                 TO  FREE-MSG           OF PARM-SCZY1170-ARG1
               PERFORM  ERR-RTN
           END-IF.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*****  カーソル2 CLOSE処理  END  *****".
      *-----------------------------------------------------------------
       CURSOR2-CLOSE-EXT.
           EXIT.
      ******************************************************************
      *               ファイルをクロースする
      ******************************************************************
       CLOSE-FILE-RTN         SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*** 最適化対象ファイルをクロース処理 START ***"
      *-----------------------------------------------------------------
           CLOSE  SAITEKI-FILE
           MOVE  CNS-OFF            TO  FLG-FILE-OPEN
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "ST-SAITEKIFILE(CLOSE)=["ST-SAITEKIFILE"]"
      D    DISPLAY  "FLG-FILE-OPEN=["FLG-FILE-OPEN"]"
      *-----------------------------------------------------------------
           IF  ST-SAITEKIFILE NOT = "00"
           THEN
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "最適化対象ファイルをクロースする エラー"
      *-------------------<DEBUG>---------------------------------------
      *----------  エラー検知プログラム名
               MOVE  CNS-PROGRAM-ID
                 TO  ERR-PGM-ID              OF PARM-SCZY1170-ARG1
      *----------  ポジション
               MOVE  "0022"
                 TO  ERR-POS                 OF PARM-SCZY1170-ARG1
      *----------  リターンコード
               MOVE  CNS-RET-230
                 TO  RTN-CD                  OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
               MOVE  FUNCTION NUMVAL(ST-SAITEKIFILE)
                 TO  DETAIL-RTN-CD           OF PARM-SCZY1170-ARG1
      *----------  フリーメッセージ
               MOVE  FILENAME
                 TO  FREE-MSG                OF PARM-SCZY1170-ARG1
               PERFORM  ERR-RTN
           END-IF.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*** 最適化対象ファイルをクロース処理 END ***".
      *-----------------------------------------------------------------
       CLOSE-FILE-EXT.
           EXIT.
      ******************************************************************
      *       後処理
      ******************************************************************
       END-RTN                SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*****   後処理  START  *****"
      *-----------------------------------------------------------------
      *----------  ORACLE接続終了(COMMIT)処理
           PERFORM  DB-COMMIT-RTN
      *----------  バッチ終了メッセージ出力ルーチン処理
           PERFORM  SCZY1170-RTN
           PERFORM  SCZY7020-RTN
           MOVE  0  TO  WK-RTN-STS.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "WK-RTN-STS =["WK-RTN-STS"]"
      D    DISPLAY  "*****   後処理  END  *****".
      *-----------------------------------------------------------------
       END-EXT.
           EXIT.
      ******************************************************************
      *       ORACLE接続終了(COMMIT)処理
      ******************************************************************
       DB-COMMIT-RTN          SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*****   ORACLE接続終了(COMMIT)  START  *****"
      *-----------------------------------------------------------------
           EXEC SQL
               COMMIT  RELEASE
           END-EXEC
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "COMMIT(SQLCODE)=["SQLCODE"]"
      *-----------------------------------------------------------------
           IF  SQLCODE NOT= CNS-SQL-NORMAL
           THEN
               STRING  "COMMIT  RELEASE"
                       DELIMITED BY SIZE
                       INTO  WK-COMMIT-RELEASE
      *---------- エラー検知プログラム名
               MOVE  CNS-PROGRAM-ID
                 TO  ERR-PGM-ID              OF PARM-SCZY1170-ARG1
      *---------- ポジション
               MOVE  "0023"
                 TO  ERR-POS                 OF PARM-SCZY1170-ARG1
      *---------- リターンコード
               MOVE  CNS-RET-CD-ORAERR
                 TO  RTN-CD                  OF PARM-SCZY1170-ARG1
      *---------- 詳細リターンコード
               MOVE  SQLCODE
                 TO  DETAIL-RTN-CD           OF PARM-SCZY1170-ARG1
      *---------- 詳細リターンコードデコードフラグ
               MOVE  "1"
                 TO  DETAIL-RTN-CD-FLG       OF PARM-SCZY1170-ARG1
      *---------- フリーメッセージ
               MOVE  WK-COMMIT-RELEASE
                 TO  FREE-MSG                OF PARM-SCZY1170-ARG1
               PERFORM  ERR-RTN
           END-IF.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*****  ORACLE接続終了(COMMIT)  END  *****".
      *-----------------------------------------------------------------
       DB-COMMIT-EXT.
           EXIT.
      ******************************************************************
      *       リターンパッケージセットルーチン処理
      ******************************************************************
       SCZY1170-RTN           SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*****   SCZY1170処理  START  *****"
      *-----------------------------------------------------------------
           MOVE  CNS-RET-CD-NORMAL
             TO  RTN-CD                      OF PARM-SCZY1170-ARG1
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "RTN-CD                  OF PARM-SCZY1170-ARG1=["
      D              RTN-CD                  OF PARM-SCZY1170-ARG1"]"
      D    DISPLAY  "CALL リターンパッケージセットルーチンSCZY1170 開始"
      *-----------------------------------------------------------------
           CALL  "SCZY1170"  USING  PARM-SCZY1170-INOUT
                                    PARM-SCZY1170-RTNPKG.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "CALL リターンパッケージセットルーチンSCZY1170 終了"
      D    DISPLAY  "PARM-SCZY1170-RTNPKG=["PARM-SCZY1170-RTNPKG"]"
      D    DISPLAY  "*****   SCZY1170処理  END  *****".
      *-----------------------------------------------------------------
       SCZY1170-EXT.
           EXIT.
      ******************************************************************
      *       バッチ終了メッセージ出力ルーチン処理
      ******************************************************************
       SCZY7020-RTN           SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*****   SCZY7020処理  START  *****"
      *-----------------------------------------------------------------
           INITIALIZE  WK-KYOUTUU-RTNPKG
      *---------- エラー種別
           MOVE  "N"
             TO  ERR-SYUBETU                 OF PARM-SCZY7020-ARG1
      *---------- プログラム名
           MOVE  CNS-PROGRAM-ID
             TO  PGM-ID                      OF PARM-SCZY7020-ARG2
      *---------- 利用会社コード
           MOVE  "C000"
             TO  RIYO-CMP-CD                 OF PARM-SCZY7020-ARG2
      *---------- 基準日
           MOVE  WK-KJN-YMD
             TO  KJN-YMD                     OF PARM-SCZY7020-ARG2
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "ERR-SYUBETU             OF PARM-SCZY7020-ARG1=["
      D              ERR-SYUBETU             OF PARM-SCZY7020-ARG1"]"
      D    DISPLAY  "PGM-ID                  OF PARM-SCZY7020-ARG2=["
      D              PGM-ID                  OF PARM-SCZY7020-ARG2"]"
      D    DISPLAY  "RIYO-CMP-CD             OF PARM-SCZY7020-ARG2=["
      D              RIYO-CMP-CD             OF PARM-SCZY7020-ARG2"]"
      D    DISPLAY  "KJN-YMD                 OF PARM-SCZY7020-ARG2=["
      D              KJN-YMD                 OF PARM-SCZY7020-ARG2"]"
      D    DISPLAY  "JIKOU-SYORI-ID          OF PARM-SCZY7020-ARG2=["
      D              JIKOU-SYORI-ID          OF PARM-SCZY7020-ARG2"]"
      D    DISPLAY  "KIDOU-ID                OF PARM-SCZY7020-ARG2=["
      D              KIDOU-ID                OF PARM-SCZY7020-ARG2"]"
      D    DISPLAY  "CALL バッチ終了メッセージ出力ルーチンSCZY7020 開始"
      *-----------------------------------------------------------------
           CALL  "SCZY7020"  USING  PARM-SCZY7020-INOUT
                                    WK-KYOUTUU-RTNPKG.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "CALL バッチ終了メッセージ出力ルーチンSCZY7020 終了"
      D    DISPLAY  "*****   SCZY7020処理  END  *****".
      *-----------------------------------------------------------------
       SCZY7020-EXT.
           EXIT.
      ******************************************************************
      *               エラー処理
      ******************************************************************
       ERR-RTN                SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "ERR-PGM-ID              OF PARM-SCZY1170-ARG1=["
      D              ERR-PGM-ID              OF PARM-SCZY1170-ARG1"]"
      D    DISPLAY  "ERR-POS                 OF PARM-SCZY1170-ARG1=["
      D              ERR-POS                 OF PARM-SCZY1170-ARG1"]"
      D    DISPLAY  "RTN-CD                  OF PARM-SCZY1170-ARG1=["
      D              RTN-CD                  OF PARM-SCZY1170-ARG1"]"
      D    DISPLAY  "DETAIL-RTN-CD           OF PARM-SCZY1170-ARG1=["
      D              DETAIL-RTN-CD           OF PARM-SCZY1170-ARG1"]"
      D    DISPLAY  "DETAIL-RTN-CD-FLG       OF PARM-SCZY1170-ARG1=["
      D              DETAIL-RTN-CD-FLG       OF PARM-SCZY1170-ARG1"]"
      D    DISPLAY  "FREE-MSG                OF PARM-SCZY1170-ARG1=["
      D              FREE-MSG                OF PARM-SCZY1170-ARG1"]"
      D    DISPLAY  "*****   ERR-RTN  START  *****"
      *D    DISPLAY  "FLG-CLOSE1=["FLG-CLOSE1"]"
      **-----------------------------------------------------------------
      *     IF  FLG-CLOSE1 = CNS-ON
      *     THEN
      *         EXEC SQL
      *             CLOSE CR1
      *         END-EXEC
      *         MOVE  CNS-OFF            TO  FLG-CLOSE1
      **-------------------<DEBUG>---------------------------------------
      *D    DISPLAY  "SQLCODE(CLOSE1) =["SQLCODE"]"
      *D    DISPLAY  "FLG-CLOSE1 =["FLG-CLOSE1"]"
      **-----------------------------------------------------------------
      *     END-IF
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "FLG-CLOSE2=["FLG-CLOSE2"]"
      *-----------------------------------------------------------------
           IF  FLG-CLOSE2 = CNS-ON
           THEN
               EXEC SQL
                   CLOSE CR2
               END-EXEC
               MOVE  CNS-OFF            TO  FLG-CLOSE2
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "SQLCODE(CLOSE2) =["SQLCODE"]"
      D    DISPLAY  "FLG-CLOSE2 =["FLG-CLOSE2"]"
      *-----------------------------------------------------------------
           END-IF
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "FLG-FILE-OPEN=["FLG-FILE-OPEN"]"
      *-----------------------------------------------------------------
           IF  FLG-FILE-OPEN  = CNS-ON
           THEN
               CLOSE  SAITEKI-FILE
               MOVE  CNS-OFF            TO  FLG-FILE-OPEN
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "ST-SAITEKIFILE(CLOSE)=["ST-SAITEKIFILE"]"
      D    DISPLAY  "FLG-FILE-OPEN=["FLG-FILE-OPEN"]"
      *-----------------------------------------------------------------
           END-IF
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "FLG-ORA-CONNECT =["FLG-ORA-CONNECT"]"
      *-----------------------------------------------------------------
      *----------  DBロールバック処理
           IF  FLG-ORA-CONNECT = CNS-ON
           THEN
      *----------  使用したカーソルの全クローズ
               EXEC SQL
                   ROLLBACK RELEASE
               END-EXEC
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "SQLCODE(ROLLBACK)=["SQLCODE"]"
      *-----------------------------------------------------------------
           END-IF
           MOVE   CNS-OFF     TO  FLG-ORA-CONNECT
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "FLG-ORA-CONNECT =["FLG-ORA-CONNECT"]"
      D    DISPLAY  "*****   SCZY1170処理  START  *****"
      D    DISPLAY  "CALL リターンパッケージセットルーチンSCZY1170 開始"
      *-----------------------------------------------------------------
           CALL  "SCZY1170"               USING  PARM-SCZY1170-INOUT
                                                 PARM-SCZY1170-RTNPKG
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "CALL リターンパッケージセットルーチンSCZY1170 終了"
      D    DISPLAY  "PARM-SCZY1170-RTNPKG=["PARM-SCZY1170-RTNPKG"]"
      D    DISPLAY  "*****   SCZY1170処理  END  *****"
      D    DISPLAY  "*****   SCZY7020処理  START  *****"
      *-----------------------------------------------------------------
           INITIALIZE  WK-KYOUTUU-RTNPKG
      *---------- エラー種別
           MOVE  "S"
             TO  ERR-SYUBETU                 OF PARM-SCZY7020-ARG1
      *---------- プログラム名
           MOVE  CNS-PROGRAM-ID
             TO  PGM-ID                      OF PARM-SCZY7020-ARG2
      *---------- 利用会社コード
           MOVE  "C000"
             TO  RIYO-CMP-CD                 OF PARM-SCZY7020-ARG2
      *---------- 基準日
           MOVE  WK-KJN-YMD
             TO  KJN-YMD                     OF PARM-SCZY7020-ARG2
           MOVE  PARM-SCZY1170-RTNPKG        TO  WK-KYOUTUU-RTNPKG
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "ERR-SYUBETU             OF PARM-SCZY7020-ARG1=["
      D              ERR-SYUBETU             OF PARM-SCZY7020-ARG1"]"
      D    DISPLAY  "PGM-ID                  OF PARM-SCZY7020-ARG2=["
      D              PGM-ID                  OF PARM-SCZY7020-ARG2"]"
      D    DISPLAY  "RIYO-CMP-CD             OF PARM-SCZY7020-ARG2=["
      D              RIYO-CMP-CD             OF PARM-SCZY7020-ARG2"]"
      D    DISPLAY  "KJN-YMD                 OF PARM-SCZY7020-ARG2=["
      D              KJN-YMD                 OF PARM-SCZY7020-ARG2"]"
      D    DISPLAY  "JIKOU-SYORI-ID          OF PARM-SCZY7020-ARG2=["
      D              JIKOU-SYORI-ID          OF PARM-SCZY7020-ARG2"]"
      D    DISPLAY  "KIDOU-ID                OF PARM-SCZY7020-ARG2=["
      D              KIDOU-ID                OF PARM-SCZY7020-ARG2"]"
      D    DISPLAY  "PARM-SCZY7020-RTNPKG=["WK-KYOUTUU-RTNPKG"]"
      D    DISPLAY  "CALL バッチ終了メッセージ出力ルーチンSCZY7020 開始"
      *-----------------------------------------------------------------
           CALL  "SCZY7020"               USING  PARM-SCZY7020-INOUT
                                                 WK-KYOUTUU-RTNPKG
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "CALL バッチ終了メッセージ出力ルーチンSCZY7020 終了"
      D    DISPLAY  "*****   SCZY7020処理  END  *****"
      *-----------------------------------------------------------------
           MOVE    16              TO  WK-RTN-STS.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "WK-RTN-STS=["WK-RTN-STS"]"
      D    DISPLAY  "*****   ERR-RTN  END  *****".
      *-----------------------------------------------------------------
       ERR-EXT.
           STOP RUN WK-RTN-STS.
