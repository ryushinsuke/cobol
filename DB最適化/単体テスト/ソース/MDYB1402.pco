      ******************************************************************
      *$Header: $
      ******************************************************************
      *
      *     システムＩＤ   : T-STAR
      *     システム名称   : 新有価証券バックオフィスシステム
      *     プログラム名称 : 最適化結果更新処理
      *     処理概要       : 最適化対象ファイルから、最適化の開始日時、
      *                    : 終了日時を取得して、最適化管理明細テーブル
      *                    : に更新する。
      *     引数           : IN  基準日
      *     改訂履歴
      *     年月日     区分  所属       担当者  内容
      *     ---------- ----  ---------  ------  ------------------------
      *     20090304   新規  SCS        呉聞杰  新規作成
      *     20130207   修正  GUT        高楽　　テーマ3262-1:ＤＢサーバ
      *                                         領域の最適化処理復活
      ******************************************************************
       IDENTIFICATION         DIVISION.
       PROGRAM-ID.    MDYB1402.
       AUTHOR.        Nomura.
       DATE-WRITTEN.  09-03-04.
       DATE-COMPILED.
      ******************************************************************
      *
      *                 環  境  部
      *
      ******************************************************************
       ENVIRONMENT            DIVISION.
       CONFIGURATION          SECTION.
       SOURCE-COMPUTER.       L1000V.
      *SOURCE-COMPUTER.       L1000V  WITH  DEBUGGING  MODE.
       OBJECT-COMPUTER.       RP5470.
       SPECIAL-NAMES.
       ENVIRONMENT-NAME               ENV-NAME
       ENVIRONMENT-VALUE              ENV-VALUE.
       INPUT-OUTPUT           SECTION.
       FILE-CONTROL.
           SELECT  SAITEKI-FILE   ASSIGN  TO  FILENAME
                   ORGANIZATION IS LINE SEQUENTIAL
                   FILE          STATUS  IS  ST-SAITEKIFILE.
      ******************************************************************
      *
      *                 デ  ー  タ  部
      *
      ******************************************************************
       DATA                   DIVISION.
       FILE                   SECTION.
       FD  SAITEKI-FILE
                         LABEL      RECORD    STANDARD.
       01  SAITEKIFILE-REC.
         05  SAITEKI-JIKAN         PIC  X(100).
      ******************************************************************
      *                   作業場所節
      ******************************************************************
       WORKING-STORAGE        SECTION.
       01  IDNAME                  PIC  X(80)  VALUE
       "$Id: $".
      ******************************************************************
      *                    ファイル  エリア
      ******************************************************************
       01  FILE-AREA.
         05  FILENAME              PIC  X(256).
         05  FILE-PATH             PIC  X(256).
         05  ST-SAITEKIFILE        PIC  X(02).
      ******************************************************************
      *                コンスタント  エリア
      ******************************************************************
       01  CONST-AREA.
      *----------  プログラムＩＤ
         05  CNS-PROGRAM-ID        PIC  X(08)  VALUE "MDYB1402".
      *----------  最適化管理テーブル
         05  CNS-TBL-TKDYAA53      PIC  X(08)  VALUE "TKDYAA53".
      *----------  最適化管理明細テーブル
         05  CNS-TBL-TKDYAA56      PIC  X(08)  VALUE "TKDYAA56".
      *----------  リターンコード: 正常終了
         05  CNS-RET-CD-NORMAL     PIC  X(03)  VALUE "000".
      *----------  リターンコード: システムエラー（Oracle）
         05  CNS-RET-CD-ORAERR     PIC  X(03)  VALUE "900".
      *----------  リターンコード: システムエラー（Oracle以外）
         05  CNS-RET-CD-SYSERR     PIC  X(03)  VALUE "901".
         05  CNS-SQL-NORMAL        PIC  S9(04)  COMP-3 VALUE +0000.
         05  CNS-SQL-NOTFOUND      PIC  S9(04)  COMP-3 VALUE +1403.
      *----------  OPEN FLG
         05  CNS-ON                PIC  9(01)  VALUE  1.
      *----------  CLOSE FLG
         05  CNS-OFF               PIC  9(01)  VALUE  0.
      *----------  ファイルアクセスエラー（OPEN）
         05  CNS-RET-200           PIC  X(03)  VALUE  "200".
      *----------  ファイルアクセスエラー（READ）
         05  CNS-RET-210           PIC  X(03)  VALUE  "210".
      *----------  ファイルアクセスエラー（CLOSE）
         05  CNS-RET-230           PIC  X(03)  VALUE  "230".
      ******************************************************************
      *                   ワーク  エリア
      ******************************************************************
       01  WK-AREA.
      *----------  戻り値
         05  WK-RTN-STS            PIC  9(02).
      *----------  基準日
         05  WK-KJN-YMD            PIC  X(08).
         05  WK-TAB-TKDYAA53       PIC  X(13).
         05  WK-TAB-TKDYAA56       PIC  X(13).
         05  WK-PROGRAM-ID         PIC  X(16).
         05  WK-SQL-CONNECT        PIC  X(89).
         05  WK-COMMIT-RELEASE     PIC  X(15).
         05  WK-TBL-ID             PIC  X(20).
         05  WK-PAR-NAME           PIC  X(30).
         05  WK-KAISI-JIKAN        PIC  X(14).
         05  WK-SYURYO-JIKAN       PIC  X(14).
         05  WK-ERR-SQLSTMT        PIC  X(400).
      *
      *----------  ワークRTNパッケージ
       01  WK-KYOUTUU-RTNPKG.
         05  WK-PARM-RTNPKG.
           COPY "CZRTNPACKAGE.cpy".
      ******************************************************************
      *                      フラグエリア
      ******************************************************************
       01  FLAG-AREA.
         05  FLG-CLOSE             PIC  9(01).
         05  FLG-FILE-OPEN         PIC  9(01).
      *----------  Oracle接続判定フラグ
         05  FLG-ORA-CONNECT       PIC  9(01).
         05  FLG-READ-END          PIC  9(01).
      ******************************************************************
      *                サブプログラム             パラメ−タ  エリア
      ******************************************************************
      *----------  バッチ開始メッセージ出力ルーチン
       01  PARM-SCZY7010-INOUT.
           COPY  "SCZY7010.cpy".
      *
      *----------  バッチ終了メッセージ出力ルーチン
       01  PARM-SCZY7020-INOUT.
           COPY "SCZY7020.cpy".
      *
      *----------  バッチ引数一括取得ルーチン
       01  PARM-SCZY7090-INOUT.
           COPY  "SCZY7090.cpy".
      *
      *----------  バッチＤＢ接続情報取得ルーチン
       01  PARM-SCZY7100-INOUT.
           COPY  "SCZY7100.cpy".
      *
      *----------  リターンパッケージセットルーチン
       01  PARM-SCZY1170-INOUT.
      *----------  リターンパッケージセットルーチンコピー句
           COPY  "SCZY1170.cpy".
       01  PARM-SCZY1170-RTNPKG.
         05  PARM-SCZY1170-ARG2.
      *----------  RTNパッケージ
           COPY  "CZRTNPACKAGE.cpy".
      *
      *----------  テーブルID取得ルーチン
       01  PARM-SCZY1160-INOUT.
           COPY  "SCZY1160.cpy".
      ******************************************************************
      *    SQL通信, ORACLE通信,ホスト変数定義 エリア
      ******************************************************************
           EXEC SQL INCLUDE  SQLCA             END-EXEC.
           EXEC SQL BEGIN DECLARE  SECTION     END-EXEC.
       01  ORA-WORKING-ITEMS.
      *----------  ORACLE接続
         05  H-ORA-USER            PIC  X(80).
         05  H-NO-SAITEKI-COUNT    PIC  9(08).
      *  05  SQLSTMT               PIC  X(300)  VARYING.
         05  SQLSTMT               PIC  X(400)  VARYING.
         05  SQLSTMT1              PIC  X(400)  VARYING.
         05  SQLSTMT2              PIC  X(400)  VARYING.
           EXEC SQL END  DECLARE   SECTION     END-EXEC.
      ******************************************************************
      *
      *        手  続  き  部
      *
      ******************************************************************
       PROCEDURE              DIVISION.
      ******************************************************************
      *                      MDYB1402処理
      ******************************************************************
       MDYB1402-RTN           SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "****  MDYB1402-RTN  START  ****"
      *-----------------------------------------------------------------
      *----------  前処理
           PERFORM  INIT-RTN
      *----------  主処理
           PERFORM  MAIN-RTN
      *----------  後処理
           PERFORM  END-RTN.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "****  MDYB1402-RTN  END  ****".
      *-----------------------------------------------------------------
       MDYB1402-EXT.
           STOP RUN WK-RTN-STS.
      ******************************************************************
      *               前処理
      ******************************************************************
       INIT-RTN               SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "***  INIT-RTN  START  ***"
      *-----------------------------------------------------------------
           INITIALIZE   SAITEKIFILE-REC
                        FILE-AREA
                        WK-AREA
                        WK-KYOUTUU-RTNPKG
                        ORA-WORKING-ITEMS
                        FLAG-AREA
                        PARM-SCZY7010-INOUT
                        PARM-SCZY7020-INOUT
                        PARM-SCZY7090-INOUT
                        PARM-SCZY7100-INOUT
                        PARM-SCZY1160-INOUT
                        PARM-SCZY1170-INOUT
                        PARM-SCZY1170-RTNPKG
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "SAITEKIFILE-REC    =["SAITEKIFILE-REC"]"
      D    DISPLAY  "FILE-AREA          =["FILE-AREA"]"
      D    DISPLAY  "WK-AREA            =["WK-AREA"]"
      D    DISPLAY  "WK-KYOUTUU-RTNPKG  =["WK-KYOUTUU-RTNPKG"]"
      D    DISPLAY  "ORA-WORKING-ITEMS  =["ORA-WORKING-ITEMS"]"
      D    DISPLAY  "FLAG-AREA          =["FLAG-AREA"]"
      D    DISPLAY  "PARM-SCZY7010-INOUT=["PARM-SCZY7010-INOUT"]"
      D    DISPLAY  "PARM-SCZY7020-INOUT=["PARM-SCZY7020-INOUT"]"
      D    DISPLAY  "PARM-SCZY7090-INOUT=["PARM-SCZY7090-INOUT"]"
      D    DISPLAY  "PARM-SCZY7100-INOUT=["PARM-SCZY7100-INOUT"]"
      D    DISPLAY  "PARM-SCZY1160-INOUT=["PARM-SCZY1160-INOUT"]"
      D    DISPLAY  "PARM-SCZY1170-INOUT=["PARM-SCZY1170-INOUT"]"
      D    DISPLAY  "PARM-SCZY1170-RTNPKG=["PARM-SCZY1170-RTNPKG"]"
      *-----------------------------------------------------------------
      *----------  バッチ開始メッセージ出力ルーチン処理
           PERFORM  SCZY7010-RTN
      *----------  バッチ引数取得ルーチン処理
           PERFORM  SCZY7090-RTN
      *----------  バッチ引数一括取得ルーチン
           PERFORM  SCZY7100-RTN
      *----------  DB接続処理
           PERFORM  DB-CONNECT-RTN
      *----------  テーブルID取得ルーチン処理
           PERFORM  SCZY1160-RTN.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*****  INIT-RTN  END  *****".
      *-----------------------------------------------------------------
       INIT-EXT.
           EXIT.
      ******************************************************************
      *                 バッチ開始メッセージ出力ルーチン処理
      ******************************************************************
       SCZY7010-RTN           SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*****  SCZY7010処理  START  *****"
      *-----------------------------------------------------------------
           MOVE  CNS-PROGRAM-ID
             TO  PGM-ID                      OF PARM-SCZY7010-INOUT
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "PGM-ID                  OF PARM-SCZY7010-INOUT=["
      D              PGM-ID                  OF PARM-SCZY7010-INOUT"]"
      D    DISPLAY  "CALL バッチ開始メッセージ出力ルーチSCZY7010 開始"
      *-----------------------------------------------------------------
           CALL "SCZY7010"                USING  PARM-SCZY7010-INOUT.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "CALL バッチ開始メッセージ出力ルーチSCZY7010 終了"
      D    DISPLAY  "*****  SCZY7010処理  END  *****".
      *-----------------------------------------------------------------
       SCZY7010-EXT.
           EXIT.
      ******************************************************************
      *                 バッチ引数一括取得ルーチン
      ******************************************************************
       SCZY7090-RTN           SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*****  SCZY7090処理  START  *****"
      *-----------------------------------------------------------------
           MOVE  1
             TO  ARG-NUM                     OF PARM-SCZY7090-INOUT
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "ARG-NUM                 OF PARM-SCZY7090-INOUT=["
      D              ARG-NUM                 OF PARM-SCZY7090-INOUT"]"
      D    DISPLAY  "CALL バッチ引数一括取得ルーチンSCZY7090 開始"
      *-----------------------------------------------------------------
           CALL  "SCZY7090"               USING  PARM-SCZY7090-INOUT
                                                 WK-KYOUTUU-RTNPKG
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "CALL バッチ引数一括取得ルーチンSCZY7090 終了"
      D    DISPLAY  "RTN-CD                  OF PARM-SCZY7090-RTNPKG=["
      D              RTN-CD                  OF WK-KYOUTUU-RTNPKG
      D                             (COUNTER OF WK-KYOUTUU-RTNPKG)"]"
      *-----------------------------------------------------------------
           IF  RTN-CD                        OF WK-KYOUTUU-RTNPKG
                                    (COUNTER OF WK-KYOUTUU-RTNPKG)
               = CNS-RET-CD-NORMAL
           THEN
               MOVE  ARG-STRING              OF PARM-SCZY7090-ARG2(1)
                 TO  WK-KJN-YMD
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "基準日        =["WK-KJN-YMD"]"
      *-----------------------------------------------------------------
           ELSE
      *----------  エラー検知プログラム名
               MOVE  CNS-PROGRAM-ID
                 TO  ERR-PGM-ID              OF PARM-SCZY1170-ARG1
      *----------  ポジション
               MOVE  "0001"
                 TO  ERR-POS                 OF PARM-SCZY1170-ARG1
      *----------  リターンコード
               MOVE  CNS-RET-CD-SYSERR
                 TO  RTN-CD                  OF PARM-SCZY1170-ARG1
               MOVE  WK-KYOUTUU-RTNPKG       TO  PARM-SCZY1170-RTNPKG
               PERFORM  ERR-RTN
           END-IF.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*****  SCZY7090処理  END  *****".
      *-----------------------------------------------------------------
       SCZY7090-EXT.
           EXIT.
      ******************************************************************
      *             バッチＤＢ接続情報取得ルーチン処理
      ******************************************************************
       SCZY7100-RTN           SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*****  SCZY7100処理  START  *****"
      *-----------------------------------------------------------------
           INITIALIZE  WK-KYOUTUU-RTNPKG
           MOVE  "C000"
             TO  RIYO-CMP-CD                 OF PARM-SCZY7100-INOUT
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "RIYO-CMP-CD             OF PARM-SCZY7100-INOUT=["
      D              RIYO-CMP-CD             OF PARM-SCZY7100-INOUT"]"
      D    DISPLAY  "CALL バッチＤＢ接続情報取得ルーチンSCZY7100 開始"
      *-----------------------------------------------------------------
           CALL "SCZY7100"               USING  PARM-SCZY7100-INOUT
                                                WK-KYOUTUU-RTNPKG
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "CALL バッチＤＢ接続情報取得ルーチンSCZY7100 終了"
      D    DISPLAY  "RTN-CD                  OF PARM-SCZY7100-RTNPKG=["
      D              RTN-CD                  OF WK-KYOUTUU-RTNPKG
      D                             (COUNTER OF WK-KYOUTUU-RTNPKG)"]"
      *-----------------------------------------------------------------
           IF  RTN-CD                        OF WK-KYOUTUU-RTNPKG
                                    (COUNTER OF WK-KYOUTUU-RTNPKG)
               NOT = CNS-RET-CD-NORMAL
           THEN
      *----------  エラー検知プログラム名
               MOVE  CNS-PROGRAM-ID
                 TO  ERR-PGM-ID              OF PARM-SCZY1170-ARG1
      *----------  ポジション
               MOVE  "0002"
                 TO  ERR-POS                 OF PARM-SCZY1170-ARG1
      *----------  リターンコード
               MOVE  CNS-RET-CD-SYSERR
                 TO  RTN-CD                  OF PARM-SCZY1170-ARG1
               MOVE  WK-KYOUTUU-RTNPKG       TO  PARM-SCZY1170-RTNPKG
               PERFORM  ERR-RTN
           END-IF.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*****  SCZY7100処理  END  *****".
      *-----------------------------------------------------------------
       SCZY7100-EXT.
           EXIT.
      ******************************************************************
      *                 ＤＢ接続処理
      ******************************************************************
       DB-CONNECT-RTN         SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*****  ＤＢ接続処理  START  *****"
      *-----------------------------------------------------------------
           EXEC SQL
               WHENEVER SQLERROR CONTINUE
           END-EXEC
           MOVE  DB-SETUZOKU-JYOUHOU         OF PARM-SCZY7100-ARG2
             TO  H-ORA-USER
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "H-ORA-USER=["H-ORA-USER"]"
      *-----------------------------------------------------------------
           EXEC SQL
               CONNECT :H-ORA-USER
           END-EXEC
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "SQLCODE=["SQLCODE"]"
      *-----------------------------------------------------------------
           IF  SQLCODE = CNS-SQL-NORMAL
           THEN
      *----------  ORACLE接続成功
               MOVE  CNS-ON                  TO  FLG-ORA-CONNECT
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "FLG-ORA-CONNECT=["FLG-ORA-CONNECT"]"
      D    DISPLAY  "ORACLE接続成功"
      *-----------------------------------------------------------------
           ELSE
               STRING  "CONNECT :"
                       H-ORA-USER
                       DELIMITED BY SIZE
                       INTO  WK-SQL-CONNECT
      *----------  エラー検知プログラム名
               MOVE  CNS-PROGRAM-ID
                 TO  ERR-PGM-ID              OF PARM-SCZY1170-ARG1
      *----------  ポジション
               MOVE  "0003"
                 TO  ERR-POS                 OF PARM-SCZY1170-ARG1
      *----------  リターンコード
               MOVE  CNS-RET-CD-ORAERR
                 TO  RTN-CD                  OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
               MOVE  SQLCODE
                 TO  DETAIL-RTN-CD           OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
               MOVE  "1"
                 TO  DETAIL-RTN-CD-FLG       OF PARM-SCZY1170-ARG1
      *----------  フリーメッセージ
               MOVE  WK-SQL-CONNECT
                 TO  FREE-MSG                OF PARM-SCZY1170-ARG1
               PERFORM  ERR-RTN
           END-IF.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*****  ＤＢ接続処理  END  *****".
      *-----------------------------------------------------------------
       DB-CONNECT-EXT.
           EXIT.
      ******************************************************************
      *                 テーブルID取得処理
      ******************************************************************
       SCZY1160-RTN           SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*****  SCZY1160処理  START  *****"
      *-----------------------------------------------------------------
           INITIALIZE  WK-KYOUTUU-RTNPKG
      *----------  利用会社コード
           MOVE  "C000"
             TO  RIYO-CMP-CD                 OF PARM-SCZY1160-ARG1
      *---------- テーブルID
           MOVE  CNS-TBL-TKDYAA53
             TO  TBL-ID                      OF PARM-SCZY1160-ARG1(1)
           MOVE  CNS-TBL-TKDYAA56
             TO  TBL-ID                      OF PARM-SCZY1160-ARG1(2)
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "RIYO-CMP-CD             OF PARM-SCZY1160-ARG1=["
      D              RIYO-CMP-CD             OF PARM-SCZY1160-ARG1"]"
      D    DISPLAY  "TBL-ID                  OF PARM-SCZY1160-ARG1(1)=["
      D              TBL-ID                  OF PARM-SCZY1160-ARG1(1)"]"
      D    DISPLAY  "TBL-ID                  OF PARM-SCZY1160-ARG1(2)=["
      D              TBL-ID                  OF PARM-SCZY1160-ARG1(2)"]"
      D    DISPLAY  "CALL テーブルID取得ルーチンSCZY1160 開始"
      *-----------------------------------------------------------------
           CALL  "SCZY1160"               USING  PARM-SCZY1160-INOUT
                                                 WK-KYOUTUU-RTNPKG
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "CALL テーブルID取得ルーチンSCZY1160 終了"
      D    DISPLAY  "RTN-CD                  OF PARM-SCZY1160-RTNPKG=["
      D              RTN-CD                  OF WK-KYOUTUU-RTNPKG
      D                             (COUNTER OF WK-KYOUTUU-RTNPKG)"]"
      *-----------------------------------------------------------------
           IF  RTN-CD                        OF WK-KYOUTUU-RTNPKG
                                    (COUNTER OF WK-KYOUTUU-RTNPKG)
               = CNS-RET-CD-NORMAL
           THEN
               MOVE  HENSYUGO-TBL-ID         OF PARM-SCZY1160-ARG2(1)
                 TO  WK-TAB-TKDYAA53
               MOVE  HENSYUGO-TBL-ID         OF PARM-SCZY1160-ARG2(2)
                 TO  WK-TAB-TKDYAA56
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "WK-TAB-TKDYAA53=["WK-TAB-TKDYAA53"]"
      D    DISPLAY  "WK-TAB-TKDYAA56=["WK-TAB-TKDYAA56"]"
      *-----------------------------------------------------------------
           ELSE
      *----------  エラー検知プログラム名
               MOVE  CNS-PROGRAM-ID
                 TO  ERR-PGM-ID              OF PARM-SCZY1170-ARG1
      *----------  ポジション
               MOVE  "0004"
                 TO  ERR-POS                 OF PARM-SCZY1170-ARG1
      *----------  リターンコード
               MOVE  CNS-RET-CD-SYSERR
                 TO  RTN-CD                  OF PARM-SCZY1170-ARG1
               MOVE  WK-KYOUTUU-RTNPKG       TO  PARM-SCZY1170-RTNPKG
               PERFORM  ERR-RTN
           END-IF.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*****  SCZY1160処理  END  *****".
      *-----------------------------------------------------------------
       SCZY1160-EXT.
           EXIT.
      ******************************************************************
      *               主処理
      ******************************************************************
       MAIN-RTN               SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "****  MAIN-RTN  START  ****"
      *-----------------------------------------------------------------
      *----------  環境変数から、SAITEKIファイルのパスを取得する
           PERFORM  GET-PATH-RTN
      *----------  最適化対象ファイルをオーペンする
           PERFORM  OPEN-FILE-RTN
      *----------  最適化対象ファイルを読み取る処理
           PERFORM  SAITEKIFILE-READ-RTN
      *----------  最適化対象ファイルをクロースする
           PERFORM  CLOSE-FILE-RTN
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "****  未処理テーブル件数取得処理  START  ****"
      *-----------------------------------------------------------------
      *----------  カーソル1をオープンする
           PERFORM  CURSOR1-OPEN-RTN
      *----------  カーソル1をフェッチする
           PERFORM  CURSOR1-FETCH-RTN
      *----------  カーソル1をクロースする
           PERFORM  CURSOR1-CLOSE-RTN
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "****  未処理テーブル件数取得処理  END  ****"
      D    DISPLAY  "未処理テーブル件数 =["H-NO-SAITEKI-COUNT"]"
      *-----------------------------------------------------------------
           IF  H-NO-SAITEKI-COUNT = 0
           THEN
      *----------  最適化管理明細テーブルを初期化する
               PERFORM  INIT-TKDYAA56-RTN
           ELSE
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "処理継続"
      *-----------------------------------------------------------------
               CONTINUE
           END-IF.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "****  MAIN-RTN  END  ****".
      *-----------------------------------------------------------------
       MAIN-EXT.
           EXIT.
      ******************************************************************
      *         環境変数から、最適化対象ファイルのパスを取得する
      ******************************************************************
       GET-PATH-RTN           SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "***  環境変数取得処理  START  ***"
      *-----------------------------------------------------------------
           DISPLAY  "APL_TMP_DIR"  UPON  ENV-NAME
           ACCEPT  FILE-PATH   FROM  ENV-VALUE  ON EXCEPTION
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "環境変数取得 エラー"
      *-------------------<DEBUG>---------------------------------------
      *----------  エラー検知プログラム名
               MOVE  CNS-PROGRAM-ID
                 TO  ERR-PGM-ID              OF PARM-SCZY1170-ARG1
      *----------  ポジション
               MOVE  "0005"
                 TO  ERR-POS                 OF PARM-SCZY1170-ARG1
      *----------  リターンコード
               MOVE  CNS-RET-CD-SYSERR
                 TO  RTN-CD                  OF PARM-SCZY1170-ARG1
               PERFORM  ERR-RTN
           END-ACCEPT.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "FILE-PATH= ["FILE-PATH"]"
      D    DISPLAY  "***  環境変数取得処理  END  ***".
      *-----------------------------------------------------------------
       GET-PATH-EXT.
           EXIT.
      ******************************************************************
      *               最適化対象ファイルをオープンする
      ******************************************************************
       OPEN-FILE-RTN          SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*** 最適化対象ファイルをオープンする START ***"
      *-----------------------------------------------------------------
           STRING   FILE-PATH
                    "/OPTTABLE_"
                    WK-KJN-YMD
                    ".lst"
             DELIMITED BY SPACE INTO  FILENAME
           OPEN INPUT SAITEKI-FILE
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "FILENAME =["FILENAME"]"
      D    DISPLAY  "ST-SAITEKIFILE(OPEN) =["ST-SAITEKIFILE"]"
      *-----------------------------------------------------------------
           IF  ST-SAITEKIFILE  = "00"
           THEN
               MOVE    CNS-ON          TO  FLG-FILE-OPEN
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "FLG-FILE-OPEN=["FLG-FILE-OPEN"]"
      *-----------------------------------------------------------------
           ELSE
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "ファイルをオーペンする エラー"
      *-------------------<DEBUG>---------------------------------------
      *----------  エラー検知プログラム名
               MOVE  CNS-PROGRAM-ID
                 TO  ERR-PGM-ID              OF PARM-SCZY1170-ARG1
      *----------  ポジション
               MOVE  "0006"
                 TO  ERR-POS                 OF PARM-SCZY1170-ARG1
      *----------  リターンコード
               MOVE  CNS-RET-200
                 TO  RTN-CD                  OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
               MOVE  FUNCTION NUMVAL(ST-SAITEKIFILE)
                 TO  DETAIL-RTN-CD           OF PARM-SCZY1170-ARG1
      *----------  フリーメッセージ
               MOVE  FILENAME
                 TO  FREE-MSG                OF PARM-SCZY1170-ARG1   
               PERFORM  ERR-RTN
           END-IF.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*** ファイルをオープンする END ***".
      *-----------------------------------------------------------------
       OPEN-FILE-EXT.
           EXIT.
      ******************************************************************
      *                 最適化対象ファイルを読み取る処理
      ******************************************************************
       SAITEKIFILE-READ-RTN   SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "**** 最適化対象ファイルを読み取る処理 START ****"
      *-----------------------------------------------------------------
           PERFORM  WITH TEST BEFORE  UNTIL FLG-READ-END = 1
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "**** READ START ****"
      *-----------------------------------------------------------------
             READ SAITEKI-FILE
               AT END
                     MOVE  1            TO  FLG-READ-END
             END-READ
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "ST-SAITEKIFILE(READ)=["ST-SAITEKIFILE"]"
      D    DISPLAY  "FLG-READ-END     =["FLG-READ-END"]"
      D    DISPLAY  "**** READ END ****"
      *-----------------------------------------------------------------
             IF  FLG-READ-END NOT = 1
             THEN
                 IF  ST-SAITEKIFILE = "00"
                 THEN
                     MOVE  SAITEKI-JIKAN     OF SAITEKIFILE-REC(1:20)
                       TO  WK-TBL-ID
      *              MOVE  SAITEKI-JIKAN     OF SAITEKIFILE-REC(22:14)
      *                TO  WK-KAISI-JIKAN
      *              MOVE  SAITEKI-JIKAN     OF SAITEKIFILE-REC(37:14)
      *                TO  WK-SYURYO-JIKAN
                     MOVE  SAITEKI-JIKAN     OF SAITEKIFILE-REC(22:30)
                       TO  WK-PAR-NAME
                     MOVE  SAITEKI-JIKAN     OF SAITEKIFILE-REC(53:14)
                       TO  WK-KAISI-JIKAN
                     MOVE  SAITEKI-JIKAN     OF SAITEKIFILE-REC(68:14)
                       TO  WK-SYURYO-JIKAN
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "テーブルID =["WK-TBL-ID"]"
      D    DISPLAY  "パーティション名 =["WK-PAR-NAME"]"
      D    DISPLAY  "開始時間 =["WK-KAISI-JIKAN"]"
      D    DISPLAY  "終了時間 =["WK-SYURYO-JIKAN"]"
      *-----------------------------------------------------------------
      *----------  最適化結果更新処理
                     PERFORM  UPD-SAITEKI-RTN
      *----------  優先順位初期化
                     PERFORM  INIT-YUSEN-RTN
                 ELSE
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY "最適化対象ファイルを読み エラー !"
      *-----------------------------------------------------------------
      *----------  エラー検知プログラム名
                     MOVE  CNS-PROGRAM-ID
                       TO  ERR-PGM-ID        OF PARM-SCZY1170-ARG1
      *----------  ポジション
                     MOVE  "0007"
                       TO  ERR-POS           OF PARM-SCZY1170-ARG1
      *----------  リターンコード
                     MOVE  CNS-RET-210
                       TO  RTN-CD            OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
                     MOVE  FUNCTION NUMVAL(ST-SAITEKIFILE)
                       TO  DETAIL-RTN-CD     OF PARM-SCZY1170-ARG1
      *----------  フリーメッセージ
                     MOVE  FILENAME
                       TO  FREE-MSG          OF PARM-SCZY1170-ARG1   
                     PERFORM  ERR-RTN
                 END-IF
             END-IF
           END-PERFORM.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "**** 最適化対象ファイルを読み取る処理 END ****".
      *-----------------------------------------------------------------
       SAITEKIFILE-READ-EXT.
           EXIT.
      ******************************************************************
      *                最適化結果更新処理
      ******************************************************************
       UPD-SAITEKI-RTN        SECTION.
      *------------------------DEBUG------------------------------------
      D    DISPLAY  "***  最適化結果更新処理  START ***"
      *-----------------------------------------------------------------
      *----------  ＳＱＬ文作成
           MOVE  CNS-PROGRAM-ID    TO  WK-PROGRAM-ID
      *------------------------DEBUG------------------------------------
      D    DISPLAY  "基準日 =["WK-KJN-YMD"]"
      D    DISPLAY  "プログラムID =["WK-PROGRAM-ID"]"
      *-----------------------------------------------------------------
           MOVE  1  TO  SQLSTMT-LEN
      *----------  ＳＱＬ文作成
           STRING  "UPDATE "
      *            WK-TAB-TKDYAA53
                   WK-TAB-TKDYAA56
                   " SET "
                   " PRIO = 99, "
                   " SAITEKI_JIKOU_KBN = '1', "
                   " KAISI_JIKAN = TO_DATE(:V1, 'YYYYMMDDHH24MISS'), "
                   " SYURYO_JIKAN = TO_DATE(:V2, 'YYYYMMDDHH24MISS'), "
                   " SYORI_YMD = :V3, "
                   " UPD_DATE = SYSDATE, "
                   " UPD_LOGIN_CMP_CD = ' ', "
                   " UPD_SID = ' ', "
                   " UPD_PGMID = :V4 "
                   " WHERE "
                   " TBL_ID = :V5 "
                   " AND PARTITION_NAME = :V6"
               DELIMITED BY SIZE
               INTO  SQLSTMT-ARR
               POINTER  SQLSTMT-LEN
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "SQLSTMT-ARR=["SQLSTMT-ARR"]"
      D    DISPLAY  "SQLSTMT-LEN=["SQLSTMT-LEN"]"
      *-----------------------------------------------------------------
            STRING  SQLSTMT-ARR
                   "[V1:" WK-KAISI-JIKAN "]"
                   "[V2:" WK-SYURYO-JIKAN "]"
      *            "[V4:" WK-KJN-YMD  "]"
      *            "[V3:" WK-PROGRAM-ID  "]"
                   "[V3:" WK-KJN-YMD  "]"
                   "[V4:" WK-PROGRAM-ID  "]"
                   "[V5:" WK-TBL-ID  "]"
                   "[V6:" WK-PAR-NAME  "]"
               DELIMITED  BY  SIZE
               INTO  WK-ERR-SQLSTMT
      *----------  ＳＱＬ文 PREPARE
           EXEC SQL
               PREPARE S01  FROM :SQLSTMT
           END-EXEC
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "SQLCODE(PREPARE)=["SQLCODE"]"
      *-----------------------------------------------------------------
           IF  SQLCODE  NOT = CNS-SQL-NORMAL
           THEN
      *----------  エラー検知プログラム名
               MOVE  CNS-PROGRAM-ID
                 TO  ERR-PGM-ID              OF PARM-SCZY1170-ARG1
      *----------  ポジション
               MOVE  "0008"
                 TO  ERR-POS                 OF PARM-SCZY1170-ARG1
      *----------  リターンコード
               MOVE  CNS-RET-CD-ORAERR
                 TO  RTN-CD                  OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
               MOVE  SQLCODE
                 TO  DETAIL-RTN-CD           OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
               MOVE  "1"
                 TO  DETAIL-RTN-CD-FLG       OF PARM-SCZY1170-ARG1
      *----------  フリーメッセージ
               MOVE  WK-ERR-SQLSTMT
                 TO  FREE-MSG                OF PARM-SCZY1170-ARG1
               PERFORM  ERR-RTN
           END-IF
           EXEC SQL EXECUTE S01
               USING :WK-KAISI-JIKAN,
                     :WK-SYURYO-JIKAN,
                     :WK-KJN-YMD,
                     :WK-PROGRAM-ID,
      *              :WK-TBL-ID
                     :WK-TBL-ID,
                     :WK-PAR-NAME
           END-EXEC
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "SQLCODE(UPD)=["SQLCODE"]"
      *-----------------------------------------------------------------
           IF  SQLCODE  NOT = CNS-SQL-NORMAL
           THEN
      *----------  エラー検知プログラム名
               MOVE  CNS-PROGRAM-ID
                 TO  ERR-PGM-ID              OF PARM-SCZY1170-ARG1
      *----------  ポジション
               MOVE  "0009"
                 TO  ERR-POS                 OF PARM-SCZY1170-ARG1
      *----------  リターンコード
               MOVE  CNS-RET-CD-ORAERR
                 TO  RTN-CD                  OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
               MOVE  SQLCODE
                 TO  DETAIL-RTN-CD           OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
               MOVE  "1"
                 TO  DETAIL-RTN-CD-FLG       OF PARM-SCZY1170-ARG1
      *----------  フリーメッセージ
               MOVE  WK-ERR-SQLSTMT
                 TO  FREE-MSG                OF PARM-SCZY1170-ARG1
               PERFORM  ERR-RTN
           ELSE
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "処理継続"
      *-----------------------------------------------------------------
               CONTINUE
           END-IF.
      *------------------------DEBUG------------------------------------
      D    DISPLAY  "*****  最適化結果更新処理  END  *****".
      *-----------------------------------------------------------------
       UPD-SAITEKI-EXT.
           EXIT.
      ******************************************************************
      *                   優先順位初期化
      ******************************************************************
       INIT-YUSEN-RTN         SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "***  優先順位初期化  START ***"
      D    DISPLAY  "テーブルID =["WK-TBL-ID"]"
      *-----------------------------------------------------------------
           MOVE  WK-TBL-ID(1:8)    TO  WK-TBL-ID
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "テーブルIDの前８桁 =["WK-TBL-ID"]"
      *-----------------------------------------------------------------
      *----------  ＳＱＬ文作成
           INITIALIZE  SQLSTMT
           MOVE  1                           TO SQLSTMT-LEN
      *----------  ＳＱＬ文作成
           STRING  "UPDATE "
                   WK-TAB-TKDYAA53
                   " SET "
                   " PRIO = 99, "
                   " UPD_DATE = SYSDATE, "
                   " UPD_LOGIN_CMP_CD = ' ', "
                   " UPD_SID = ' ', "
                   " UPD_PGMID = :V1 "
                   " WHERE "
                   " TRIM(TBL_ID) = TRIM(:V2)"
               DELIMITED BY SIZE
               INTO  SQLSTMT-ARR
               POINTER  SQLSTMT-LEN
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "SQLSTMT-ARR=["SQLSTMT-ARR"]"
      D    DISPLAY  "SQLSTMT-LEN=["SQLSTMT-LEN"]"
      *-----------------------------------------------------------------
           STRING  SQLSTMT-ARR
                  "[V1:" WK-PROGRAM-ID  "]"
                  "[V2:" WK-TBL-ID  "]"
               DELIMITED  BY  SIZE
               INTO  WK-ERR-SQLSTMT
      *----------  ＳＱＬ文 PREPARE
           EXEC SQL
               PREPARE S02  FROM :SQLSTMT
           END-EXEC
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "SQLCODE(PREPARE)=["SQLCODE"]"
      *-----------------------------------------------------------------
           IF  SQLCODE  NOT = CNS-SQL-NORMAL
           THEN
      *----------  エラー検知プログラム名
               MOVE  CNS-PROGRAM-ID
                 TO  ERR-PGM-ID              OF PARM-SCZY1170-ARG1
      *----------  ポジション
               MOVE  "0012"
                 TO  ERR-POS                 OF PARM-SCZY1170-ARG1
      *----------  リターンコード
               MOVE  CNS-RET-CD-ORAERR
                 TO  RTN-CD                  OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
               MOVE  SQLCODE
                 TO  DETAIL-RTN-CD           OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
               MOVE  "1"
                 TO  DETAIL-RTN-CD-FLG       OF PARM-SCZY1170-ARG1
      *----------  フリーメッセージ
               MOVE  WK-ERR-SQLSTMT
                 TO  FREE-MSG                OF PARM-SCZY1170-ARG1
               PERFORM  ERR-RTN
           END-IF
           EXEC SQL EXECUTE S02
               USING :WK-PROGRAM-ID,
                     :WK-TBL-ID
           END-EXEC
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "SQLCODE(UPD)=["SQLCODE"]"
      *-----------------------------------------------------------------
           IF  SQLCODE  NOT = CNS-SQL-NORMAL
           THEN
      *----------  エラー検知プログラム名
               MOVE  CNS-PROGRAM-ID
                 TO  ERR-PGM-ID              OF PARM-SCZY1170-ARG1
      *----------  ポジション
               MOVE  "0013"
                 TO  ERR-POS                 OF PARM-SCZY1170-ARG1
      *----------  リターンコード
               MOVE  CNS-RET-CD-ORAERR
                 TO  RTN-CD                  OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
               MOVE  SQLCODE
                 TO  DETAIL-RTN-CD           OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
               MOVE  "1"
                 TO  DETAIL-RTN-CD-FLG       OF PARM-SCZY1170-ARG1
      *----------  フリーメッセージ
               MOVE  WK-ERR-SQLSTMT
                 TO  FREE-MSG                OF PARM-SCZY1170-ARG1
               PERFORM  ERR-RTN
           ELSE
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "優先順位初期化継続"
      *-----------------------------------------------------------------
               CONTINUE
           END-IF.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "***  優先順位初期化  END  ***".
      *-----------------------------------------------------------------
       INIT-YUSEN-EXT.
           EXIT.
      ******************************************************************
      *               ファイルをクロースする
      ******************************************************************
       CLOSE-FILE-RTN         SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*** 最適化対象ファイルをクロースする START ***"
      *-----------------------------------------------------------------
           CLOSE  SAITEKI-FILE
           MOVE  CNS-OFF            TO  FLG-FILE-OPEN
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "ST-SAITEKIFILE(CLOSE)=["ST-SAITEKIFILE"]"
      D    DISPLAY  "FLG-FILE-OPEN=["FLG-FILE-OPEN"]"
      *-----------------------------------------------------------------
           IF  ST-SAITEKIFILE NOT = "00"
           THEN
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "最適化対象ファイルをクロースする エラー"
      *-------------------<DEBUG>---------------------------------------
      *----------  エラー検知プログラム名
               MOVE  CNS-PROGRAM-ID
                 TO  ERR-PGM-ID              OF PARM-SCZY1170-ARG1
      *----------  ポジション
               MOVE  "0010"
                 TO  ERR-POS                 OF PARM-SCZY1170-ARG1
      *----------  リターンコード
               MOVE  CNS-RET-230
                 TO  RTN-CD                  OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
               MOVE  FUNCTION NUMVAL(ST-SAITEKIFILE)
                 TO  DETAIL-RTN-CD           OF PARM-SCZY1170-ARG1
      *----------  フリーメッセージ
               MOVE  FILENAME
                 TO  FREE-MSG                OF PARM-SCZY1170-ARG1
               PERFORM  ERR-RTN
           END-IF.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*** 最適化対象ファイルをクロースする END ***".
      *-----------------------------------------------------------------
       CLOSE-FILE-EXT.
           EXIT.
      ******************************************************************
      *                 カーソル1 OPEN処理
      ******************************************************************
       CURSOR1-OPEN-RTN       SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "***  カーソル1 OPEN処理  START  ***"
      D    DISPLAY  "WK-TAB-TKDYAA56=["WK-TAB-TKDYAA56"]"
      *-----------------------------------------------------------------
      *----------  ＳＱＬ文作成
           MOVE  1                           TO SQLSTMT1-LEN
           STRING  "SELECT "
                   " COUNT(1) "
                   " FROM "
                   WK-TAB-TKDYAA56
                   " WHERE "
                   "SAITEKI_JIKOU_KBN = ' '"
               DELIMITED BY SIZE
               INTO  SQLSTMT1-ARR
               POINTER  SQLSTMT1-LEN
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "SQLSTMT1-ARR =["SQLSTMT1-ARR"]"
      D    DISPLAY  "SQLSTMT1-LEN =["SQLSTMT1-LEN"]"
      *-----------------------------------------------------------------
      *----------  ＳＱＬ文 PREPARE
           EXEC SQL
               PREPARE S03  FROM :SQLSTMT1
           END-EXEC
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "SQLCODE(PREPARE)=["SQLCODE"]"
      *-----------------------------------------------------------------
           IF  SQLCODE  NOT = CNS-SQL-NORMAL
           THEN
      *----------  エラー検知プログラム名
               MOVE  CNS-PROGRAM-ID
                 TO  ERR-PGM-ID              OF PARM-SCZY1170-ARG1
      *----------  ポジション
               MOVE  "0014"
                 TO  ERR-POS                 OF PARM-SCZY1170-ARG1
      *----------  リターンコード
               MOVE  CNS-RET-CD-ORAERR
                 TO  RTN-CD                  OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
               MOVE  SQLCODE
                 TO  DETAIL-RTN-CD           OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
               MOVE  "1"
                 TO  DETAIL-RTN-CD-FLG       OF PARM-SCZY1170-ARG1
      *----------  フリーメッセージ
               MOVE  SQLSTMT1-ARR
                 TO  FREE-MSG                OF PARM-SCZY1170-ARG1
               PERFORM  ERR-RTN
           END-IF
      *----------  カーソル1 DECLARE
           EXEC SQL
               DECLARE CR1 CURSOR  FOR S03
           END-EXEC
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "SQLCODE(DECLARE)=["SQLCODE"]"
      *-----------------------------------------------------------------
           IF  SQLCODE  NOT = CNS-SQL-NORMAL
           THEN
      *----------  エラー検知プログラム名
               MOVE  CNS-PROGRAM-ID
                 TO  ERR-PGM-ID              OF PARM-SCZY1170-ARG1
      *----------  ポジション
               MOVE  "0015"
                 TO  ERR-POS                 OF PARM-SCZY1170-ARG1
      *----------  リターンコード
               MOVE  CNS-RET-CD-ORAERR
                 TO  RTN-CD                  OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
               MOVE  SQLCODE
                 TO  DETAIL-RTN-CD           OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
               MOVE  "1"
                 TO  DETAIL-RTN-CD-FLG       OF PARM-SCZY1170-ARG1
      *----------  フリーメッセージ
               MOVE  SQLSTMT1-ARR
                 TO  FREE-MSG                OF PARM-SCZY1170-ARG1
               PERFORM  ERR-RTN
           END-IF
      *----------  カーソル1 OPEN
           EXEC SQL
               OPEN  CR1
           END-EXEC
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "SQLCODE(OPEN)=["SQLCODE"]"
      *-----------------------------------------------------------------
           IF  SQLCODE  NOT = CNS-SQL-NORMAL
           THEN
      *----------  エラー検知プログラム名
               MOVE  CNS-PROGRAM-ID
                 TO  ERR-PGM-ID              OF PARM-SCZY1170-ARG1
      *----------  ポジション
               MOVE  "0016"
                 TO  ERR-POS                 OF PARM-SCZY1170-ARG1
      *----------  リターンコード
               MOVE  CNS-RET-CD-ORAERR
                 TO  RTN-CD                  OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
               MOVE  SQLCODE
                 TO  DETAIL-RTN-CD           OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
               MOVE  "1"
                 TO  DETAIL-RTN-CD-FLG       OF PARM-SCZY1170-ARG1
      *----------  フリーメッセージ
               MOVE  SQLSTMT1-ARR
                 TO  FREE-MSG                OF PARM-SCZY1170-ARG1
               PERFORM  ERR-RTN
           ELSE
               MOVE  CNS-ON                  TO FLG-CLOSE
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "FLG-CLOSE=["FLG-CLOSE"]"
      *-----------------------------------------------------------------
           END-IF.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "***  カーソル1 OPEN処理  END  ***".
      *-----------------------------------------------------------------
       CURSOR1-OPEN-EXT.
           EXIT.
      ******************************************************************
      *                 カーソル1 FETCH処理
      ******************************************************************
       CURSOR1-FETCH-RTN      SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "***  カーソル1 FETCH処理  START  ***"
      *-----------------------------------------------------------------
      *----------  カーソル1 FETCH
           EXEC SQL
               FETCH  CR1
                INTO :H-NO-SAITEKI-COUNT
           END-EXEC
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "SQLCODE(FETCH)=["SQLCODE"]"
      *-----------------------------------------------------------------
           IF  SQLCODE = CNS-SQL-NORMAL
           THEN
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "未処理テーブル件数  NOT = 0"
      *-----------------------------------------------------------------
               CONTINUE
           ELSE
      *----------  エラー検知プログラム名
               MOVE  CNS-PROGRAM-ID
                 TO  ERR-PGM-ID              OF PARM-SCZY1170-ARG1
      *----------  ポジション
               MOVE  "0017"
                 TO  ERR-POS                 OF PARM-SCZY1170-ARG1
      *----------  リターンコード
               MOVE  CNS-RET-CD-ORAERR
                 TO  RTN-CD                  OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
               MOVE  SQLCODE
                 TO  DETAIL-RTN-CD           OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
               MOVE  "1"
                 TO  DETAIL-RTN-CD-FLG       OF PARM-SCZY1170-ARG1
      *----------  フリーメッセージ
               MOVE  SQLSTMT1-ARR
                 TO  FREE-MSG                OF PARM-SCZY1170-ARG1
               PERFORM  ERR-RTN
           END-IF.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "***  カーソル1 FETCH処理  END  ***".
      *-----------------------------------------------------------------
       CURSOR1-FETCH-EXT.
           EXIT.
      ******************************************************************
      *                カーソル1 CLOSE処理
      ******************************************************************
       CURSOR1-CLOSE-RTN      SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "***  カーソル1 CLOSE処理  START  ***"
      *-----------------------------------------------------------------
           EXEC SQL
               CLOSE CR1
           END-EXEC
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "SQLCODE(CLOSE)=["SQLCODE"]"
      *-----------------------------------------------------------------
           IF  SQLCODE = CNS-SQL-NORMAL
           THEN
               MOVE  CNS-OFF                 TO FLG-CLOSE
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "FLG-CLOSE=["FLG-CLOSE"]"
      *-----------------------------------------------------------------
           ELSE
      *----------  エラー検知プログラム名
               MOVE  CNS-PROGRAM-ID
                 TO  ERR-PGM-ID              OF PARM-SCZY1170-ARG1
      *----------  ポジション
               MOVE  "0018"
                 TO  ERR-POS                 OF PARM-SCZY1170-ARG1
      *----------  リターンコード
               MOVE  CNS-RET-CD-ORAERR
                 TO  RTN-CD                  OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
               MOVE  SQLCODE
                 TO  DETAIL-RTN-CD           OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
               MOVE  "1"
                 TO  DETAIL-RTN-CD-FLG       OF PARM-SCZY1170-ARG1
      *----------  フリーメッセージ
               MOVE  SQLSTMT1-ARR
                 TO  FREE-MSG                OF PARM-SCZY1170-ARG1
               PERFORM  ERR-RTN
           END-IF.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "***  カーソル1 CLOSE処理  END  ***".
      *-----------------------------------------------------------------
       CURSOR1-CLOSE-EXT.
           EXIT.
      ******************************************************************
      *                最適化管理明細テーブルを初期化する
      ******************************************************************
       INIT-TKDYAA56-RTN      SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "***  最適化管理明細テーブルを初期化する  START ***"
      *-----------------------------------------------------------------
      *----------  ＳＱＬ文作成
           MOVE  CNS-PROGRAM-ID              TO WK-PROGRAM-ID
           MOVE  1  TO  SQLSTMT2-LEN
      *----------  ＳＱＬ文作成
           STRING  "UPDATE "
                   WK-TAB-TKDYAA56
                   " SET "
                   " SAITEKI_JIKOU_KBN = ' ', "
                   " KAISI_JIKAN = null, "
                   " SYURYO_JIKAN = null, "
                   " SYORI_YMD = 0, "
                   " UPD_DATE = SYSDATE, "
                   " UPD_LOGIN_CMP_CD = ' ', "
                   " UPD_SID = ' ', "
                   " UPD_PGMID = '"
                   WK-PROGRAM-ID
                   "' WHERE "
                   " SYORI_YMD <> "
                   WK-KJN-YMD
               DELIMITED BY SIZE
               INTO  SQLSTMT2-ARR
               POINTER  SQLSTMT2-LEN
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "SQLSTMT2-ARR=["SQLSTMT2-ARR"]"
      D    DISPLAY  "SQLSTMT2-LEN=["SQLSTMT2-LEN"]"
      *-----------------------------------------------------------------
      *----------  ＳＱＬ文 PREPARE
           EXEC SQL
               PREPARE S04  FROM :SQLSTMT2
           END-EXEC
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "SQLCODE(PREPARE)=["SQLCODE"]"
      *-----------------------------------------------------------------
           IF  SQLCODE  NOT = CNS-SQL-NORMAL
               AND SQLCODE  NOT = CNS-SQL-NOTFOUND
           THEN
      *----------  エラー検知プログラム名
               MOVE  CNS-PROGRAM-ID
                 TO  ERR-PGM-ID              OF PARM-SCZY1170-ARG1
      *----------  ポジション
               MOVE  "0019"
                 TO  ERR-POS                 OF PARM-SCZY1170-ARG1
      *----------  リターンコード
               MOVE  CNS-RET-CD-ORAERR
                 TO  RTN-CD                  OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
               MOVE  SQLCODE
                 TO  DETAIL-RTN-CD           OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
               MOVE  "1"
                 TO  DETAIL-RTN-CD-FLG       OF PARM-SCZY1170-ARG1
      *----------  フリーメッセージ
               MOVE  SQLSTMT2-ARR
                 TO  FREE-MSG                OF PARM-SCZY1170-ARG1
               PERFORM  ERR-RTN
           END-IF
           EXEC SQL
               EXECUTE S04
           END-EXEC
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "SQLCODE(UPD)=["SQLCODE"]"
      *-----------------------------------------------------------------
           IF  SQLCODE  NOT = CNS-SQL-NORMAL
               AND SQLCODE  NOT = CNS-SQL-NOTFOUND
           THEN
      *----------  エラー検知プログラム名
               MOVE  CNS-PROGRAM-ID
                 TO  ERR-PGM-ID              OF PARM-SCZY1170-ARG1
      *----------  ポジション
               MOVE  "0020"
                 TO  ERR-POS                 OF PARM-SCZY1170-ARG1
      *----------  リターンコード
               MOVE  CNS-RET-CD-ORAERR
                 TO  RTN-CD                  OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコード
               MOVE  SQLCODE
                 TO  DETAIL-RTN-CD           OF PARM-SCZY1170-ARG1
      *----------  詳細リターンコードデコードフラグ
               MOVE  "1"
                 TO  DETAIL-RTN-CD-FLG       OF PARM-SCZY1170-ARG1
      *----------  フリーメッセージ
               MOVE  SQLSTMT2-ARR
                 TO  FREE-MSG                OF PARM-SCZY1170-ARG1
               PERFORM  ERR-RTN
           ELSE
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "最適化管理明細テーブルの初期化継続"
      *-----------------------------------------------------------------
               CONTINUE
           END-IF.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "***  最適化管理明細テーブルを初期化する  END  ***".
      *-----------------------------------------------------------------
       INIT-TKDYAA56-EXT.
           EXIT.
      ******************************************************************
      *       後処理
      ******************************************************************
       END-RTN                SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*****   後処理  START  *****"
      *-----------------------------------------------------------------
      *----------  ORACLE接続終了(COMMIT)処理
           PERFORM  DB-COMMIT-RTN
      *----------  バッチ終了メッセージ出力ルーチン処理
           PERFORM  SCZY1170-RTN
           PERFORM  SCZY7020-RTN
           MOVE  0  TO  WK-RTN-STS.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "WK-RTN-STS =["WK-RTN-STS"]"
      D    DISPLAY  "*****   後処理  END  *****".
      *-----------------------------------------------------------------
       END-EXT.
           EXIT.
      ******************************************************************
      *       ORACLE接続終了(COMMIT)処理
      ******************************************************************
       DB-COMMIT-RTN          SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*****   ORACLE接続終了(COMMIT)  START  *****"
      *-----------------------------------------------------------------
           EXEC SQL
               COMMIT  RELEASE
           END-EXEC
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "COMMIT(SQLCODE)=["SQLCODE"]"
      *-----------------------------------------------------------------
           IF  SQLCODE NOT= CNS-SQL-NORMAL
           THEN
               STRING  "COMMIT  RELEASE"
                       DELIMITED BY SIZE
                       INTO  WK-COMMIT-RELEASE
      *---------- エラー検知プログラム名
               MOVE  CNS-PROGRAM-ID
                 TO  ERR-PGM-ID              OF PARM-SCZY1170-ARG1
      *---------- ポジション
               MOVE  "0011"
                 TO  ERR-POS                 OF PARM-SCZY1170-ARG1
      *---------- リターンコード
               MOVE  CNS-RET-CD-ORAERR
                 TO  RTN-CD                  OF PARM-SCZY1170-ARG1
      *---------- 詳細リターンコード
               MOVE  SQLCODE
                 TO  DETAIL-RTN-CD           OF PARM-SCZY1170-ARG1
      *---------- 詳細リターンコードデコードフラグ
               MOVE  "1"
                 TO  DETAIL-RTN-CD-FLG       OF PARM-SCZY1170-ARG1
      *---------- フリーメッセージ
               MOVE  WK-COMMIT-RELEASE
                 TO  FREE-MSG                OF PARM-SCZY1170-ARG1
               PERFORM  ERR-RTN
           END-IF.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*****  ORACLE接続終了(COMMIT)  END  *****".
      *-----------------------------------------------------------------
       DB-COMMIT-EXT.
           EXIT.
      ******************************************************************
      *       リターンパッケージセットルーチン処理
      ******************************************************************
       SCZY1170-RTN           SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*****   SCZY1170処理  START  *****"
      *-----------------------------------------------------------------
           MOVE  CNS-RET-CD-NORMAL
             TO  RTN-CD                      OF PARM-SCZY1170-ARG1
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "RTN-CD                  OF PARM-SCZY1170-ARG1=["
      D              RTN-CD                  OF PARM-SCZY1170-ARG1"]"
      D    DISPLAY  "CALL リターンパッケージセットルーチンSCZY1170 開始"
      *-----------------------------------------------------------------
           CALL  "SCZY1170"  USING  PARM-SCZY1170-INOUT
                                    PARM-SCZY1170-RTNPKG.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "CALL リターンパッケージセットルーチンSCZY1170 終了"
      D    DISPLAY  "PARM-SCZY1170-RTNPKG=["PARM-SCZY1170-RTNPKG"]"
      D    DISPLAY  "*****   SCZY1170処理  END  *****".
      *-----------------------------------------------------------------
       SCZY1170-EXT.
           EXIT.
      ******************************************************************
      *       バッチ終了メッセージ出力ルーチン処理
      ******************************************************************
       SCZY7020-RTN           SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "*****   SCZY7020処理  START  *****"
      *-----------------------------------------------------------------
           INITIALIZE  WK-KYOUTUU-RTNPKG
      *---------- エラー種別
           MOVE  "N"
             TO  ERR-SYUBETU                 OF PARM-SCZY7020-ARG1
      *---------- プログラム名
           MOVE  CNS-PROGRAM-ID
             TO  PGM-ID                      OF PARM-SCZY7020-ARG2
      *---------- 利用会社コード
           MOVE  "C000"
             TO  RIYO-CMP-CD                 OF PARM-SCZY7020-ARG2
      *---------- 基準日
           MOVE  WK-KJN-YMD
             TO  KJN-YMD                     OF PARM-SCZY7020-ARG2
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "ERR-SYUBETU             OF PARM-SCZY7020-ARG1=["
      D              ERR-SYUBETU             OF PARM-SCZY7020-ARG1"]"
      D    DISPLAY  "PGM-ID                  OF PARM-SCZY7020-ARG2=["
      D              PGM-ID                  OF PARM-SCZY7020-ARG2"]"
      D    DISPLAY  "RIYO-CMP-CD             OF PARM-SCZY7020-ARG2=["
      D              RIYO-CMP-CD             OF PARM-SCZY7020-ARG2"]"
      D    DISPLAY  "KJN-YMD                 OF PARM-SCZY7020-ARG2=["
      D              KJN-YMD                 OF PARM-SCZY7020-ARG2"]"
      D    DISPLAY  "JIKOU-SYORI-ID          OF PARM-SCZY7020-ARG2=["
      D              JIKOU-SYORI-ID          OF PARM-SCZY7020-ARG2"]"
      D    DISPLAY  "KIDOU-ID                OF PARM-SCZY7020-ARG2=["
      D              KIDOU-ID                OF PARM-SCZY7020-ARG2"]"
      D    DISPLAY  "CALL バッチ終了メッセージ出力ルーチンSCZY7020 開始"
      *-----------------------------------------------------------------
           CALL  "SCZY7020"  USING  PARM-SCZY7020-INOUT
                                    WK-KYOUTUU-RTNPKG.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "CALL バッチ終了メッセージ出力ルーチンSCZY7020 終了"
      D    DISPLAY  "*****   SCZY7020処理  END  *****".
      *-----------------------------------------------------------------
       SCZY7020-EXT.
           EXIT.
      ******************************************************************
      *               エラー処理
      ******************************************************************
       ERR-RTN                SECTION.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "ERR-PGM-ID              OF PARM-SCZY1170-ARG1=["
      D              ERR-PGM-ID              OF PARM-SCZY1170-ARG1"]"
      D    DISPLAY  "ERR-POS                 OF PARM-SCZY1170-ARG1=["
      D              ERR-POS                 OF PARM-SCZY1170-ARG1"]"
      D    DISPLAY  "RTN-CD                  OF PARM-SCZY1170-ARG1=["
      D              RTN-CD                  OF PARM-SCZY1170-ARG1"]"
      D    DISPLAY  "DETAIL-RTN-CD           OF PARM-SCZY1170-ARG1=["
      D              DETAIL-RTN-CD           OF PARM-SCZY1170-ARG1"]"
      D    DISPLAY  "DETAIL-RTN-CD-FLG       OF PARM-SCZY1170-ARG1=["
      D              DETAIL-RTN-CD-FLG       OF PARM-SCZY1170-ARG1"]"
      D    DISPLAY  "FREE-MSG                OF PARM-SCZY1170-ARG1=["
      D              FREE-MSG                OF PARM-SCZY1170-ARG1"]"
      D    DISPLAY  "*****   ERR-RTN  START  *****"
      D    DISPLAY  "FLG-CLOSE=["FLG-CLOSE"]"
      *-----------------------------------------------------------------
           IF  FLG-CLOSE = CNS-ON
           THEN
               EXEC SQL
                   CLOSE CR1
               END-EXEC
               MOVE  CNS-OFF            TO  FLG-CLOSE
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "SQLCODE(CLOSE1) =["SQLCODE"]"
      D    DISPLAY  "FLG-CLOSE =["FLG-CLOSE"]"
      *-----------------------------------------------------------------
           END-IF
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "FLG-FILE-OPEN=["FLG-FILE-OPEN"]"
      *-----------------------------------------------------------------
           IF  FLG-FILE-OPEN  = CNS-ON
           THEN
               CLOSE  SAITEKI-FILE
               MOVE  CNS-OFF            TO  FLG-FILE-OPEN
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "ST-SAITEKIFILE(CLOSE)=["ST-SAITEKIFILE"]"
      D    DISPLAY  "FLG-FILE-OPEN=["FLG-FILE-OPEN"]"
      *-----------------------------------------------------------------
           END-IF
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "FLG-ORA-CONNECT =["FLG-ORA-CONNECT"]"
      *-----------------------------------------------------------------
      *----------  DBロールバック処理
           IF  FLG-ORA-CONNECT = CNS-ON
           THEN
      *----------  使用したカーソルの全クローズ
               EXEC SQL
                   ROLLBACK RELEASE
               END-EXEC
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "SQLCODE(ROLLBACK)=["SQLCODE"]"
      *-----------------------------------------------------------------
           END-IF
           MOVE   CNS-OFF     TO  FLG-ORA-CONNECT
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "FLG-ORA-CONNECT =["FLG-ORA-CONNECT"]"
      D    DISPLAY  "*****   SCZY1170処理  START  *****"
      D    DISPLAY  "CALL リターンパッケージセットルーチンSCZY1170 開始"
      *-----------------------------------------------------------------
           CALL  "SCZY1170"               USING  PARM-SCZY1170-INOUT
                                                 PARM-SCZY1170-RTNPKG
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "CALL リターンパッケージセットルーチンSCZY1170 終了"
      D    DISPLAY  "PARM-SCZY1170-RTNPKG=["PARM-SCZY1170-RTNPKG"]"
      D    DISPLAY  "*****   SCZY1170処理  END  *****"
      D    DISPLAY  "*****   SCZY7020処理  START  *****"
      *-----------------------------------------------------------------
           INITIALIZE  WK-KYOUTUU-RTNPKG
      *---------- エラー種別
           MOVE  "S"
             TO  ERR-SYUBETU                 OF PARM-SCZY7020-ARG1
      *---------- プログラム名
           MOVE  CNS-PROGRAM-ID
             TO  PGM-ID                      OF PARM-SCZY7020-ARG2
      *---------- 利用会社コード
           MOVE  "C000"
             TO  RIYO-CMP-CD                 OF PARM-SCZY7020-ARG2
      *---------- 基準日
           MOVE  WK-KJN-YMD
             TO  KJN-YMD                     OF PARM-SCZY7020-ARG2
           MOVE  PARM-SCZY1170-RTNPKG        TO  WK-KYOUTUU-RTNPKG
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "ERR-SYUBETU             OF PARM-SCZY7020-ARG1=["
      D              ERR-SYUBETU             OF PARM-SCZY7020-ARG1"]"
      D    DISPLAY  "PGM-ID                  OF PARM-SCZY7020-ARG2=["
      D              PGM-ID                  OF PARM-SCZY7020-ARG2"]"
      D    DISPLAY  "RIYO-CMP-CD             OF PARM-SCZY7020-ARG2=["
      D              RIYO-CMP-CD             OF PARM-SCZY7020-ARG2"]"
      D    DISPLAY  "KJN-YMD                 OF PARM-SCZY7020-ARG2=["
      D              KJN-YMD                 OF PARM-SCZY7020-ARG2"]"
      D    DISPLAY  "JIKOU-SYORI-ID          OF PARM-SCZY7020-ARG2=["
      D              JIKOU-SYORI-ID          OF PARM-SCZY7020-ARG2"]"
      D    DISPLAY  "KIDOU-ID                OF PARM-SCZY7020-ARG2=["
      D              KIDOU-ID                OF PARM-SCZY7020-ARG2"]"
      D    DISPLAY  "PARM-SCZY7020-RTNPKG=["WK-KYOUTUU-RTNPKG"]"
      D    DISPLAY  "CALL バッチ終了メッセージ出力ルーチンSCZY7020 開始"
      *-----------------------------------------------------------------
           CALL  "SCZY7020"               USING  PARM-SCZY7020-INOUT
                                                 WK-KYOUTUU-RTNPKG
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "CALL バッチ終了メッセージ出力ルーチンSCZY7020 終了"
      D    DISPLAY  "*****   SCZY7020処理  END  *****"
      *-----------------------------------------------------------------
           MOVE    16              TO  WK-RTN-STS.
      *-------------------<DEBUG>---------------------------------------
      D    DISPLAY  "WK-RTN-STS=["WK-RTN-STS"]"
      D    DISPLAY  "*****   ERR-RTN  END  *****".
      *-----------------------------------------------------------------
       ERR-EXT.
           STOP RUN WK-RTN-STS.
